<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Year Parameter' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Year (Country Compilation) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
        <calculation class='tableau' formula='2022' />
        <members>
          <member value='1999' />
          <member value='2000' />
          <member value='2001' />
          <member value='2002' />
          <member value='2003' />
          <member value='2004' />
          <member value='2005' />
          <member value='2006' />
          <member value='2007' />
          <member value='2008' />
          <member value='2009' />
          <member value='2010' />
          <member value='2011' />
          <member value='2012' />
          <member value='2013' />
          <member value='2014' />
          <member value='2015' />
          <member value='2016' />
          <member value='2017' />
          <member value='2018' />
          <member value='2019' />
          <member value='2020' />
          <member value='2021' />
          <member value='2022' />
          <member value='2023' />
        </members>
      </column>
    </datasource>
    <datasource caption='Food Value+ (FoodImports - edit)' inline='true' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Food Imports Analysis' name='excel-direct.1tloa5c0462rxk147761g1yz4zs7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/emile/Documents/UMD/BMSO758V/FoodImports Analysis.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Animals' table='[Animals$]' type='table'>
          <columns gridOrigin='A1:F676:no:A1:F676:0' header='yes' outcome='6'>
            <column datatype='string' name='Main' ordinal='0' />
            <column datatype='string' name='Group' ordinal='1' />
            <column datatype='string' name='Category' ordinal='2' />
            <column datatype='string' name='Metric' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='Imports' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='US Food Value' table='[&apos;US Food Value$&apos;]' type='table'>
            <columns gridOrigin='A1:F451:no:A1:F451:0' header='yes' outcome='2'>
              <column datatype='string' name='Group' ordinal='0' />
              <column datatype='string' name='Category' ordinal='1' />
              <column datatype='string' name='Metric' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Value' ordinal='4' />
              <column datatype='real' name='Value %' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Animals' table='[Animals$]' type='table'>
            <columns gridOrigin='A1:F676:no:A1:F676:0' header='yes' outcome='6'>
              <column datatype='string' name='Main' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
              <column datatype='string' name='Metric' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='real' name='Imports' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Beverages' table='[Beverages$]' type='table'>
            <columns gridOrigin='A1:F1301:no:A1:F1301:0' header='yes' outcome='6'>
              <column datatype='string' name='Main' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
              <column datatype='string' name='Metric' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='real' name='Imports' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Cocoa' table='[Cocoa$]' type='table'>
            <columns gridOrigin='A1:F1026:no:A1:F1026:0' header='yes' outcome='6'>
              <column datatype='string' name='Main' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Metric' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='real' name='Imports' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Coffee' table='[Coffee$]' type='table'>
            <columns gridOrigin='A1:F1301:no:A1:F1301:0' header='yes' outcome='2'>
              <column datatype='string' name='Main' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
              <column datatype='string' name='Metric' ordinal='3' />
              <column datatype='string' name='Year' ordinal='4' />
              <column datatype='real' name='Import' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Country Compilation' table='[&apos;Country Compilation$&apos;]' type='table'>
            <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='2'>
              <column datatype='string' name='Main' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
              <column datatype='string' name='Metric' ordinal='3' />
              <column datatype='date' date-parse-format='mmss.SSS|#|#|HHmmss.SSS|#|#|yyyy|#|#|ss,SSS' name='Year' ordinal='4' />
              <column datatype='real' name='Imports' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Dairy' table='[Dairy$]' type='table'>
            <columns gridOrigin='A1:F1226:no:A1:F1226:0' header='yes' outcome='2'>
              <column datatype='string' name='Main' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Metric' ordinal='3' />
              <column datatype='string' name='Year' ordinal='4' />
              <column datatype='real' name='Import' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Fish' table='[Fish$]' type='table'>
            <columns gridOrigin='A1:F1251:no:A1:F1251:0' header='yes' outcome='2'>
              <column datatype='string' name='Main' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Metric' ordinal='3' />
              <column datatype='string' name='Year' ordinal='4' />
              <column datatype='real' name='Import' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Fruit' table='[Fruit$]' type='table'>
            <columns gridOrigin='A1:F1601:no:A1:F1601:0' header='yes' outcome='2'>
              <column datatype='string' name='Main' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Metric' ordinal='3' />
              <column datatype='string' name='Year' ordinal='4' />
              <column datatype='real' name='Import' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Grains' table='[Grains$]' type='table'>
            <columns gridOrigin='A1:F1401:no:A1:F1401:0' header='yes' outcome='2'>
              <column datatype='string' name='Group' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Metric' ordinal='2' />
              <column datatype='string' name='Year' ordinal='3' />
              <column datatype='real' name='Import' ordinal='4' />
              <column datatype='string' name='Main' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Meats' table='[Meats$]' type='table'>
            <columns gridOrigin='A1:F1151:no:A1:F1151:0' header='yes' outcome='2'>
              <column datatype='string' name='Main' ordinal='0' />
              <column datatype='string' name='Group' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='Metric' ordinal='3' />
              <column datatype='string' name='Year' ordinal='4' />
              <column datatype='real' name='Import' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Nuts' table='[Nuts$]' type='table'>
            <columns gridOrigin='A1:F1301:no:A1:F1301:0' header='yes' outcome='2'>
              <column datatype='string' name='Group' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Metric' ordinal='2' />
              <column datatype='string' name='Year' ordinal='3' />
              <column datatype='real' name='Import' ordinal='4' />
              <column datatype='string' name='Main' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Other' table='[Other$]' type='table'>
            <columns gridOrigin='A1:F1101:no:A1:F1101:0' header='yes' outcome='2'>
              <column datatype='string' name='Group' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Metric' ordinal='2' />
              <column datatype='string' name='Year' ordinal='3' />
              <column datatype='real' name='Import' ordinal='4' />
              <column datatype='string' name='Main' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Prices' table='[Prices$]' type='table'>
            <columns gridOrigin='A1:F326:no:A1:F326:0' header='yes' outcome='2'>
              <column datatype='string' name='Group' ordinal='0' />
              <column datatype='string' name='Category' ordinal='1' />
              <column datatype='string' name='Metric' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Prices' ordinal='4' />
              <column datatype='real' name='Inflation %' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Sweets' table='[Sweets$]' type='table'>
            <columns gridOrigin='A1:F1026:no:A1:F1026:0' header='yes' outcome='2'>
              <column datatype='string' name='Group' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Metric' ordinal='2' />
              <column datatype='string' name='Year' ordinal='3' />
              <column datatype='real' name='Import' ordinal='4' />
              <column datatype='string' name='Main' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='US Food Volume' table='[&apos;US Food Volume$&apos;]' type='table'>
            <columns gridOrigin='A1:F351:no:A1:F351:0' header='yes' outcome='2'>
              <column datatype='string' name='Group' ordinal='0' />
              <column datatype='string' name='Category' ordinal='1' />
              <column datatype='string' name='Metric' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='real' name='Volume' ordinal='4' />
              <column datatype='real' name='Volume %' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='VegOils' table='[VegOils$]' type='table'>
            <columns gridOrigin='A1:F1351:no:A1:F1351:0' header='yes' outcome='2'>
              <column datatype='string' name='Group' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Metric' ordinal='2' />
              <column datatype='string' name='Year' ordinal='3' />
              <column datatype='real' name='Import' ordinal='4' />
              <column datatype='string' name='Main' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Vegetables' table='[Vegetables$]' type='table'>
            <columns gridOrigin='A1:F1126:no:A1:F1126:0' header='yes' outcome='2'>
              <column datatype='string' name='Group' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='string' name='Metric' ordinal='2' />
              <column datatype='string' name='Year' ordinal='3' />
              <column datatype='real' name='Import' ordinal='4' />
              <column datatype='string' name='Main' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category (Animals)]' value='[Animals].[Category]' />
          <map key='[Category (Beverages)]' value='[Beverages].[Category]' />
          <map key='[Category (Coffee)]' value='[Coffee].[Category]' />
          <map key='[Category (Country Compilation)]' value='[Country Compilation].[Category]' />
          <map key='[Category (Prices)]' value='[Prices].[Category]' />
          <map key='[Category (US Food Volume)]' value='[US Food Volume].[Category]' />
          <map key='[Category]' value='[US Food Value].[Category]' />
          <map key='[Country (Dairy)]' value='[Dairy].[Country]' />
          <map key='[Country (Fish)]' value='[Fish].[Country]' />
          <map key='[Country (Fruit)]' value='[Fruit].[Country]' />
          <map key='[Country (Grains)]' value='[Grains].[Country]' />
          <map key='[Country (Meats)]' value='[Meats].[Country]' />
          <map key='[Country (Nuts)]' value='[Nuts].[Country]' />
          <map key='[Country (Other)]' value='[Other].[Country]' />
          <map key='[Country (Sweets)]' value='[Sweets].[Country]' />
          <map key='[Country (VegOils)]' value='[VegOils].[Country]' />
          <map key='[Country (Vegetables)]' value='[Vegetables].[Country]' />
          <map key='[Country]' value='[Cocoa].[Country]' />
          <map key='[Group (Animals)]' value='[Animals].[Group]' />
          <map key='[Group (Beverages)]' value='[Beverages].[Group]' />
          <map key='[Group (Cocoa)]' value='[Cocoa].[Group]' />
          <map key='[Group (Coffee)]' value='[Coffee].[Group]' />
          <map key='[Group (Country Compilation)]' value='[Country Compilation].[Group]' />
          <map key='[Group (Dairy)]' value='[Dairy].[Group]' />
          <map key='[Group (Fish)]' value='[Fish].[Group]' />
          <map key='[Group (Fruit)]' value='[Fruit].[Group]' />
          <map key='[Group (Grains)]' value='[Grains].[Group]' />
          <map key='[Group (Meats)]' value='[Meats].[Group]' />
          <map key='[Group (Nuts)]' value='[Nuts].[Group]' />
          <map key='[Group (Other)]' value='[Other].[Group]' />
          <map key='[Group (Prices)]' value='[Prices].[Group]' />
          <map key='[Group (Sweets)]' value='[Sweets].[Group]' />
          <map key='[Group (US Food Volume)]' value='[US Food Volume].[Group]' />
          <map key='[Group (VegOils)]' value='[VegOils].[Group]' />
          <map key='[Group (Vegetables)]' value='[Vegetables].[Group]' />
          <map key='[Group]' value='[US Food Value].[Group]' />
          <map key='[Import (Dairy)]' value='[Dairy].[Import]' />
          <map key='[Import (Fish)]' value='[Fish].[Import]' />
          <map key='[Import (Fruit)]' value='[Fruit].[Import]' />
          <map key='[Import (Grains)]' value='[Grains].[Import]' />
          <map key='[Import (Meats)]' value='[Meats].[Import]' />
          <map key='[Import (Nuts)]' value='[Nuts].[Import]' />
          <map key='[Import (Other)]' value='[Other].[Import]' />
          <map key='[Import (Sweets)]' value='[Sweets].[Import]' />
          <map key='[Import (VegOils)]' value='[VegOils].[Import]' />
          <map key='[Import (Vegetables)]' value='[Vegetables].[Import]' />
          <map key='[Import]' value='[Coffee].[Import]' />
          <map key='[Imports (Beverages)]' value='[Beverages].[Imports]' />
          <map key='[Imports (Cocoa)]' value='[Cocoa].[Imports]' />
          <map key='[Imports (Country Compilation)]' value='[Country Compilation].[Imports]' />
          <map key='[Imports]' value='[Animals].[Imports]' />
          <map key='[Inflation %]' value='[Prices].[Inflation %]' />
          <map key='[Main (Beverages)]' value='[Beverages].[Main]' />
          <map key='[Main (Cocoa)]' value='[Cocoa].[Main]' />
          <map key='[Main (Coffee)]' value='[Coffee].[Main]' />
          <map key='[Main (Country Compilation)]' value='[Country Compilation].[Main]' />
          <map key='[Main (Dairy)]' value='[Dairy].[Main]' />
          <map key='[Main (Fish)]' value='[Fish].[Main]' />
          <map key='[Main (Fruit)]' value='[Fruit].[Main]' />
          <map key='[Main (Grains)]' value='[Grains].[Main]' />
          <map key='[Main (Meats)]' value='[Meats].[Main]' />
          <map key='[Main (Nuts)]' value='[Nuts].[Main]' />
          <map key='[Main (Other)]' value='[Other].[Main]' />
          <map key='[Main (Sweets)]' value='[Sweets].[Main]' />
          <map key='[Main (VegOils)]' value='[VegOils].[Main]' />
          <map key='[Main (Vegetables)]' value='[Vegetables].[Main]' />
          <map key='[Main]' value='[Animals].[Main]' />
          <map key='[Metric (Animals)]' value='[Animals].[Metric]' />
          <map key='[Metric (Beverages)]' value='[Beverages].[Metric]' />
          <map key='[Metric (Cocoa)]' value='[Cocoa].[Metric]' />
          <map key='[Metric (Coffee)]' value='[Coffee].[Metric]' />
          <map key='[Metric (Country Compilation)]' value='[Country Compilation].[Metric]' />
          <map key='[Metric (Dairy)]' value='[Dairy].[Metric]' />
          <map key='[Metric (Fish)]' value='[Fish].[Metric]' />
          <map key='[Metric (Fruit)]' value='[Fruit].[Metric]' />
          <map key='[Metric (Grains)]' value='[Grains].[Metric]' />
          <map key='[Metric (Meats)]' value='[Meats].[Metric]' />
          <map key='[Metric (Nuts)]' value='[Nuts].[Metric]' />
          <map key='[Metric (Other)]' value='[Other].[Metric]' />
          <map key='[Metric (Prices)]' value='[Prices].[Metric]' />
          <map key='[Metric (Sweets)]' value='[Sweets].[Metric]' />
          <map key='[Metric (US Food Volume)]' value='[US Food Volume].[Metric]' />
          <map key='[Metric (VegOils)]' value='[VegOils].[Metric]' />
          <map key='[Metric (Vegetables)]' value='[Vegetables].[Metric]' />
          <map key='[Metric]' value='[US Food Value].[Metric]' />
          <map key='[Prices]' value='[Prices].[Prices]' />
          <map key='[Value %]' value='[US Food Value].[Value %]' />
          <map key='[Value]' value='[US Food Value].[Value]' />
          <map key='[Volume %]' value='[US Food Volume].[Volume %]' />
          <map key='[Volume]' value='[US Food Volume].[Volume]' />
          <map key='[Year (Animals)]' value='[Animals].[Year]' />
          <map key='[Year (Beverages)]' value='[Beverages].[Year]' />
          <map key='[Year (Cocoa)]' value='[Cocoa].[Year]' />
          <map key='[Year (Coffee)]' value='[Coffee].[Year]' />
          <map key='[Year (Country Compilation)]' value='[Country Compilation].[Year]' />
          <map key='[Year (Dairy)]' value='[Dairy].[Year]' />
          <map key='[Year (Fish)]' value='[Fish].[Year]' />
          <map key='[Year (Fruit)]' value='[Fruit].[Year]' />
          <map key='[Year (Grains)]' value='[Grains].[Year]' />
          <map key='[Year (Meats)]' value='[Meats].[Year]' />
          <map key='[Year (Nuts)]' value='[Nuts].[Year]' />
          <map key='[Year (Other)]' value='[Other].[Year]' />
          <map key='[Year (Prices)]' value='[Prices].[Year]' />
          <map key='[Year (Sweets)]' value='[Sweets].[Year]' />
          <map key='[Year (US Food Volume)]' value='[US Food Volume].[Year]' />
          <map key='[Year (VegOils)]' value='[VegOils].[Year]' />
          <map key='[Year (Vegetables)]' value='[Vegetables].[Year]' />
          <map key='[Year]' value='[US Food Value].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[US Food Value]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[US Food Value]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric]</local-name>
            <parent-name>[US Food Value]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[US Food Value]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[US Food Value]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value %]</local-name>
            <parent-name>[US Food Value]</parent-name>
            <remote-alias>Value %</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US Food Value]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F451:no:A1:F451:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main]</local-name>
            <parent-name>[Animals]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Animals)]</local-name>
            <parent-name>[Animals]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (Animals)]</local-name>
            <parent-name>[Animals]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Animals)]</local-name>
            <parent-name>[Animals]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Animals)]</local-name>
            <parent-name>[Animals]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imports]</local-name>
            <parent-name>[Animals]</parent-name>
            <remote-alias>Imports</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Animals]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F676:no:A1:F676:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Beverages)]</local-name>
            <parent-name>[Beverages]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Beverages)]</local-name>
            <parent-name>[Beverages]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (Beverages)]</local-name>
            <parent-name>[Beverages]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Beverages)]</local-name>
            <parent-name>[Beverages]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Beverages)]</local-name>
            <parent-name>[Beverages]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imports (Beverages)]</local-name>
            <parent-name>[Beverages]</parent-name>
            <remote-alias>Imports</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Beverages]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1301:no:A1:F1301:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Cocoa)]</local-name>
            <parent-name>[Cocoa]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Cocoa)]</local-name>
            <parent-name>[Cocoa]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Cocoa]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Cocoa)]</local-name>
            <parent-name>[Cocoa]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Cocoa)]</local-name>
            <parent-name>[Cocoa]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imports (Cocoa)]</local-name>
            <parent-name>[Cocoa]</parent-name>
            <remote-alias>Imports</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cocoa]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1026:no:A1:F1026:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Coffee)]</local-name>
            <parent-name>[Coffee]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Coffee)]</local-name>
            <parent-name>[Coffee]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (Coffee)]</local-name>
            <parent-name>[Coffee]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Coffee)]</local-name>
            <parent-name>[Coffee]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Coffee)]</local-name>
            <parent-name>[Coffee]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import]</local-name>
            <parent-name>[Coffee]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Coffee]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1301:no:A1:F1301:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Country Compilation]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Country Compilation)]</local-name>
            <parent-name>[Country Compilation]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Country Compilation)]</local-name>
            <parent-name>[Country Compilation]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (Country Compilation)]</local-name>
            <parent-name>[Country Compilation]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Country Compilation)]</local-name>
            <parent-name>[Country Compilation]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (Country Compilation)]</local-name>
            <parent-name>[Country Compilation]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>34</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imports (Country Compilation)]</local-name>
            <parent-name>[Country Compilation]</parent-name>
            <remote-alias>Imports</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Dairy)]</local-name>
            <parent-name>[Dairy]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Dairy)]</local-name>
            <parent-name>[Dairy]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Dairy)]</local-name>
            <parent-name>[Dairy]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Dairy)]</local-name>
            <parent-name>[Dairy]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Dairy)]</local-name>
            <parent-name>[Dairy]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (Dairy)]</local-name>
            <parent-name>[Dairy]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Dairy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1226:no:A1:F1226:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Fish)]</local-name>
            <parent-name>[Fish]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Fish)]</local-name>
            <parent-name>[Fish]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Fish)]</local-name>
            <parent-name>[Fish]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Fish)]</local-name>
            <parent-name>[Fish]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Fish)]</local-name>
            <parent-name>[Fish]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (Fish)]</local-name>
            <parent-name>[Fish]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Fish]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1251:no:A1:F1251:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Fruit)]</local-name>
            <parent-name>[Fruit]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Fruit)]</local-name>
            <parent-name>[Fruit]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Fruit)]</local-name>
            <parent-name>[Fruit]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Fruit)]</local-name>
            <parent-name>[Fruit]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Fruit)]</local-name>
            <parent-name>[Fruit]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (Fruit)]</local-name>
            <parent-name>[Fruit]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Fruit]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1601:no:A1:F1601:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Grains)]</local-name>
            <parent-name>[Grains]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Grains)]</local-name>
            <parent-name>[Grains]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Grains)]</local-name>
            <parent-name>[Grains]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Grains)]</local-name>
            <parent-name>[Grains]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (Grains)]</local-name>
            <parent-name>[Grains]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Grains)]</local-name>
            <parent-name>[Grains]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Grains]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1401:no:A1:F1401:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Meats)]</local-name>
            <parent-name>[Meats]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Meats)]</local-name>
            <parent-name>[Meats]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Meats)]</local-name>
            <parent-name>[Meats]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Meats)]</local-name>
            <parent-name>[Meats]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Meats)]</local-name>
            <parent-name>[Meats]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (Meats)]</local-name>
            <parent-name>[Meats]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Meats]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1151:no:A1:F1151:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Nuts)]</local-name>
            <parent-name>[Nuts]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Nuts)]</local-name>
            <parent-name>[Nuts]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Nuts)]</local-name>
            <parent-name>[Nuts]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Nuts)]</local-name>
            <parent-name>[Nuts]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (Nuts)]</local-name>
            <parent-name>[Nuts]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Nuts)]</local-name>
            <parent-name>[Nuts]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Nuts]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1301:no:A1:F1301:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Other)]</local-name>
            <parent-name>[Other]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Other)]</local-name>
            <parent-name>[Other]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Other)]</local-name>
            <parent-name>[Other]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Other)]</local-name>
            <parent-name>[Other]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (Other)]</local-name>
            <parent-name>[Other]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Other)]</local-name>
            <parent-name>[Other]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>77</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Other]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1101:no:A1:F1101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Prices)]</local-name>
            <parent-name>[Prices]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (Prices)]</local-name>
            <parent-name>[Prices]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Prices)]</local-name>
            <parent-name>[Prices]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>80</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Prices)]</local-name>
            <parent-name>[Prices]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>81</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prices]</local-name>
            <parent-name>[Prices]</parent-name>
            <remote-alias>Prices</remote-alias>
            <ordinal>82</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inflation %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inflation %]</local-name>
            <parent-name>[Prices]</parent-name>
            <remote-alias>Inflation %</remote-alias>
            <ordinal>83</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Prices]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F326:no:A1:F326:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Sweets)]</local-name>
            <parent-name>[Sweets]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>84</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Sweets)]</local-name>
            <parent-name>[Sweets]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>85</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Sweets)]</local-name>
            <parent-name>[Sweets]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>86</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Sweets)]</local-name>
            <parent-name>[Sweets]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>87</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (Sweets)]</local-name>
            <parent-name>[Sweets]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>88</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Sweets)]</local-name>
            <parent-name>[Sweets]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>89</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sweets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1026:no:A1:F1026:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (US Food Volume)]</local-name>
            <parent-name>[US Food Volume]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>90</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (US Food Volume)]</local-name>
            <parent-name>[US Food Volume]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>91</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (US Food Volume)]</local-name>
            <parent-name>[US Food Volume]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>92</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (US Food Volume)]</local-name>
            <parent-name>[US Food Volume]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>93</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[US Food Volume]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>94</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volume %]</local-name>
            <parent-name>[US Food Volume]</parent-name>
            <remote-alias>Volume %</remote-alias>
            <ordinal>95</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US Food Volume]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F351:no:A1:F351:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (VegOils)]</local-name>
            <parent-name>[VegOils]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>96</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (VegOils)]</local-name>
            <parent-name>[VegOils]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>97</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (VegOils)]</local-name>
            <parent-name>[VegOils]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>98</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (VegOils)]</local-name>
            <parent-name>[VegOils]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>99</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (VegOils)]</local-name>
            <parent-name>[VegOils]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>100</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (VegOils)]</local-name>
            <parent-name>[VegOils]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>101</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[VegOils]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1351:no:A1:F1351:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group (Vegetables)]</local-name>
            <parent-name>[Vegetables]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>102</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Vegetables)]</local-name>
            <parent-name>[Vegetables]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>103</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metric</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metric (Vegetables)]</local-name>
            <parent-name>[Vegetables]</parent-name>
            <remote-alias>Metric</remote-alias>
            <ordinal>104</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Vegetables)]</local-name>
            <parent-name>[Vegetables]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>105</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Import</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Import (Vegetables)]</local-name>
            <parent-name>[Vegetables]</parent-name>
            <remote-alias>Import</remote-alias>
            <ordinal>106</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main (Vegetables)]</local-name>
            <parent-name>[Vegetables]</parent-name>
            <remote-alias>Main</remote-alias>
            <ordinal>107</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Vegetables]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1126:no:A1:F1126:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[avg:Imports (Country Compilation):qk]&quot;' value='Average Imports' />
          <alias key='&quot;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[ctd:Group (Country Compilation):qk]&quot;' value='Number of Products' />
          <alias key='&quot;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]&quot;' value='Total Imported' />
        </aliases>
      </column>
      <column caption='Groupings' datatype='string' name='[Beverages]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Animals&quot;'>
            <value>&quot;Animals&quot;</value>
            <value>&quot;Dairy&quot;</value>
            <value>&quot;Fish and shellfish&quot;</value>
            <value>&quot;Live meat animals&quot;</value>
            <value>&quot;Meats&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Beverages&quot;'>
            <value>&quot;Beverages&quot;</value>
            <value>&quot;Beverages 3/&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Plants&quot;'>
            <value>&quot;Cocoa and chocolate&quot;</value>
            <value>&quot;Coffee, tea, and spices&quot;</value>
            <value>&quot;Fruits&quot;</value>
            <value>&quot;Grains&quot;</value>
            <value>&quot;Nuts&quot;</value>
            <value>&quot;Other edible products&quot;</value>
            <value>&quot;Plants&quot;</value>
            <value>&quot;Sugar and candy&quot;</value>
            <value>&quot;Vegetable oils&quot;</value>
            <value>&quot;Vegetables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Zero' datatype='integer' name='[Calculation_231090969879375873]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column caption='Display Year' datatype='real' name='[Calculation_231090970505551875]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Year] = [Parameters].[Year (Country Compilation) Parameter] THEN [Value]&#13;&#10;END' />
      </column>
      <column caption='Yearly Inc' datatype='real' name='[Calculation_231090970565545988]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF INDEX() &gt; 1 THEN SUM([Value]) - LOOKUP(SUM([Value]), -1) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Category (Beverages) (copy)' datatype='string' name='[Category (Beverages) (copy)_231090969779548160]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Category (Beverages)]' />
      </column>
      <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Beverages 3/&quot;' value='Beverages ' />
        </aliases>
      </column>
      <column datatype='string' name='[Country (Dairy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Fish)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Fruit)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Grains)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Meats)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Nuts)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Other)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Sweets)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (VegOils)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Vegetables)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Group (Beverages)1' datatype='string' name='[Group (Beverages)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Group (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
        <aliases>
          <alias key='&quot;Animal and other fats 4/&quot;' value='Animal and other fats' />
          <alias key='&quot;Bird eggs 3/&quot;' value='Bird eggs' />
          <alias key='&quot;Coffee beans, unroasted 1/&quot;' value='Coffee beans, unroasted' />
          <alias key='&quot;Coffee extracts and preparations 3/&quot;' value='Coffee extracts and preparations' />
          <alias key='&quot;Coffee, roasted and instant 2/&quot;' value='Coffee, roasted and instant' />
          <alias key='&quot;Confections 4/&quot;' value='Confections' />
          <alias key='&quot;Dried vegetables 3/&quot;' value='Dried vegetables' />
          <alias key='&quot;Dried, prepared or preserved fruit 3/&quot;' value='Dried, prepared or preserved fruit' />
          <alias key='&quot;Essential oils 3/&quot;' value='Essential oils' />
          <alias key='&quot;Fresh or chilled fruit 2/&quot;' value='Fresh or chilled fruit' />
          <alias key='&quot;Fresh or chilled red meats 2/&quot;' value='Fresh or chilled red meats' />
          <alias key='&quot;Fresh vegetables 2/&quot;' value='Fresh vegetables' />
          <alias key='&quot;Fruit juices 4/&quot;' value='Fruit juices' />
          <alias key='&quot;Liquors and liqueurs 5/&quot;' value='Liquors and liqueurs' />
          <alias key='&quot;Live poultry 2/&quot;' value='Live poultry' />
          <alias key='&quot;Milk and cream 2/&quot;' value='Milk and cream' />
          <alias key='&quot;Nonalcoholic beverages 4/&quot;' value='Nonalcoholic beverages' />
          <alias key='&quot;Oilseeds 4/&quot;' value='Oilseeds' />
          <alias key='&quot;Other edible products 5/6/&quot;' value='Other edible products' />
          <alias key='&quot;Other sweeteners and syrups 3/&quot;' value='Other sweeteners and syrups' />
          <alias key='&quot;Prepared fish and shellfish 4/&quot;' value='Prepared fish and shellfish' />
          <alias key='&quot;Prepared meats 2/&quot;' value='Prepared meats' />
          <alias key='&quot;Prepared or preserved vegetables 4/&quot;' value='Prepared or preserved vegetables' />
          <alias key='&quot;Refined vegetable oils 2/&quot;' value='Refined vegetable oils' />
          <alias key='&quot;Sauces, soups, prepared foods 1/2/&quot;' value='Sauces, soups, prepared foods' />
          <alias key='&quot;Shellfish, fresh or frozen 3/&quot;' value='Shellfish, fresh or frozen' />
          <alias key='&quot;Sugar, cane and beet 2/&quot;' value='Sugar, cane and beet' />
          <alias key='&quot;Total beverages 1/2/&quot;' value='Total beverages' />
          <alias key='&quot;Total coffee, tea, and spices&quot;' value='Coffee, tea, and spices' />
          <alias key='&quot;Total dairy products 1/&quot;' value='Total dairy products' />
          <alias key='&quot;Total fish and shellfish 1/&quot;' value='Total fish and shellfish' />
          <alias key='&quot;Total fruit and preparations 1/&quot;' value='Fruit and preparations' />
          <alias key='&quot;Total live animals 1/&quot;' value='Total live animals' />
          <alias key='&quot;Total red meats, fresh and frozen 1/&quot;' value='Total red meats, fresh and frozen' />
          <alias key='&quot;Total sweeteners and candy 1/&quot;' value='Sweeteners and candy' />
          <alias key='&quot;Total vegetable oils 1/&quot;' value='Vegetable oils' />
          <alias key='&quot;Total vegetables and preparations 1/&quot;' value='Vegetables and preparations' />
          <alias key='&quot;Tropical oils 3/&quot;' value='Tropical oils' />
          <alias key='&quot;Whole fish--fresh, chilled, or frozen 2/&quot;' value='Whole fish--fresh, chilled, or frozen' />
          <alias key='&quot;Wine 3/&quot;' value='Wine' />
        </aliases>
      </column>
      <column datatype='string' name='[Group (Fish)]' role='dimension' type='nominal' />
      <column datatype='real' name='[Imports (Country Compilation)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Inflation %]' role='measure' type='quantitative' />
      <column caption='Main Groupings' datatype='string' name='[Main (Country Compilation) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Main (Country Compilation)]' new-bin='true'>
          <bin default-name='false' value='&quot;Animals&quot;'>
            <value>&quot;Dairy&quot;</value>
            <value>&quot;Fish and shellfish 2/&quot;</value>
            <value>&quot;Live meat animals&quot;</value>
            <value>&quot;Meats&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Beverages&quot;'>
            <value>&quot;Beverages&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Miscellaneous&quot;'>
            <value>&quot;Bulk grains 2/&quot;</value>
            <value>&quot;Cashew nuts&quot;</value>
            <value>&quot;Cereal and bakery foods 4/5/&quot;</value>
            <value>&quot;Ground nuts&quot;</value>
            <value>&quot;Milled grain products 3/&quot;</value>
            <value>&quot;Prepared tree nuts 3/&quot;</value>
            <value>&quot;Rice and products&quot;</value>
            <value>&quot;Total grains and products 1/&quot;</value>
            <value>&quot;Total nuts 1/&quot;</value>
            <value>&quot;Tree nuts 2/&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Plants&quot;'>
            <value>&quot;Coffee, tea, and spices&quot;</value>
            <value>&quot;Fruits&quot;</value>
            <value>&quot;Other edible products&quot;</value>
            <value>&quot;Sugar and candy&quot;</value>
            <value>&quot;Vegetable oils&quot;</value>
            <value>&quot;Vegetables&quot;</value>
            <value>&quot;Wheat and products&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Main (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
        <aliases>
          <alias key='&quot;Bulk grains 2/&quot;' value='Bulk grains' />
          <alias key='&quot;Cereal and bakery foods 4/5/&quot;' value='Cereal and bakery foods' />
          <alias key='&quot;Fish and shellfish 2/&quot;' value='Fish and shellfish' />
          <alias key='&quot;Milled grain products 3/&quot;' value='Milled grain products' />
          <alias key='&quot;Prepared tree nuts 3/&quot;' value='Prepared tree nuts' />
          <alias key='&quot;Total grains and products 1/&quot;' value='Grains and products' />
          <alias key='&quot;Total nuts 1/&quot;' value='Nuts' />
          <alias key='&quot;Tree nuts 2/&quot;' value='Tree nuts' />
        </aliases>
      </column>
      <column caption='Metric (Beverages)1' datatype='string' name='[Metric (Beverages)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Metric (Country Compilation)]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Prices (Prices)' datatype='real' name='[Prices]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year (Animals)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (Beverages)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (Cocoa)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
      <column datatype='integer' name='[Year (Prices)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year (US Food Volume)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Animals' datatype='table' name='[__tableau_internal_object_id__].[Animals_83C65B388E4A42D4B29C176F708C20B1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Beverages' datatype='table' name='[__tableau_internal_object_id__].[Beverages_E6FCE5A79C0E43D0B29F424580883DD9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cocoa' datatype='table' name='[__tableau_internal_object_id__].[Cocoa_6742C29F9E70458782564D77674F13C6]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Coffee' datatype='table' name='[__tableau_internal_object_id__].[Coffee_69659793FC78417184D002A3BFB25A6C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Country Compilation' datatype='table' name='[__tableau_internal_object_id__].[Country Compilation_2008242F6DD0479FA12F4311E14E6869]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Dairy' datatype='table' name='[__tableau_internal_object_id__].[Dairy_198D5F2F45AA45C2BFD0C7703DA09EBD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Fish' datatype='table' name='[__tableau_internal_object_id__].[Fish_1A4133D6129D4EAC9694F327E30E528D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Fruit' datatype='table' name='[__tableau_internal_object_id__].[Fruit_383309BA59184FB4B6135577C2F3A4F9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Grains' datatype='table' name='[__tableau_internal_object_id__].[Grains_29F01D9E334B43DBB17EA7D09AEF30C8]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Meats' datatype='table' name='[__tableau_internal_object_id__].[Meats_3CF11647CB0C4B4181C1D158323C44D8]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Nuts' datatype='table' name='[__tableau_internal_object_id__].[Nuts_60EE19F71A6449BF8EA5C1F1B6A6C25B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Other' datatype='table' name='[__tableau_internal_object_id__].[Other_1363829C160F4572838EBD2BE83D667D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Prices' datatype='table' name='[__tableau_internal_object_id__].[Prices_A631BF5C9A66487DB318A15A833B265E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sweets' datatype='table' name='[__tableau_internal_object_id__].[Sweets_B6A75D8D289A4C38B29E01657AF4DBA2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US Food Value' datatype='table' name='[__tableau_internal_object_id__].[US Food Value_0A99C826A064406DAA4CAA4937F091D9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US Food Volume' datatype='table' name='[__tableau_internal_object_id__].[US Food Volume_99D9F2729D5F446DB05AEFA15662CF95]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='VegOils' datatype='table' name='[__tableau_internal_object_id__].[VegOils_0E502F3312254EC68819532926AEAD9F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Vegetables' datatype='table' name='[__tableau_internal_object_id__].[Vegetables_EA7728D301444653B35B85B2EF3A98A1]' role='measure' type='quantitative' />
      <column-instance column='[Imports (Country Compilation)]' derivation='Avg' name='[avg:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Group (Country Compilation)]' derivation='CountD' name='[ctd:Group (Country Compilation):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category (Beverages) (copy)_231090969779548160]' derivation='None' name='[none:Category (Beverages) (copy)_231090969779548160:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country (Fish)]' derivation='None' name='[none:Country (Fish):nk]' pivot='key' type='nominal' />
      <column-instance column='[Group (Country Compilation)]' derivation='None' name='[none:Group (Country Compilation):nk]' pivot='key' type='nominal' />
      <column-instance column='[Group (Fish)]' derivation='None' name='[none:Group (Fish):nk]' pivot='key' type='nominal' />
      <column-instance column='[Main (Country Compilation)]' derivation='None' name='[none:Main (Country Compilation):nk]' pivot='key' type='nominal' />
      <column-instance column='[Imports (Country Compilation)]' derivation='Sum' name='[sum:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inflation %]' derivation='Sum' name='[sum:Inflation %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Prices]' derivation='Sum' name='[sum:Prices:qk]' pivot='key' type='quantitative' />
      <group caption='Group Total Set' name='[Group (Country Compilation) Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total beverages 1/2/&quot;' />
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total coffee, tea, and spices&quot;' />
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total dairy products 1/&quot;' />
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total fish and shellfish 1/&quot;' />
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total fruit and preparations 1/&quot;' />
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total live animals 1/&quot;' />
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total red meats, fresh and frozen 1/&quot;' />
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total sweeteners and candy 1/&quot;' />
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total vegetable oils 1/&quot;' />
          <groupfilter function='member' level='[Group (Country Compilation)]' member='&quot;Total vegetables and preparations 1/&quot;' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country (Country Compilation),Main (Country Compilation))' hidden='true' name='[Tooltip (Country (Country Compilation),Main (Country Compilation))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category (Country Compilation)]' />
          <groupfilter function='level-members' level='[Main (Country Compilation)]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Country (Country Compilation),Main Groupings,Main (Country Compilation))' hidden='true' name='[Tooltip (Country (Country Compilation),Main Groupings,Main (Country Compilation))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category (Country Compilation)]' />
          <groupfilter function='level-members' level='[Main (Country Compilation) (group)]' />
          <groupfilter function='level-members' level='[Main (Country Compilation)]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Grains&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Animals&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coffee, tea, and spices&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other edible products&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Live meat animals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dairy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vegetable oils&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fish and shellfish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sugar and candy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meats&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;U.S. imports&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nuts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beverages 3/&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cocoa and chocolate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category (Beverages) (copy)_231090969779548160:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rest of world&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;World (quantity)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Group (Fish):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Fish fillets and mince&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shellfish, fresh or frozen 3/&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Whole fish--fresh, chilled, or frozen 2/&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Total fish and shellfish 1/&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prepared fish and shellfish 4/&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Group (Fish):nk]&#10;[none:Country (Fish):nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Fish fillets and mince&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Total fish and shellfish 1/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Shellfish, fresh or frozen 3/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Prepared fish and shellfish 4/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Whole fish--fresh, chilled, or frozen 2/&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Category (Country Compilation):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dollars per metric ton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rest of world&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dollars&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;World (quantity)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dollars per kiloliters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Main (Country Compilation):nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#31a1b3'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ground nuts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vegetable oils&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coffee, tea, and spices&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Fish and shellfish 2/&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milled grain products 3/&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Imported food prices 1/&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dairy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Total nuts 1/&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulk grains 2/&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sugar and candy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other edible products&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Live meat animals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prepared tree nuts 3/&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Total grains and products 1/&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tree nuts 2/&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cashew nuts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wheat and products&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rice and products&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meats&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cereal and bakery foods 4/5/&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Group (Country Compilation):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Coffee, roasted and instant 2/&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nonalcoholic beverages 4/&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Total fish and shellfish 1/&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Animal and other fats 4/&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frozen red meats and parts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shellfish, fresh or frozen 3/&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butter or spreads&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liquors and liqueurs 5/&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tea and mate&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dried, prepared or preserved fruit 3/&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other edible products 5/6/&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Total sweeteners and candy 1/&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Confections 4/&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nuts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Total fruit and preparations 1/&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cheese, fresh or processed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Live poultry 2/&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Total beverages 1/2/&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fresh vegetables 2/&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sauces, soups, prepared foods 1/2/&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yogurt, buttermilk, or whey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bananas and plantains&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frozen vegetables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spices&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fresh or chilled fruit 2/&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prepared or preserved vegetables 4/&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Whole fish--fresh, chilled, or frozen 2/&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coffee beans, unroasted 1/&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malt beer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Total coffee, tea, and spices&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Essential oils 3/&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other sweeteners and syrups 3/&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Total vegetable oils 1/&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fish fillets and mince&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prepared fish and shellfish 4/&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Total vegetables and preparations 1/&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fresh or chilled red meats 2/&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Refined vegetable oils 2/&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wine 3/&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frozen fruit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sheep and goats, live&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crude vegetable oils&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oilseeds 4/&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Total live animals 1/&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coffee extracts and preparations 3/&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Milk and cream 2/&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Total dairy products 1/&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bird eggs 3/&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fruit juices 4/&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar, cane and beet 2/&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fowl and other meats&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prepared meats 2/&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tropical oils 3/&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dried vegetables 3/&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Olive oil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Total red meats, fresh and frozen 1/&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bovine animals, live&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grains&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swine, live&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Beverages]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Animals&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plants&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Beverages]&#10;[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Animals&quot;</bucket>
                <bucket>&quot;Dairy&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6793bc'>
              <multibucket>
                <bucket>&quot;Animals&quot;</bucket>
                <bucket>&quot;Fish and shellfish&quot;</bucket>
              </multibucket>
            </map>
            <map to='#83afd2'>
              <multibucket>
                <bucket>&quot;Animals&quot;</bucket>
                <bucket>&quot;Live meat animals&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Animals&quot;</bucket>
                <bucket>&quot;Meats&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ae123a'>
              <multibucket>
                <bucket>&quot;Plants&quot;</bucket>
                <bucket>&quot;Vegetables&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Beverages&quot;</bucket>
                <bucket>&quot;Beverages&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c51d3b'>
              <multibucket>
                <bucket>&quot;Plants&quot;</bucket>
                <bucket>&quot;Vegetable oils&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d9303f'>
              <multibucket>
                <bucket>&quot;Plants&quot;</bucket>
                <bucket>&quot;Sugar and candy&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e84746'>
              <multibucket>
                <bucket>&quot;Plants&quot;</bucket>
                <bucket>&quot;Other edible products&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f26250'>
              <multibucket>
                <bucket>&quot;Plants&quot;</bucket>
                <bucket>&quot;Nuts&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f77a65'>
              <multibucket>
                <bucket>&quot;Plants&quot;</bucket>
                <bucket>&quot;Grains&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fb927c'>
              <multibucket>
                <bucket>&quot;Plants&quot;</bucket>
                <bucket>&quot;Fruits&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda797'>
              <multibucket>
                <bucket>&quot;Plants&quot;</bucket>
                <bucket>&quot;Coffee, tea, and spices&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbeb2'>
              <multibucket>
                <bucket>&quot;Plants&quot;</bucket>
                <bucket>&quot;Cocoa and chocolate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Main (Country Compilation):nk]&#10;[none:Group (Country Compilation):nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Coffee, tea, and spices&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Wheat and products&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Other edible products&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Prepared tree nuts 3/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Vegetable oils&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Meats&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Cereal and bakery foods 4/5/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Sugar and candy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Fruits&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Vegetables&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Ground nuts&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Live meat animals&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Milled grain products 3/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Fish and shellfish 2/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Total grains and products 1/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Total nuts 1/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bulk grains 2/&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Dairy&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Inflation \%:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Prices:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Main (Country Compilation) (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Animals&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Plants&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Miscellaneous&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beverages&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Main (Country Compilation)' />
        <field-sort-custom-order field='Group (Country Compilation)' />
        <field-sort-custom-order field='Category (Country Compilation)' />
        <field-sort-custom-order field='Metric (Country Compilation)' />
        <field-sort-custom-order field='Year (Country Compilation)' />
        <field-sort-custom-order field='Imports (Country Compilation)' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Year Parameter' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Year (Country Compilation) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
          <calculation class='tableau' formula='2022' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Animals' id='Animals_83C65B388E4A42D4B29C176F708C20B1'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Animals' table='[Animals$]' type='table'>
                <columns gridOrigin='A1:F676:no:A1:F676:0' header='yes' outcome='6'>
                  <column datatype='string' name='Main' ordinal='0' />
                  <column datatype='string' name='Group' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='string' name='Metric' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='Imports' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Beverages' id='Beverages_E6FCE5A79C0E43D0B29F424580883DD9'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Beverages' table='[Beverages$]' type='table'>
                <columns gridOrigin='A1:F1301:no:A1:F1301:0' header='yes' outcome='6'>
                  <column datatype='string' name='Main' ordinal='0' />
                  <column datatype='string' name='Group' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='string' name='Metric' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='Imports' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Cocoa' id='Cocoa_6742C29F9E70458782564D77674F13C6'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Cocoa' table='[Cocoa$]' type='table'>
                <columns gridOrigin='A1:F1026:no:A1:F1026:0' header='yes' outcome='6'>
                  <column datatype='string' name='Main' ordinal='0' />
                  <column datatype='string' name='Group' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Metric' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='Imports' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Coffee' id='Coffee_69659793FC78417184D002A3BFB25A6C'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Coffee' table='[Coffee$]' type='table'>
                <columns gridOrigin='A1:F1301:no:A1:F1301:0' header='yes' outcome='2'>
                  <column datatype='string' name='Main' ordinal='0' />
                  <column datatype='string' name='Group' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='string' name='Metric' ordinal='3' />
                  <column datatype='string' name='Year' ordinal='4' />
                  <column datatype='real' name='Import' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Country Compilation' id='Country Compilation_2008242F6DD0479FA12F4311E14E6869'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Country Compilation' table='[&apos;Country Compilation$&apos;]' type='table'>
                <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Main' ordinal='0' />
                  <column datatype='string' name='Group' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='string' name='Metric' ordinal='3' />
                  <column datatype='date' date-parse-format='mmss.SSS|#|#|HHmmss.SSS|#|#|yyyy|#|#|ss,SSS' name='Year' ordinal='4' />
                  <column datatype='real' name='Imports' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Dairy' id='Dairy_198D5F2F45AA45C2BFD0C7703DA09EBD'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Dairy' table='[Dairy$]' type='table'>
                <columns gridOrigin='A1:F1226:no:A1:F1226:0' header='yes' outcome='2'>
                  <column datatype='string' name='Main' ordinal='0' />
                  <column datatype='string' name='Group' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Metric' ordinal='3' />
                  <column datatype='string' name='Year' ordinal='4' />
                  <column datatype='real' name='Import' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Fish' id='Fish_1A4133D6129D4EAC9694F327E30E528D'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Fish' table='[Fish$]' type='table'>
                <columns gridOrigin='A1:F1251:no:A1:F1251:0' header='yes' outcome='2'>
                  <column datatype='string' name='Main' ordinal='0' />
                  <column datatype='string' name='Group' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Metric' ordinal='3' />
                  <column datatype='string' name='Year' ordinal='4' />
                  <column datatype='real' name='Import' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Fruit' id='Fruit_383309BA59184FB4B6135577C2F3A4F9'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Fruit' table='[Fruit$]' type='table'>
                <columns gridOrigin='A1:F1601:no:A1:F1601:0' header='yes' outcome='2'>
                  <column datatype='string' name='Main' ordinal='0' />
                  <column datatype='string' name='Group' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Metric' ordinal='3' />
                  <column datatype='string' name='Year' ordinal='4' />
                  <column datatype='real' name='Import' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Grains' id='Grains_29F01D9E334B43DBB17EA7D09AEF30C8'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Grains' table='[Grains$]' type='table'>
                <columns gridOrigin='A1:F1401:no:A1:F1401:0' header='yes' outcome='2'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Metric' ordinal='2' />
                  <column datatype='string' name='Year' ordinal='3' />
                  <column datatype='real' name='Import' ordinal='4' />
                  <column datatype='string' name='Main' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Meats' id='Meats_3CF11647CB0C4B4181C1D158323C44D8'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Meats' table='[Meats$]' type='table'>
                <columns gridOrigin='A1:F1151:no:A1:F1151:0' header='yes' outcome='2'>
                  <column datatype='string' name='Main' ordinal='0' />
                  <column datatype='string' name='Group' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Metric' ordinal='3' />
                  <column datatype='string' name='Year' ordinal='4' />
                  <column datatype='real' name='Import' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Nuts' id='Nuts_60EE19F71A6449BF8EA5C1F1B6A6C25B'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Nuts' table='[Nuts$]' type='table'>
                <columns gridOrigin='A1:F1301:no:A1:F1301:0' header='yes' outcome='2'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Metric' ordinal='2' />
                  <column datatype='string' name='Year' ordinal='3' />
                  <column datatype='real' name='Import' ordinal='4' />
                  <column datatype='string' name='Main' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Other' id='Other_1363829C160F4572838EBD2BE83D667D'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Other' table='[Other$]' type='table'>
                <columns gridOrigin='A1:F1101:no:A1:F1101:0' header='yes' outcome='2'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Metric' ordinal='2' />
                  <column datatype='string' name='Year' ordinal='3' />
                  <column datatype='real' name='Import' ordinal='4' />
                  <column datatype='string' name='Main' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Prices' id='Prices_A631BF5C9A66487DB318A15A833B265E'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Prices' table='[Prices$]' type='table'>
                <columns gridOrigin='A1:F326:no:A1:F326:0' header='yes' outcome='2'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                  <column datatype='string' name='Metric' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Prices' ordinal='4' />
                  <column datatype='real' name='Inflation %' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sweets' id='Sweets_B6A75D8D289A4C38B29E01657AF4DBA2'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Sweets' table='[Sweets$]' type='table'>
                <columns gridOrigin='A1:F1026:no:A1:F1026:0' header='yes' outcome='2'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Metric' ordinal='2' />
                  <column datatype='string' name='Year' ordinal='3' />
                  <column datatype='real' name='Import' ordinal='4' />
                  <column datatype='string' name='Main' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US Food Value' id='US Food Value_0A99C826A064406DAA4CAA4937F091D9'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='US Food Value' table='[&apos;US Food Value$&apos;]' type='table'>
                <columns gridOrigin='A1:F451:no:A1:F451:0' header='yes' outcome='2'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                  <column datatype='string' name='Metric' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Value' ordinal='4' />
                  <column datatype='real' name='Value %' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US Food Volume' id='US Food Volume_99D9F2729D5F446DB05AEFA15662CF95'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='US Food Volume' table='[&apos;US Food Volume$&apos;]' type='table'>
                <columns gridOrigin='A1:F351:no:A1:F351:0' header='yes' outcome='2'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                  <column datatype='string' name='Metric' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Volume' ordinal='4' />
                  <column datatype='real' name='Volume %' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='VegOils' id='VegOils_0E502F3312254EC68819532926AEAD9F'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='VegOils' table='[VegOils$]' type='table'>
                <columns gridOrigin='A1:F1351:no:A1:F1351:0' header='yes' outcome='2'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Metric' ordinal='2' />
                  <column datatype='string' name='Year' ordinal='3' />
                  <column datatype='real' name='Import' ordinal='4' />
                  <column datatype='string' name='Main' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Vegetables' id='Vegetables_EA7728D301444653B35B85B2EF3A98A1'>
            <properties context=''>
              <relation connection='excel-direct.1tloa5c0462rxk147761g1yz4zs7' name='Vegetables' table='[Vegetables$]' type='table'>
                <columns gridOrigin='A1:F1126:no:A1:F1126:0' header='yes' outcome='2'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Metric' ordinal='2' />
                  <column datatype='string' name='Year' ordinal='3' />
                  <column datatype='real' name='Import' ordinal='4' />
                  <column datatype='string' name='Main' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Animals_83C65B388E4A42D4B29C176F708C20B1' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Beverages)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Beverages_E6FCE5A79C0E43D0B29F424580883DD9' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Cocoa)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Cocoa_6742C29F9E70458782564D77674F13C6' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Coffee)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Coffee_69659793FC78417184D002A3BFB25A6C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Country Compilation)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Country Compilation_2008242F6DD0479FA12F4311E14E6869' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Metric (Dairy)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Dairy_198D5F2F45AA45C2BFD0C7703DA09EBD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Fish)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Fish_1A4133D6129D4EAC9694F327E30E528D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Fruit)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Fruit_383309BA59184FB4B6135577C2F3A4F9' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Grains)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Grains_29F01D9E334B43DBB17EA7D09AEF30C8' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Meats)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Meats_3CF11647CB0C4B4181C1D158323C44D8' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Nuts)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Nuts_60EE19F71A6449BF8EA5C1F1B6A6C25B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Other)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Other_1363829C160F4572838EBD2BE83D667D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Category (Prices)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Prices_A631BF5C9A66487DB318A15A833B265E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Sweets)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Sweets_B6A75D8D289A4C38B29E01657AF4DBA2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Category (US Food Volume)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='US Food Volume_99D9F2729D5F446DB05AEFA15662CF95' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (VegOils)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='VegOils_0E502F3312254EC68819532926AEAD9F' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Main (Vegetables)]' />
            </expression>
            <first-end-point object-id='US Food Value_0A99C826A064406DAA4CAA4937F091D9' />
            <second-end-point object-id='Vegetables_EA7728D301444653B35B85B2EF3A98A1' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Annual Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Year Parameter' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Year (Country Compilation) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Display Year' datatype='real' name='[Calculation_231090970505551875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year] = [Parameters].[Year (Country Compilation) Parameter] THEN [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]'>
            <groupfilter function='member' level='[none:Group:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_231090970505551875])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='175' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' value='c&quot;$&quot;#,##0&quot; M&quot;;(&quot;$&quot;#,##0&quot; M&quot;)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#e15759' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8836C64C-57AE-480E-84A6-24199FFB43F9}' />
    </worksheet>
    <worksheet name='Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Imports (Country Compilation)]' role='measure' type='quantitative' />
            <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Imports (Country Compilation)]' derivation='Sum' name='[sum:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category (Country Compilation):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' />
              <lod column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' />
              <lod column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' />
              <geometry column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Latitude (generated)]</rows>
        <cols>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{78862A56-2B99-47EA-ADEA-85235F7BC3F2}' />
    </worksheet>
    <worksheet name='Ct'>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Category (Country Compilation)]' derivation='CountD' name='[ctd:Category (Country Compilation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[ctd:Category (Country Compilation):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2CAB0B0A-6D50-48A3-978A-BD87C60D62A0}' />
    </worksheet>
    <worksheet name='G. Sub'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Subtotals</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column datatype='string' name='[Group (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Animal and other fats 4/&quot;' value='Animal and other fats' />
                <alias key='&quot;Bird eggs 3/&quot;' value='Bird eggs' />
                <alias key='&quot;Coffee beans, unroasted 1/&quot;' value='Coffee beans, unroasted' />
                <alias key='&quot;Coffee extracts and preparations 3/&quot;' value='Coffee extracts and preparations' />
                <alias key='&quot;Coffee, roasted and instant 2/&quot;' value='Coffee, roasted and instant' />
                <alias key='&quot;Confections 4/&quot;' value='Confections' />
                <alias key='&quot;Dried vegetables 3/&quot;' value='Dried vegetables' />
                <alias key='&quot;Dried, prepared or preserved fruit 3/&quot;' value='Dried, prepared or preserved fruit' />
                <alias key='&quot;Essential oils 3/&quot;' value='Essential oils' />
                <alias key='&quot;Fresh or chilled fruit 2/&quot;' value='Fresh or chilled fruit' />
                <alias key='&quot;Fresh or chilled red meats 2/&quot;' value='Fresh or chilled red meats' />
                <alias key='&quot;Fresh vegetables 2/&quot;' value='Fresh vegetables' />
                <alias key='&quot;Fruit juices 4/&quot;' value='Fruit juices' />
                <alias key='&quot;Liquors and liqueurs 5/&quot;' value='Liquors and liqueurs' />
                <alias key='&quot;Live poultry 2/&quot;' value='Live poultry' />
                <alias key='&quot;Milk and cream 2/&quot;' value='Milk and cream' />
                <alias key='&quot;Nonalcoholic beverages 4/&quot;' value='Nonalcoholic beverages' />
                <alias key='&quot;Oilseeds 4/&quot;' value='Oilseeds' />
                <alias key='&quot;Other edible products 5/6/&quot;' value='Other edible products' />
                <alias key='&quot;Other sweeteners and syrups 3/&quot;' value='Other sweeteners and syrups' />
                <alias key='&quot;Prepared fish and shellfish 4/&quot;' value='Prepared fish and shellfish' />
                <alias key='&quot;Prepared meats 2/&quot;' value='Prepared meats' />
                <alias key='&quot;Prepared or preserved vegetables 4/&quot;' value='Prepared or preserved vegetables' />
                <alias key='&quot;Refined vegetable oils 2/&quot;' value='Refined vegetable oils' />
                <alias key='&quot;Sauces, soups, prepared foods 1/2/&quot;' value='Sauces, soups, prepared foods' />
                <alias key='&quot;Shellfish, fresh or frozen 3/&quot;' value='Shellfish, fresh or frozen' />
                <alias key='&quot;Sugar, cane and beet 2/&quot;' value='Sugar, cane and beet' />
                <alias key='&quot;Total beverages 1/2/&quot;' value='Total beverages' />
                <alias key='&quot;Total coffee, tea, and spices&quot;' value='Coffee, tea, and spices' />
                <alias key='&quot;Total dairy products 1/&quot;' value='Total dairy products' />
                <alias key='&quot;Total fish and shellfish 1/&quot;' value='Total fish and shellfish' />
                <alias key='&quot;Total fruit and preparations 1/&quot;' value='Fruit and preparations' />
                <alias key='&quot;Total live animals 1/&quot;' value='Total live animals' />
                <alias key='&quot;Total red meats, fresh and frozen 1/&quot;' value='Total red meats, fresh and frozen' />
                <alias key='&quot;Total sweeteners and candy 1/&quot;' value='Sweeteners and candy' />
                <alias key='&quot;Total vegetable oils 1/&quot;' value='Vegetable oils' />
                <alias key='&quot;Total vegetables and preparations 1/&quot;' value='Vegetables and preparations' />
                <alias key='&quot;Tropical oils 3/&quot;' value='Tropical oils' />
                <alias key='&quot;Whole fish--fresh, chilled, or frozen 2/&quot;' value='Whole fish--fresh, chilled, or frozen' />
                <alias key='&quot;Wine 3/&quot;' value='Wine' />
              </aliases>
            </column>
            <column datatype='real' name='[Imports (Country Compilation)]' role='measure' type='quantitative' />
            <column caption='Main Groupings' datatype='string' name='[Main (Country Compilation) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Main (Country Compilation)]' new-bin='true'>
                <bin default-name='false' value='&quot;Animals&quot;'>
                  <value>&quot;Dairy&quot;</value>
                  <value>&quot;Fish and shellfish 2/&quot;</value>
                  <value>&quot;Live meat animals&quot;</value>
                  <value>&quot;Meats&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Beverages&quot;'>
                  <value>&quot;Beverages&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Miscellaneous&quot;'>
                  <value>&quot;Bulk grains 2/&quot;</value>
                  <value>&quot;Cashew nuts&quot;</value>
                  <value>&quot;Cereal and bakery foods 4/5/&quot;</value>
                  <value>&quot;Ground nuts&quot;</value>
                  <value>&quot;Milled grain products 3/&quot;</value>
                  <value>&quot;Prepared tree nuts 3/&quot;</value>
                  <value>&quot;Rice and products&quot;</value>
                  <value>&quot;Total grains and products 1/&quot;</value>
                  <value>&quot;Total nuts 1/&quot;</value>
                  <value>&quot;Tree nuts 2/&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Plants&quot;'>
                  <value>&quot;Coffee, tea, and spices&quot;</value>
                  <value>&quot;Fruits&quot;</value>
                  <value>&quot;Other edible products&quot;</value>
                  <value>&quot;Sugar and candy&quot;</value>
                  <value>&quot;Vegetable oils&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Main (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Bulk grains 2/&quot;' value='Bulk grains' />
                <alias key='&quot;Cereal and bakery foods 4/5/&quot;' value='Cereal and bakery foods' />
                <alias key='&quot;Fish and shellfish 2/&quot;' value='Fish and shellfish' />
                <alias key='&quot;Milled grain products 3/&quot;' value='Milled grain products' />
                <alias key='&quot;Prepared tree nuts 3/&quot;' value='Prepared tree nuts' />
                <alias key='&quot;Total grains and products 1/&quot;' value='Grains and products' />
                <alias key='&quot;Total nuts 1/&quot;' value='Nuts' />
                <alias key='&quot;Tree nuts 2/&quot;' value='Tree nuts' />
              </aliases>
            </column>
            <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
            <column-instance column='[Group (Country Compilation) Set]' derivation='InOut' name='[io:Group (Country Compilation) Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Imports (Country Compilation)]' derivation='Sum' name='[sum:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (Country Compilation)]' derivation='Year' name='[yr:Year (Country Compilation):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]'>
            <groupfilter function='member' level='[io:Group (Country Compilation) Set:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' scope='rows' value='Global Subtotal Imports' />
            <format attr='height' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' value='31' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#efebe4</color>
                <color>#eee5d7</color>
                <color>#ede0ca</color>
                <color>#ecdabe</color>
                <color>#ebd5b1</color>
                <color>#ead0a5</color>
                <color>#e9ca99</color>
                <color>#e8c58c</color>
                <color>#e7c080</color>
                <color>#e6bb75</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='272' />
                <format attr='maxheight' value='272' />
                <format attr='minwidth' value='529' />
                <format attr='maxwidth' value='529' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</rows>
        <cols>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</cols>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Plants&quot;</value>
                <value>197000.29999999996</value>
                <value>2023</value>
              </tuple>
            </tuple-reference>
            <label-position x='-7' y='-26' />
          </mark-label>
        </mark-labels>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{91A942BA-18CF-4148-946C-02EEBABB3422}' />
    </worksheet>
    <worksheet name='Globe'>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Latitude (generated)]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' />
              <geometry column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Latitude (generated)]</rows>
        <cols>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5EB21A10-0A53-466E-AB54-8C7CDF03302F}' />
    </worksheet>
    <worksheet name='Groups'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Food &amp; Beverages Details</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Year Parameter' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Year (Country Compilation) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Groupings' datatype='string' name='[Beverages]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Animals&quot;'>
                  <value>&quot;Animals&quot;</value>
                  <value>&quot;Dairy&quot;</value>
                  <value>&quot;Fish and shellfish&quot;</value>
                  <value>&quot;Live meat animals&quot;</value>
                  <value>&quot;Meats&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Beverages&quot;'>
                  <value>&quot;Beverages&quot;</value>
                  <value>&quot;Beverages 3/&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Plants&quot;'>
                  <value>&quot;Cocoa and chocolate&quot;</value>
                  <value>&quot;Coffee, tea, and spices&quot;</value>
                  <value>&quot;Fruits&quot;</value>
                  <value>&quot;Grains&quot;</value>
                  <value>&quot;Nuts&quot;</value>
                  <value>&quot;Other edible products&quot;</value>
                  <value>&quot;Plants&quot;</value>
                  <value>&quot;Sugar and candy&quot;</value>
                  <value>&quot;Vegetable oils&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Zero' datatype='integer' name='[Calculation_231090969879375873]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='Display Year' datatype='real' name='[Calculation_231090970505551875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year] = [Parameters].[Year (Country Compilation) Parameter] THEN [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Beverages 3/&quot;' value='Beverages ' />
              </aliases>
            </column>
            <column datatype='string' name='[Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_231090969879375873]' derivation='Sum' name='[sum:Calculation_231090969879375873:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]'>
            <groupfilter function='member' level='[none:Group:nk]' member='&quot;Foods&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_231090970505551875])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]' value='on' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]' />
              <wedge-size column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]' />
              <wedge-size column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Groupings:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&#10;&lt;</run>
                <run>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]</run>
                <run>&gt; M&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='3.4806630611419678' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]' />
              <wedge-size column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
              <size column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Groupings:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Value:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='off' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.9502761363983154' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk] + [federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk])</rows>
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Plants&quot;</value>
                <value>&quot;Other edible products&quot;</value>
                <value>0</value>
                <value>19391.799999999999</value>
              </tuple>
            </tuple-reference>
            <label-position x='-49' y='0' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Calculation_231090969879375873:qk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Plants&quot;</value>
                <value>&quot;Coffee, tea, and spices&quot;</value>
                <value>0</value>
                <value>8454.7000000000007</value>
              </tuple>
            </tuple-reference>
            <label-position x='27' y='-45' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{1FF9E898-1D78-409E-8E94-C27E76DBD998}' />
    </worksheet>
    <worksheet name='Grp'>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Group (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Animal and other fats 4/&quot;' value='Animal and other fats' />
                <alias key='&quot;Bird eggs 3/&quot;' value='Bird eggs' />
                <alias key='&quot;Coffee beans, unroasted 1/&quot;' value='Coffee beans, unroasted' />
                <alias key='&quot;Coffee extracts and preparations 3/&quot;' value='Coffee extracts and preparations' />
                <alias key='&quot;Coffee, roasted and instant 2/&quot;' value='Coffee, roasted and instant' />
                <alias key='&quot;Confections 4/&quot;' value='Confections' />
                <alias key='&quot;Dried vegetables 3/&quot;' value='Dried vegetables' />
                <alias key='&quot;Dried, prepared or preserved fruit 3/&quot;' value='Dried, prepared or preserved fruit' />
                <alias key='&quot;Essential oils 3/&quot;' value='Essential oils' />
                <alias key='&quot;Fresh or chilled fruit 2/&quot;' value='Fresh or chilled fruit' />
                <alias key='&quot;Fresh or chilled red meats 2/&quot;' value='Fresh or chilled red meats' />
                <alias key='&quot;Fresh vegetables 2/&quot;' value='Fresh vegetables' />
                <alias key='&quot;Fruit juices 4/&quot;' value='Fruit juices' />
                <alias key='&quot;Liquors and liqueurs 5/&quot;' value='Liquors and liqueurs' />
                <alias key='&quot;Live poultry 2/&quot;' value='Live poultry' />
                <alias key='&quot;Milk and cream 2/&quot;' value='Milk and cream' />
                <alias key='&quot;Nonalcoholic beverages 4/&quot;' value='Nonalcoholic beverages' />
                <alias key='&quot;Oilseeds 4/&quot;' value='Oilseeds' />
                <alias key='&quot;Other edible products 5/6/&quot;' value='Other edible products' />
                <alias key='&quot;Other sweeteners and syrups 3/&quot;' value='Other sweeteners and syrups' />
                <alias key='&quot;Prepared fish and shellfish 4/&quot;' value='Prepared fish and shellfish' />
                <alias key='&quot;Prepared meats 2/&quot;' value='Prepared meats' />
                <alias key='&quot;Prepared or preserved vegetables 4/&quot;' value='Prepared or preserved vegetables' />
                <alias key='&quot;Refined vegetable oils 2/&quot;' value='Refined vegetable oils' />
                <alias key='&quot;Sauces, soups, prepared foods 1/2/&quot;' value='Sauces, soups, prepared foods' />
                <alias key='&quot;Shellfish, fresh or frozen 3/&quot;' value='Shellfish, fresh or frozen' />
                <alias key='&quot;Sugar, cane and beet 2/&quot;' value='Sugar, cane and beet' />
                <alias key='&quot;Total beverages 1/2/&quot;' value='Total beverages' />
                <alias key='&quot;Total coffee, tea, and spices&quot;' value='Coffee, tea, and spices' />
                <alias key='&quot;Total dairy products 1/&quot;' value='Total dairy products' />
                <alias key='&quot;Total fish and shellfish 1/&quot;' value='Total fish and shellfish' />
                <alias key='&quot;Total fruit and preparations 1/&quot;' value='Fruit and preparations' />
                <alias key='&quot;Total live animals 1/&quot;' value='Total live animals' />
                <alias key='&quot;Total red meats, fresh and frozen 1/&quot;' value='Total red meats, fresh and frozen' />
                <alias key='&quot;Total sweeteners and candy 1/&quot;' value='Sweeteners and candy' />
                <alias key='&quot;Total vegetable oils 1/&quot;' value='Vegetable oils' />
                <alias key='&quot;Total vegetables and preparations 1/&quot;' value='Vegetables and preparations' />
                <alias key='&quot;Tropical oils 3/&quot;' value='Tropical oils' />
                <alias key='&quot;Whole fish--fresh, chilled, or frozen 2/&quot;' value='Whole fish--fresh, chilled, or frozen' />
                <alias key='&quot;Wine 3/&quot;' value='Wine' />
              </aliases>
            </column>
            <column caption='Main Groupings' datatype='string' name='[Main (Country Compilation) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Main (Country Compilation)]' new-bin='true'>
                <bin default-name='false' value='&quot;Animals&quot;'>
                  <value>&quot;Dairy&quot;</value>
                  <value>&quot;Fish and shellfish 2/&quot;</value>
                  <value>&quot;Live meat animals&quot;</value>
                  <value>&quot;Meats&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Beverages&quot;'>
                  <value>&quot;Beverages&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Miscellaneous&quot;'>
                  <value>&quot;Bulk grains 2/&quot;</value>
                  <value>&quot;Cashew nuts&quot;</value>
                  <value>&quot;Cereal and bakery foods 4/5/&quot;</value>
                  <value>&quot;Ground nuts&quot;</value>
                  <value>&quot;Milled grain products 3/&quot;</value>
                  <value>&quot;Prepared tree nuts 3/&quot;</value>
                  <value>&quot;Rice and products&quot;</value>
                  <value>&quot;Total grains and products 1/&quot;</value>
                  <value>&quot;Total nuts 1/&quot;</value>
                  <value>&quot;Tree nuts 2/&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Plants&quot;'>
                  <value>&quot;Coffee, tea, and spices&quot;</value>
                  <value>&quot;Fruits&quot;</value>
                  <value>&quot;Other edible products&quot;</value>
                  <value>&quot;Sugar and candy&quot;</value>
                  <value>&quot;Vegetable oils&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Main (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Bulk grains 2/&quot;' value='Bulk grains' />
                <alias key='&quot;Cereal and bakery foods 4/5/&quot;' value='Cereal and bakery foods' />
                <alias key='&quot;Fish and shellfish 2/&quot;' value='Fish and shellfish' />
                <alias key='&quot;Milled grain products 3/&quot;' value='Milled grain products' />
                <alias key='&quot;Prepared tree nuts 3/&quot;' value='Prepared tree nuts' />
                <alias key='&quot;Total grains and products 1/&quot;' value='Grains and products' />
                <alias key='&quot;Total nuts 1/&quot;' value='Nuts' />
                <alias key='&quot;Tree nuts 2/&quot;' value='Tree nuts' />
              </aliases>
            </column>
            <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
            <column-instance column='[Group (Country Compilation) Set]' derivation='InOut' name='[io:Group (Country Compilation) Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Group (Country Compilation)]' derivation='None' name='[none:Group (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (Country Compilation)]' derivation='Year' name='[yr:Year (Country Compilation):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Tooltip (Country (Country Compilation),Main (Country Compilation))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Grp $M]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category (Country Compilation)]' />
              <groupfilter function='level-members' level='[Main (Country Compilation)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Tooltip (Country (Country Compilation),Main Groupings,Main (Country Compilation))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Grp $M]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category (Country Compilation)]' />
              <groupfilter function='level-members' level='[Main (Country Compilation) (group)]' />
              <groupfilter function='level-members' level='[Main (Country Compilation)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]'>
            <groupfilter function='member' level='[io:Group (Country Compilation) Set:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category (Country Compilation):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' filter-group='8'>
            <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Tooltip (Country (Country Compilation),Main (Country Compilation))]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Tooltip (Country (Country Compilation),Main Groupings,Main (Country Compilation))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]' value='220' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{18EECCBE-FCB0-4467-AAE6-DFAC3C44C1C5}' />
    </worksheet>
    <worksheet name='Infl &amp; Pric'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Inflation &amp; Annual Prices</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column datatype='real' name='[Inflation %]' role='measure' type='quantitative' />
            <column caption='Prices (Prices)' datatype='real' name='[Prices]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year (Prices)]' role='dimension' type='quantitative' />
            <column-instance column='[Year (Prices)]' derivation='None' name='[none:Year (Prices):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflation %]' derivation='Sum' name='[sum:Inflation %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prices]' derivation='Sum' name='[sum:Prices:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Inflation %:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Inflation %:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Prices):qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Prices:qk]' scope='rows' value='Total Price ($/Metric Ton)' />
            <encoding attr='space' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Prices):qk]' field-type='quantitative' max='2024' min='1998' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Inflation %:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Inflation %:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#0000ff' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#0000ff' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='155' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Inflation %:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Inflation %:qk]' />
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#0000ff' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Prices:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#0000ff' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Prices:qk] + [federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Inflation %:qk])</rows>
        <cols>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Prices):qk]</cols>
      </table>
      <simple-id uuid='{A164C9F6-074E-41C4-812B-C87BE4E0661C}' />
    </worksheet>
    <worksheet name='Plant P'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Product Details</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column datatype='string' name='[Group (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Animal and other fats 4/&quot;' value='Animal and other fats' />
                <alias key='&quot;Bird eggs 3/&quot;' value='Bird eggs' />
                <alias key='&quot;Coffee beans, unroasted 1/&quot;' value='Coffee beans, unroasted' />
                <alias key='&quot;Coffee extracts and preparations 3/&quot;' value='Coffee extracts and preparations' />
                <alias key='&quot;Coffee, roasted and instant 2/&quot;' value='Coffee, roasted and instant' />
                <alias key='&quot;Confections 4/&quot;' value='Confections' />
                <alias key='&quot;Dried vegetables 3/&quot;' value='Dried vegetables' />
                <alias key='&quot;Dried, prepared or preserved fruit 3/&quot;' value='Dried, prepared or preserved fruit' />
                <alias key='&quot;Essential oils 3/&quot;' value='Essential oils' />
                <alias key='&quot;Fresh or chilled fruit 2/&quot;' value='Fresh or chilled fruit' />
                <alias key='&quot;Fresh or chilled red meats 2/&quot;' value='Fresh or chilled red meats' />
                <alias key='&quot;Fresh vegetables 2/&quot;' value='Fresh vegetables' />
                <alias key='&quot;Fruit juices 4/&quot;' value='Fruit juices' />
                <alias key='&quot;Liquors and liqueurs 5/&quot;' value='Liquors and liqueurs' />
                <alias key='&quot;Live poultry 2/&quot;' value='Live poultry' />
                <alias key='&quot;Milk and cream 2/&quot;' value='Milk and cream' />
                <alias key='&quot;Nonalcoholic beverages 4/&quot;' value='Nonalcoholic beverages' />
                <alias key='&quot;Oilseeds 4/&quot;' value='Oilseeds' />
                <alias key='&quot;Other edible products 5/6/&quot;' value='Other edible products' />
                <alias key='&quot;Other sweeteners and syrups 3/&quot;' value='Other sweeteners and syrups' />
                <alias key='&quot;Prepared fish and shellfish 4/&quot;' value='Prepared fish and shellfish' />
                <alias key='&quot;Prepared meats 2/&quot;' value='Prepared meats' />
                <alias key='&quot;Prepared or preserved vegetables 4/&quot;' value='Prepared or preserved vegetables' />
                <alias key='&quot;Refined vegetable oils 2/&quot;' value='Refined vegetable oils' />
                <alias key='&quot;Sauces, soups, prepared foods 1/2/&quot;' value='Sauces, soups, prepared foods' />
                <alias key='&quot;Shellfish, fresh or frozen 3/&quot;' value='Shellfish, fresh or frozen' />
                <alias key='&quot;Sugar, cane and beet 2/&quot;' value='Sugar, cane and beet' />
                <alias key='&quot;Total beverages 1/2/&quot;' value='Total beverages' />
                <alias key='&quot;Total coffee, tea, and spices&quot;' value='Coffee, tea, and spices' />
                <alias key='&quot;Total dairy products 1/&quot;' value='Total dairy products' />
                <alias key='&quot;Total fish and shellfish 1/&quot;' value='Total fish and shellfish' />
                <alias key='&quot;Total fruit and preparations 1/&quot;' value='Fruit and preparations' />
                <alias key='&quot;Total live animals 1/&quot;' value='Total live animals' />
                <alias key='&quot;Total red meats, fresh and frozen 1/&quot;' value='Total red meats, fresh and frozen' />
                <alias key='&quot;Total sweeteners and candy 1/&quot;' value='Sweeteners and candy' />
                <alias key='&quot;Total vegetable oils 1/&quot;' value='Vegetable oils' />
                <alias key='&quot;Total vegetables and preparations 1/&quot;' value='Vegetables and preparations' />
                <alias key='&quot;Tropical oils 3/&quot;' value='Tropical oils' />
                <alias key='&quot;Whole fish--fresh, chilled, or frozen 2/&quot;' value='Whole fish--fresh, chilled, or frozen' />
                <alias key='&quot;Wine 3/&quot;' value='Wine' />
              </aliases>
            </column>
            <column datatype='real' name='[Imports (Country Compilation)]' role='measure' type='quantitative' />
            <column caption='Main Groupings' datatype='string' name='[Main (Country Compilation) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Main (Country Compilation)]' new-bin='true'>
                <bin default-name='false' value='&quot;Animals&quot;'>
                  <value>&quot;Dairy&quot;</value>
                  <value>&quot;Fish and shellfish 2/&quot;</value>
                  <value>&quot;Live meat animals&quot;</value>
                  <value>&quot;Meats&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Beverages&quot;'>
                  <value>&quot;Beverages&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Miscellaneous&quot;'>
                  <value>&quot;Bulk grains 2/&quot;</value>
                  <value>&quot;Cashew nuts&quot;</value>
                  <value>&quot;Cereal and bakery foods 4/5/&quot;</value>
                  <value>&quot;Ground nuts&quot;</value>
                  <value>&quot;Milled grain products 3/&quot;</value>
                  <value>&quot;Prepared tree nuts 3/&quot;</value>
                  <value>&quot;Rice and products&quot;</value>
                  <value>&quot;Total grains and products 1/&quot;</value>
                  <value>&quot;Total nuts 1/&quot;</value>
                  <value>&quot;Tree nuts 2/&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Plants&quot;'>
                  <value>&quot;Coffee, tea, and spices&quot;</value>
                  <value>&quot;Fruits&quot;</value>
                  <value>&quot;Other edible products&quot;</value>
                  <value>&quot;Sugar and candy&quot;</value>
                  <value>&quot;Vegetable oils&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Main (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Bulk grains 2/&quot;' value='Bulk grains' />
                <alias key='&quot;Cereal and bakery foods 4/5/&quot;' value='Cereal and bakery foods' />
                <alias key='&quot;Fish and shellfish 2/&quot;' value='Fish and shellfish' />
                <alias key='&quot;Milled grain products 3/&quot;' value='Milled grain products' />
                <alias key='&quot;Prepared tree nuts 3/&quot;' value='Prepared tree nuts' />
                <alias key='&quot;Total grains and products 1/&quot;' value='Grains and products' />
                <alias key='&quot;Total nuts 1/&quot;' value='Nuts' />
                <alias key='&quot;Tree nuts 2/&quot;' value='Tree nuts' />
              </aliases>
            </column>
            <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
            <column-instance column='[Group (Country Compilation) Set]' derivation='InOut' name='[io:Group (Country Compilation) Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Group (Country Compilation)]' derivation='None' name='[none:Group (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Imports (Country Compilation)]' derivation='Sum' name='[sum:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (Country Compilation)]' derivation='Year' name='[yr:Year (Country Compilation):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]'>
            <groupfilter function='member' level='[Main (Country Compilation) (group)]' member='&quot;Plants&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]'>
            <groupfilter function='member' level='[io:Group (Country Compilation) Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' filter-group='5'>
            <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2001' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' value='c&quot;$&quot;#,##0&quot; M&quot;;(&quot;$&quot;#,##0&quot; M&quot;)' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]' />
              <size column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C87D10E8-0382-4B6B-B755-F24BFB383355}' />
    </worksheet>
    <worksheet name='Plant Sub-C'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='11'>Sub-Categories</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Group (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Animal and other fats 4/&quot;' value='Animal and other fats' />
                <alias key='&quot;Bird eggs 3/&quot;' value='Bird eggs' />
                <alias key='&quot;Coffee beans, unroasted 1/&quot;' value='Coffee beans, unroasted' />
                <alias key='&quot;Coffee extracts and preparations 3/&quot;' value='Coffee extracts and preparations' />
                <alias key='&quot;Coffee, roasted and instant 2/&quot;' value='Coffee, roasted and instant' />
                <alias key='&quot;Confections 4/&quot;' value='Confections' />
                <alias key='&quot;Dried vegetables 3/&quot;' value='Dried vegetables' />
                <alias key='&quot;Dried, prepared or preserved fruit 3/&quot;' value='Dried, prepared or preserved fruit' />
                <alias key='&quot;Essential oils 3/&quot;' value='Essential oils' />
                <alias key='&quot;Fresh or chilled fruit 2/&quot;' value='Fresh or chilled fruit' />
                <alias key='&quot;Fresh or chilled red meats 2/&quot;' value='Fresh or chilled red meats' />
                <alias key='&quot;Fresh vegetables 2/&quot;' value='Fresh vegetables' />
                <alias key='&quot;Fruit juices 4/&quot;' value='Fruit juices' />
                <alias key='&quot;Liquors and liqueurs 5/&quot;' value='Liquors and liqueurs' />
                <alias key='&quot;Live poultry 2/&quot;' value='Live poultry' />
                <alias key='&quot;Milk and cream 2/&quot;' value='Milk and cream' />
                <alias key='&quot;Nonalcoholic beverages 4/&quot;' value='Nonalcoholic beverages' />
                <alias key='&quot;Oilseeds 4/&quot;' value='Oilseeds' />
                <alias key='&quot;Other edible products 5/6/&quot;' value='Other edible products' />
                <alias key='&quot;Other sweeteners and syrups 3/&quot;' value='Other sweeteners and syrups' />
                <alias key='&quot;Prepared fish and shellfish 4/&quot;' value='Prepared fish and shellfish' />
                <alias key='&quot;Prepared meats 2/&quot;' value='Prepared meats' />
                <alias key='&quot;Prepared or preserved vegetables 4/&quot;' value='Prepared or preserved vegetables' />
                <alias key='&quot;Refined vegetable oils 2/&quot;' value='Refined vegetable oils' />
                <alias key='&quot;Sauces, soups, prepared foods 1/2/&quot;' value='Sauces, soups, prepared foods' />
                <alias key='&quot;Shellfish, fresh or frozen 3/&quot;' value='Shellfish, fresh or frozen' />
                <alias key='&quot;Sugar, cane and beet 2/&quot;' value='Sugar, cane and beet' />
                <alias key='&quot;Total beverages 1/2/&quot;' value='Total beverages' />
                <alias key='&quot;Total coffee, tea, and spices&quot;' value='Coffee, tea, and spices' />
                <alias key='&quot;Total dairy products 1/&quot;' value='Total dairy products' />
                <alias key='&quot;Total fish and shellfish 1/&quot;' value='Total fish and shellfish' />
                <alias key='&quot;Total fruit and preparations 1/&quot;' value='Fruit and preparations' />
                <alias key='&quot;Total live animals 1/&quot;' value='Total live animals' />
                <alias key='&quot;Total red meats, fresh and frozen 1/&quot;' value='Total red meats, fresh and frozen' />
                <alias key='&quot;Total sweeteners and candy 1/&quot;' value='Sweeteners and candy' />
                <alias key='&quot;Total vegetable oils 1/&quot;' value='Vegetable oils' />
                <alias key='&quot;Total vegetables and preparations 1/&quot;' value='Vegetables and preparations' />
                <alias key='&quot;Tropical oils 3/&quot;' value='Tropical oils' />
                <alias key='&quot;Whole fish--fresh, chilled, or frozen 2/&quot;' value='Whole fish--fresh, chilled, or frozen' />
                <alias key='&quot;Wine 3/&quot;' value='Wine' />
              </aliases>
            </column>
            <column datatype='real' name='[Imports (Country Compilation)]' role='measure' type='quantitative' />
            <column caption='Main Groupings' datatype='string' name='[Main (Country Compilation) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Main (Country Compilation)]' new-bin='true'>
                <bin default-name='false' value='&quot;Animals&quot;'>
                  <value>&quot;Dairy&quot;</value>
                  <value>&quot;Fish and shellfish 2/&quot;</value>
                  <value>&quot;Live meat animals&quot;</value>
                  <value>&quot;Meats&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Beverages&quot;'>
                  <value>&quot;Beverages&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Miscellaneous&quot;'>
                  <value>&quot;Bulk grains 2/&quot;</value>
                  <value>&quot;Cashew nuts&quot;</value>
                  <value>&quot;Cereal and bakery foods 4/5/&quot;</value>
                  <value>&quot;Ground nuts&quot;</value>
                  <value>&quot;Milled grain products 3/&quot;</value>
                  <value>&quot;Prepared tree nuts 3/&quot;</value>
                  <value>&quot;Rice and products&quot;</value>
                  <value>&quot;Total grains and products 1/&quot;</value>
                  <value>&quot;Total nuts 1/&quot;</value>
                  <value>&quot;Tree nuts 2/&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Plants&quot;'>
                  <value>&quot;Coffee, tea, and spices&quot;</value>
                  <value>&quot;Fruits&quot;</value>
                  <value>&quot;Other edible products&quot;</value>
                  <value>&quot;Sugar and candy&quot;</value>
                  <value>&quot;Vegetable oils&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Main (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Bulk grains 2/&quot;' value='Bulk grains' />
                <alias key='&quot;Cereal and bakery foods 4/5/&quot;' value='Cereal and bakery foods' />
                <alias key='&quot;Fish and shellfish 2/&quot;' value='Fish and shellfish' />
                <alias key='&quot;Milled grain products 3/&quot;' value='Milled grain products' />
                <alias key='&quot;Prepared tree nuts 3/&quot;' value='Prepared tree nuts' />
                <alias key='&quot;Total grains and products 1/&quot;' value='Grains and products' />
                <alias key='&quot;Total nuts 1/&quot;' value='Nuts' />
                <alias key='&quot;Tree nuts 2/&quot;' value='Tree nuts' />
              </aliases>
            </column>
            <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
            <column-instance column='[Group (Country Compilation) Set]' derivation='InOut' name='[io:Group (Country Compilation) Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Group (Country Compilation)]' derivation='None' name='[none:Group (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Imports (Country Compilation)]' derivation='Sum' name='[sum:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (Country Compilation)]' derivation='Year' name='[yr:Year (Country Compilation):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]'>
            <groupfilter function='member' level='[Main (Country Compilation) (group)]' member='&quot;Plants&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]'>
            <groupfilter function='member' level='[io:Group (Country Compilation) Set:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' filter-group='5'>
            <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2001' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' value='c&quot;$&quot;#,##0&quot; M&quot;;(&quot;$&quot;#,##0&quot; M&quot;)' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' value='IN/OUT(Group Total)'>
              <formatted-text>
                <run>IN/OUT(Group Total)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]' />
              <wedge-size column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' />
              <size column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C7BD3EB7-902B-47C5-9B89-D2089623A14C}' />
    </worksheet>
    <worksheet name='Plants by Cty'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Plant Imports by Country ($M)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Group (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Animal and other fats 4/&quot;' value='Animal and other fats' />
                <alias key='&quot;Bird eggs 3/&quot;' value='Bird eggs' />
                <alias key='&quot;Coffee beans, unroasted 1/&quot;' value='Coffee beans, unroasted' />
                <alias key='&quot;Coffee extracts and preparations 3/&quot;' value='Coffee extracts and preparations' />
                <alias key='&quot;Coffee, roasted and instant 2/&quot;' value='Coffee, roasted and instant' />
                <alias key='&quot;Confections 4/&quot;' value='Confections' />
                <alias key='&quot;Dried vegetables 3/&quot;' value='Dried vegetables' />
                <alias key='&quot;Dried, prepared or preserved fruit 3/&quot;' value='Dried, prepared or preserved fruit' />
                <alias key='&quot;Essential oils 3/&quot;' value='Essential oils' />
                <alias key='&quot;Fresh or chilled fruit 2/&quot;' value='Fresh or chilled fruit' />
                <alias key='&quot;Fresh or chilled red meats 2/&quot;' value='Fresh or chilled red meats' />
                <alias key='&quot;Fresh vegetables 2/&quot;' value='Fresh vegetables' />
                <alias key='&quot;Fruit juices 4/&quot;' value='Fruit juices' />
                <alias key='&quot;Liquors and liqueurs 5/&quot;' value='Liquors and liqueurs' />
                <alias key='&quot;Live poultry 2/&quot;' value='Live poultry' />
                <alias key='&quot;Milk and cream 2/&quot;' value='Milk and cream' />
                <alias key='&quot;Nonalcoholic beverages 4/&quot;' value='Nonalcoholic beverages' />
                <alias key='&quot;Oilseeds 4/&quot;' value='Oilseeds' />
                <alias key='&quot;Other edible products 5/6/&quot;' value='Other edible products' />
                <alias key='&quot;Other sweeteners and syrups 3/&quot;' value='Other sweeteners and syrups' />
                <alias key='&quot;Prepared fish and shellfish 4/&quot;' value='Prepared fish and shellfish' />
                <alias key='&quot;Prepared meats 2/&quot;' value='Prepared meats' />
                <alias key='&quot;Prepared or preserved vegetables 4/&quot;' value='Prepared or preserved vegetables' />
                <alias key='&quot;Refined vegetable oils 2/&quot;' value='Refined vegetable oils' />
                <alias key='&quot;Sauces, soups, prepared foods 1/2/&quot;' value='Sauces, soups, prepared foods' />
                <alias key='&quot;Shellfish, fresh or frozen 3/&quot;' value='Shellfish, fresh or frozen' />
                <alias key='&quot;Sugar, cane and beet 2/&quot;' value='Sugar, cane and beet' />
                <alias key='&quot;Total beverages 1/2/&quot;' value='Total beverages' />
                <alias key='&quot;Total coffee, tea, and spices&quot;' value='Coffee, tea, and spices' />
                <alias key='&quot;Total dairy products 1/&quot;' value='Total dairy products' />
                <alias key='&quot;Total fish and shellfish 1/&quot;' value='Total fish and shellfish' />
                <alias key='&quot;Total fruit and preparations 1/&quot;' value='Fruit and preparations' />
                <alias key='&quot;Total live animals 1/&quot;' value='Total live animals' />
                <alias key='&quot;Total red meats, fresh and frozen 1/&quot;' value='Total red meats, fresh and frozen' />
                <alias key='&quot;Total sweeteners and candy 1/&quot;' value='Sweeteners and candy' />
                <alias key='&quot;Total vegetable oils 1/&quot;' value='Vegetable oils' />
                <alias key='&quot;Total vegetables and preparations 1/&quot;' value='Vegetables and preparations' />
                <alias key='&quot;Tropical oils 3/&quot;' value='Tropical oils' />
                <alias key='&quot;Whole fish--fresh, chilled, or frozen 2/&quot;' value='Whole fish--fresh, chilled, or frozen' />
                <alias key='&quot;Wine 3/&quot;' value='Wine' />
              </aliases>
            </column>
            <column datatype='real' name='[Imports (Country Compilation)]' role='measure' type='quantitative' />
            <column caption='Main Groupings' datatype='string' name='[Main (Country Compilation) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Main (Country Compilation)]' new-bin='true'>
                <bin default-name='false' value='&quot;Animals&quot;'>
                  <value>&quot;Dairy&quot;</value>
                  <value>&quot;Fish and shellfish 2/&quot;</value>
                  <value>&quot;Live meat animals&quot;</value>
                  <value>&quot;Meats&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Beverages&quot;'>
                  <value>&quot;Beverages&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Miscellaneous&quot;'>
                  <value>&quot;Bulk grains 2/&quot;</value>
                  <value>&quot;Cashew nuts&quot;</value>
                  <value>&quot;Cereal and bakery foods 4/5/&quot;</value>
                  <value>&quot;Ground nuts&quot;</value>
                  <value>&quot;Milled grain products 3/&quot;</value>
                  <value>&quot;Prepared tree nuts 3/&quot;</value>
                  <value>&quot;Rice and products&quot;</value>
                  <value>&quot;Total grains and products 1/&quot;</value>
                  <value>&quot;Total nuts 1/&quot;</value>
                  <value>&quot;Tree nuts 2/&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Plants&quot;'>
                  <value>&quot;Coffee, tea, and spices&quot;</value>
                  <value>&quot;Fruits&quot;</value>
                  <value>&quot;Other edible products&quot;</value>
                  <value>&quot;Sugar and candy&quot;</value>
                  <value>&quot;Vegetable oils&quot;</value>
                  <value>&quot;Vegetables&quot;</value>
                  <value>&quot;Wheat and products&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Main (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Bulk grains 2/&quot;' value='Bulk grains' />
                <alias key='&quot;Cereal and bakery foods 4/5/&quot;' value='Cereal and bakery foods' />
                <alias key='&quot;Fish and shellfish 2/&quot;' value='Fish and shellfish' />
                <alias key='&quot;Milled grain products 3/&quot;' value='Milled grain products' />
                <alias key='&quot;Prepared tree nuts 3/&quot;' value='Prepared tree nuts' />
                <alias key='&quot;Total grains and products 1/&quot;' value='Grains and products' />
                <alias key='&quot;Total nuts 1/&quot;' value='Nuts' />
                <alias key='&quot;Tree nuts 2/&quot;' value='Tree nuts' />
              </aliases>
            </column>
            <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
            <column-instance column='[Group (Country Compilation) Set]' derivation='InOut' name='[io:Group (Country Compilation) Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Group (Country Compilation)]' derivation='None' name='[none:Group (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Imports (Country Compilation)]' derivation='Sum' name='[sum:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (Country Compilation)]' derivation='Year' name='[yr:Year (Country Compilation):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]'>
            <groupfilter function='member' level='[Main (Country Compilation) (group)]' member='&quot;Plants&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]'>
            <groupfilter function='member' level='[io:Group (Country Compilation) Set:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' filter-group='5'>
            <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2001' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' scope='cols' value='' />
            <format attr='height' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' value='26' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' value='c&quot;$&quot;#,##0&quot; M&quot;;(&quot;$&quot;#,##0&quot; M&quot;)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' value='In / Out of Total Set'>
              <formatted-text>
                <run>In / Out of Total Set</run>
              </formatted-text>
            </format>
            <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' value='#e6e6e6' />
            <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' value='solid' />
            <_.fcp.IndividualControlFormatting.true...format attr='background-color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Group:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Imported:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</rows>
        <cols>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</cols>
      </table>
      <simple-id uuid='{AFE2D0E8-5BF6-4EB8-9263-5C42AED49C31}' />
    </worksheet>
    <worksheet name='Source Details'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='16'>Total Import Details</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Group (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Animal and other fats 4/&quot;' value='Animal and other fats' />
                <alias key='&quot;Bird eggs 3/&quot;' value='Bird eggs' />
                <alias key='&quot;Coffee beans, unroasted 1/&quot;' value='Coffee beans, unroasted' />
                <alias key='&quot;Coffee extracts and preparations 3/&quot;' value='Coffee extracts and preparations' />
                <alias key='&quot;Coffee, roasted and instant 2/&quot;' value='Coffee, roasted and instant' />
                <alias key='&quot;Confections 4/&quot;' value='Confections' />
                <alias key='&quot;Dried vegetables 3/&quot;' value='Dried vegetables' />
                <alias key='&quot;Dried, prepared or preserved fruit 3/&quot;' value='Dried, prepared or preserved fruit' />
                <alias key='&quot;Essential oils 3/&quot;' value='Essential oils' />
                <alias key='&quot;Fresh or chilled fruit 2/&quot;' value='Fresh or chilled fruit' />
                <alias key='&quot;Fresh or chilled red meats 2/&quot;' value='Fresh or chilled red meats' />
                <alias key='&quot;Fresh vegetables 2/&quot;' value='Fresh vegetables' />
                <alias key='&quot;Fruit juices 4/&quot;' value='Fruit juices' />
                <alias key='&quot;Liquors and liqueurs 5/&quot;' value='Liquors and liqueurs' />
                <alias key='&quot;Live poultry 2/&quot;' value='Live poultry' />
                <alias key='&quot;Milk and cream 2/&quot;' value='Milk and cream' />
                <alias key='&quot;Nonalcoholic beverages 4/&quot;' value='Nonalcoholic beverages' />
                <alias key='&quot;Oilseeds 4/&quot;' value='Oilseeds' />
                <alias key='&quot;Other edible products 5/6/&quot;' value='Other edible products' />
                <alias key='&quot;Other sweeteners and syrups 3/&quot;' value='Other sweeteners and syrups' />
                <alias key='&quot;Prepared fish and shellfish 4/&quot;' value='Prepared fish and shellfish' />
                <alias key='&quot;Prepared meats 2/&quot;' value='Prepared meats' />
                <alias key='&quot;Prepared or preserved vegetables 4/&quot;' value='Prepared or preserved vegetables' />
                <alias key='&quot;Refined vegetable oils 2/&quot;' value='Refined vegetable oils' />
                <alias key='&quot;Sauces, soups, prepared foods 1/2/&quot;' value='Sauces, soups, prepared foods' />
                <alias key='&quot;Shellfish, fresh or frozen 3/&quot;' value='Shellfish, fresh or frozen' />
                <alias key='&quot;Sugar, cane and beet 2/&quot;' value='Sugar, cane and beet' />
                <alias key='&quot;Total beverages 1/2/&quot;' value='Total beverages' />
                <alias key='&quot;Total coffee, tea, and spices&quot;' value='Coffee, tea, and spices' />
                <alias key='&quot;Total dairy products 1/&quot;' value='Total dairy products' />
                <alias key='&quot;Total fish and shellfish 1/&quot;' value='Total fish and shellfish' />
                <alias key='&quot;Total fruit and preparations 1/&quot;' value='Fruit and preparations' />
                <alias key='&quot;Total live animals 1/&quot;' value='Total live animals' />
                <alias key='&quot;Total red meats, fresh and frozen 1/&quot;' value='Total red meats, fresh and frozen' />
                <alias key='&quot;Total sweeteners and candy 1/&quot;' value='Sweeteners and candy' />
                <alias key='&quot;Total vegetable oils 1/&quot;' value='Vegetable oils' />
                <alias key='&quot;Total vegetables and preparations 1/&quot;' value='Vegetables and preparations' />
                <alias key='&quot;Tropical oils 3/&quot;' value='Tropical oils' />
                <alias key='&quot;Whole fish--fresh, chilled, or frozen 2/&quot;' value='Whole fish--fresh, chilled, or frozen' />
                <alias key='&quot;Wine 3/&quot;' value='Wine' />
              </aliases>
            </column>
            <column datatype='real' name='[Imports (Country Compilation)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Main (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Bulk grains 2/&quot;' value='Bulk grains' />
                <alias key='&quot;Cereal and bakery foods 4/5/&quot;' value='Cereal and bakery foods' />
                <alias key='&quot;Fish and shellfish 2/&quot;' value='Fish and shellfish' />
                <alias key='&quot;Milled grain products 3/&quot;' value='Milled grain products' />
                <alias key='&quot;Prepared tree nuts 3/&quot;' value='Prepared tree nuts' />
                <alias key='&quot;Total grains and products 1/&quot;' value='Grains and products' />
                <alias key='&quot;Total nuts 1/&quot;' value='Nuts' />
                <alias key='&quot;Tree nuts 2/&quot;' value='Tree nuts' />
              </aliases>
            </column>
            <column datatype='string' name='[Metric (Country Compilation)]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
            <column-instance column='[Imports (Country Compilation)]' derivation='Avg' name='[avg:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Group (Country Compilation)]' derivation='CountD' name='[ctd:Group (Country Compilation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Group (Country Compilation)]' derivation='None' name='[none:Group (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Main (Country Compilation)]' derivation='None' name='[none:Main (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Metric (Country Compilation)]' derivation='None' name='[none:Metric (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Imports (Country Compilation)]' derivation='Sum' name='[sum:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (Country Compilation)]' derivation='Year' name='[yr:Year (Country Compilation):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[ctd:Group (Country Compilation):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]&quot;</bucket>
              <bucket>&quot;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[avg:Imports (Country Compilation):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category (Country Compilation):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Animal and other fats 4/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Bananas and plantains&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Bird eggs 3/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Bovine animals, live&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Butter or spreads&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Cheese, fresh or processed&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Coffee beans, unroasted 1/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Coffee extracts and preparations 3/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Coffee, roasted and instant 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Confections 4/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Crude vegetable oils&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Dried vegetables 3/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Dried, prepared or preserved fruit 3/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Essential oils 3/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Fish fillets and mince&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Fowl and other meats&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Fresh or chilled fruit 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Fresh or chilled red meats 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Fresh vegetables 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Frozen fruit&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Frozen red meats and parts&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Frozen vegetables&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Fruit juices 4/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Grains&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Liquors and liqueurs 5/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Live poultry 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Malt beer&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Milk and cream 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Nonalcoholic beverages 4/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Nuts&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Oilseeds 4/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Olive oil&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Other edible products 5/6/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Other sweeteners and syrups 3/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Prepared fish and shellfish 4/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Prepared meats 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Prepared or preserved vegetables 4/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Refined vegetable oils 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Sauces, soups, prepared foods 1/2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Sheep and goats, live&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Shellfish, fresh or frozen 3/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Spices&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Sugar, cane and beet 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Swine, live&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Tea and mate&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Total fruit and preparations 1/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Total sweeteners and candy 1/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Tropical oils 3/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Whole fish--fresh, chilled, or frozen 2/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Wine 3/&quot;' />
              <groupfilter function='member' level='[none:Group (Country Compilation):nk]' member='&quot;Yogurt, buttermilk, or whey&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric (Country Compilation):nk]'>
            <groupfilter function='member' level='[none:Metric (Country Compilation):nk]' member='&quot;Million dollars&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' filter-group='8'>
            <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Main (Country Compilation):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[ctd:Group (Country Compilation):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric (Country Compilation):nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]' value='69' />
            <format attr='text-align' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' value='center' />
            <format attr='text-align' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[avg:Imports (Country Compilation):qk]' value='center' />
            <format attr='text-align' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Multiple Values]' value='center' />
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' value='c&quot;$&quot;#,##0&quot; M&quot;;(&quot;$&quot;#,##0&quot; M&quot;)' />
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[ctd:Group (Country Compilation):qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' value='28' />
            <format attr='width' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Main (Country Compilation):nk]' value='152' />
            <format attr='height' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]' value='43' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#e5e5e5</color>
                <color>#d7e2d6</color>
                <color>#cadfc9</color>
                <color>#bddcbb</color>
                <color>#b0d9ae</color>
                <color>#a4d6a1</color>
                <color>#98d394</color>
                <color>#8cd088</color>
                <color>#81cd7c</color>
                <color>#75ca70</color>
                <color>#6bc765</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[avg:Imports (Country Compilation):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[avg:Imports (Country Compilation):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#e5e5e5</color>
                <color>#d7e2d6</color>
                <color>#cadfc9</color>
                <color>#bddcbb</color>
                <color>#b0d9ae</color>
                <color>#a4d6a1</color>
                <color>#98d394</color>
                <color>#8cd088</color>
                <color>#81cd7c</color>
                <color>#75ca70</color>
                <color>#6bc765</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' value='Country'>
              <formatted-text>
                <run fontsize='12'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'><![CDATA[Sheet name="Grp" maxwidth="500" maxheight="500" filter="<All Fields>"]]></run>
                <run fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='5.3785600662231445' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk] / [federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Main (Country Compilation):nk])</rows>
        <cols>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{DB8B32E4-B64A-49AC-951C-76A394FCEFF4}' />
    </worksheet>
    <worksheet name='US Sub'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Import Categories</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Year Parameter' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Year (Country Compilation) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Display Year' datatype='real' name='[Calculation_231090970505551875]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Year] = [Parameters].[Year (Country Compilation) Parameter] THEN [Value]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Beverages 3/&quot;' value='Beverages ' />
              </aliases>
            </column>
            <column datatype='string' name='[Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]'>
            <groupfilter function='member' level='[none:Group:nk]' member='&quot;Subtotal&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_231090970505551875])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Year:ok]' member='1999' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2000' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2001' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2002' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2003' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2004' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2005' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2006' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2007' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2008' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2009' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2010' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2011' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2012' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2013' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2014' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2015' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2016' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2017' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2018' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2019' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2020' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2021' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2022' />
                  <groupfilter function='member' level='[none:Year:ok]' member='2023' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#ebe0e0</color>
                <color>#e6d0d0</color>
                <color>#e1c0c0</color>
                <color>#dcb1b1</color>
                <color>#d7a2a3</color>
                <color>#d29495</color>
                <color>#cd8687</color>
                <color>#c8797a</color>
                <color>#c36d6e</color>
                <color>#be6162</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]</run>
                <run>&gt; Million</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{442212F9-888A-4E38-9E52-1879A7619F3E}' />
    </worksheet>
    <worksheet name='Val'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='22'>Edible Products Import History</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>($M)</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column datatype='string' name='[Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]'>
            <groupfilter function='member' level='[none:Group:nk]' member='&quot;Total&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year:ok]' member='1999' />
              <groupfilter function='member' level='[none:Year:ok]' member='2023' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]' value='218' />
            <format attr='font-weight' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' value='bold' />
            <format attr='color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' value='#ffffff' />
            <format attr='font-size' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' value='26' />
            <format attr='text-align' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' value='center' />
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' value='c&quot;$&quot;#,##0&quot; M&quot;;(&quot;$&quot;#,##0&quot; M&quot;)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]' value='center' />
            <format attr='font-size' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]' value='22' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Value ($M):&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</cols>
      </table>
      <simple-id uuid='{E1FF1869-3120-46DB-8FF5-92D4A86033AD}' />
    </worksheet>
    <worksheet name='Vol'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b'>United States Imports Over Time</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>1K/ Metric Tons</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column datatype='real' name='[Volume]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year (US Food Volume)]' role='dimension' type='ordinal' />
            <column-instance column='[Year (US Food Volume)]' derivation='None' name='[none:Year (US Food Volume):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (US Food Volume):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year (US Food Volume):ok]' member='1999' />
              <groupfilter function='member' level='[none:Year (US Food Volume):ok]' member='2023' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (US Food Volume):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (US Food Volume):ok]' value='218' />
            <format attr='font-size' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Volume:qk]' value='26' />
            <format attr='font-weight' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Volume:qk]' value='bold' />
            <format attr='text-align' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Volume:qk]' value='center' />
            <format attr='height' value='50' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (US Food Volume):ok]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Volume:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Volume:qk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Volume:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (US Food Volume):ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Volume (1K Metric Tons):&#9;</run>
                <run bold='true'><![CDATA[<[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Volume:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (US Food Volume):ok]</cols>
      </table>
      <simple-id uuid='{DDBFB7AB-65C3-441B-B240-DE3EED717618}' />
    </worksheet>
    <worksheet name='YoY Inc'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Year Over Year Increase ($M)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Yearly Inc' datatype='real' name='[Calculation_231090970565545988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF INDEX() &gt; 1 THEN SUM([Value]) - LOOKUP(SUM([Value]), -1) END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_231090970565545988]' derivation='User' name='[usr:Calculation_231090970565545988:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]' included-values='non-null' />
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#898989' />
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]' value='44' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#a91113</color>
                <color>#ad1f21</color>
                <color>#b12e30</color>
                <color>#b63e40</color>
                <color>#ba4f51</color>
                <color>#be6162</color>
                <color>#c37374</color>
                <color>#c78687</color>
                <color>#cb999a</color>
                <color>#d0aeae</color>
                <color>#d4c3c3</color>
                <color>#d9d9d9</color>
                <color>#c5ccd1</color>
                <color>#b3bfca</color>
                <color>#a1b3c2</color>
                <color>#90a7bb</color>
                <color>#809cb3</color>
                <color>#7191ac</color>
                <color>#6386a4</color>
                <color>#567c9d</color>
                <color>#497295</color>
                <color>#3d698e</color>
                <color>#336087</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</rows>
        <cols>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]</cols>
      </table>
      <simple-id uuid='{6E7C5FB6-ADA3-439A-992D-5684E3F9528E}' />
    </worksheet>
    <worksheet name='Yr Sources'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Imports per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
            <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Group (Country Compilation)]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;Animal and other fats 4/&quot;' value='Animal and other fats' />
                <alias key='&quot;Bird eggs 3/&quot;' value='Bird eggs' />
                <alias key='&quot;Coffee beans, unroasted 1/&quot;' value='Coffee beans, unroasted' />
                <alias key='&quot;Coffee extracts and preparations 3/&quot;' value='Coffee extracts and preparations' />
                <alias key='&quot;Coffee, roasted and instant 2/&quot;' value='Coffee, roasted and instant' />
                <alias key='&quot;Confections 4/&quot;' value='Confections' />
                <alias key='&quot;Dried vegetables 3/&quot;' value='Dried vegetables' />
                <alias key='&quot;Dried, prepared or preserved fruit 3/&quot;' value='Dried, prepared or preserved fruit' />
                <alias key='&quot;Essential oils 3/&quot;' value='Essential oils' />
                <alias key='&quot;Fresh or chilled fruit 2/&quot;' value='Fresh or chilled fruit' />
                <alias key='&quot;Fresh or chilled red meats 2/&quot;' value='Fresh or chilled red meats' />
                <alias key='&quot;Fresh vegetables 2/&quot;' value='Fresh vegetables' />
                <alias key='&quot;Fruit juices 4/&quot;' value='Fruit juices' />
                <alias key='&quot;Liquors and liqueurs 5/&quot;' value='Liquors and liqueurs' />
                <alias key='&quot;Live poultry 2/&quot;' value='Live poultry' />
                <alias key='&quot;Milk and cream 2/&quot;' value='Milk and cream' />
                <alias key='&quot;Nonalcoholic beverages 4/&quot;' value='Nonalcoholic beverages' />
                <alias key='&quot;Oilseeds 4/&quot;' value='Oilseeds' />
                <alias key='&quot;Other edible products 5/6/&quot;' value='Other edible products' />
                <alias key='&quot;Other sweeteners and syrups 3/&quot;' value='Other sweeteners and syrups' />
                <alias key='&quot;Prepared fish and shellfish 4/&quot;' value='Prepared fish and shellfish' />
                <alias key='&quot;Prepared meats 2/&quot;' value='Prepared meats' />
                <alias key='&quot;Prepared or preserved vegetables 4/&quot;' value='Prepared or preserved vegetables' />
                <alias key='&quot;Refined vegetable oils 2/&quot;' value='Refined vegetable oils' />
                <alias key='&quot;Sauces, soups, prepared foods 1/2/&quot;' value='Sauces, soups, prepared foods' />
                <alias key='&quot;Shellfish, fresh or frozen 3/&quot;' value='Shellfish, fresh or frozen' />
                <alias key='&quot;Sugar, cane and beet 2/&quot;' value='Sugar, cane and beet' />
                <alias key='&quot;Total beverages 1/2/&quot;' value='Total beverages' />
                <alias key='&quot;Total coffee, tea, and spices&quot;' value='Coffee, tea, and spices' />
                <alias key='&quot;Total dairy products 1/&quot;' value='Total dairy products' />
                <alias key='&quot;Total fish and shellfish 1/&quot;' value='Total fish and shellfish' />
                <alias key='&quot;Total fruit and preparations 1/&quot;' value='Fruit and preparations' />
                <alias key='&quot;Total live animals 1/&quot;' value='Total live animals' />
                <alias key='&quot;Total red meats, fresh and frozen 1/&quot;' value='Total red meats, fresh and frozen' />
                <alias key='&quot;Total sweeteners and candy 1/&quot;' value='Sweeteners and candy' />
                <alias key='&quot;Total vegetable oils 1/&quot;' value='Vegetable oils' />
                <alias key='&quot;Total vegetables and preparations 1/&quot;' value='Vegetables and preparations' />
                <alias key='&quot;Tropical oils 3/&quot;' value='Tropical oils' />
                <alias key='&quot;Whole fish--fresh, chilled, or frozen 2/&quot;' value='Whole fish--fresh, chilled, or frozen' />
                <alias key='&quot;Wine 3/&quot;' value='Wine' />
              </aliases>
            </column>
            <column datatype='real' name='[Imports (Country Compilation)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Metric (Country Compilation)]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
            <column-instance column='[Group (Country Compilation) Set]' derivation='InOut' name='[io:Group (Country Compilation) Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Metric (Country Compilation)]' derivation='None' name='[none:Metric (Country Compilation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Imports (Country Compilation)]' derivation='Sum' name='[sum:Imports (Country Compilation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (Country Compilation)]' derivation='Year' name='[yr:Year (Country Compilation):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]'>
            <groupfilter function='member' level='[io:Group (Country Compilation) Set:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Imports (Country Compilation)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Faroe Islands&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Vietnam&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric (Country Compilation):nk]'>
            <groupfilter function='member' level='[none:Metric (Country Compilation):nk]' member='&quot;Million dollars&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' filter-group='8'>
            <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric (Country Compilation):nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</column>
            <column>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' value='c&quot;$&quot;#,##0&quot;M&quot;;(&quot;$&quot;#,##0&quot;M&quot;)' />
            <format attr='width' value='546' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' />
              <color column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' />
              <text column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Italy&quot;</value>
                <value>174287.09999999986</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Vietnam&quot;</value>
                <value>574.79999999999995</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Mexico&quot;</value>
                <value>9564.0999999999985</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Indonesia&quot;</value>
                <value>944.60000000000014</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;India&quot;</value>
                <value>1435.7999999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;France&quot;</value>
                <value>3132.7000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;China&quot;</value>
                <value>1390.1000000000004</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chile&quot;</value>
                <value>1825.5999999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Canada&quot;</value>
                <value>16607.200000000004</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
                  <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Australia&quot;</value>
                <value>1706.4000000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{1947385A-D581-4738-A4A0-D4B84AA75F14}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Global'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
      </datasources>
      <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
        <column caption='Country (Country Compilation)' datatype='string' name='[Category (Country Compilation)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
        <column-instance column='[Category (Country Compilation)]' derivation='None' name='[none:Category (Country Compilation):nk]' pivot='key' type='nominal' />
        <column-instance column='[Year (Country Compilation)]' derivation='Year' name='[yr:Year (Country Compilation):ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='94000' id='44' param='horz' type-v2='layout-flow' w='98400' x='800' y='5000'>
            <zone h='94000' id='28' type-v2='layout-basic' w='98400' x='800' y='5000'>
              <zone h='94000' id='24' param='horz' type-v2='layout-flow' w='34900' x='64300' y='5000'>
                <zone h='94000' id='9' type-v2='layout-basic' w='34900' x='64300' y='5000'>
                  <zone h='29038' id='14' name='Country' show-title='false' w='34900' x='64300' y='8837'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3837' id='25' mode='dropdown' name='Source Details' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' type-v2='filter' w='34900' x='64300' y='5000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='61125' id='22' name='Source Details' w='34900' x='64300' y='37875'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='41500' id='37' name='G. Sub' show-title='false' w='60300' x='800' y='5000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35250' id='20' name='Yr Sources' w='60300' x='800' y='63750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='94000' id='42' type-v2='empty' w='3200' x='61100' y='5000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3837' id='45' mode='slider' name='Yr Sources' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' type-v2='filter' values='database' w='60300' x='800' y='59913'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='13413' id='40' type-v2='text' w='60300' x='800' y='46500'>
                <formatted-text>
                  <run fontcolor='#333333'>When analyzing the source countries, Canada and Mexico are the two largest sources for US Imported products over the last 20+ years. Each country varies in the number of products they export to the US annually, and the cost of those products. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#333333'>For </run>
                  <run bold='true' fontcolor='#333333'>Import Details</run>
                  <run fontcolor='#333333'>: Hover over the &quot;</run>
                  <run bold='true' fontcolor='#333333'>Number of Products</run>
                  <run fontcolor='#333333'>&quot; to view the product list in the designated year.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='4000' id='57' type-v2='empty' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='73' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='72' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='41500' id='37' is-fixed='true' name='G. Sub' show-title='false' w='60300' x='800' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='224' h='29038' id='14' is-fixed='true' name='Country' show-title='false' w='34900' x='64300' y='8837'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3837' id='25' mode='dropdown' name='Source Details' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' type-v2='filter' w='34900' x='64300' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61125' id='22' is-fixed='true' name='Source Details' w='34900' x='64300' y='37875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='13413' id='40' type-v2='text' w='60300' x='800' y='46500'>
                  <formatted-text>
                    <run fontcolor='#333333'>When analyzing the source countries, Canada and Mexico are the two largest sources for US Imported products over the last 20+ years. Each country varies in the number of products they export to the US annually, and the cost of those products. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333'>For </run>
                    <run bold='true' fontcolor='#333333'>Import Details</run>
                    <run fontcolor='#333333'>: Hover over the &quot;</run>
                    <run bold='true' fontcolor='#333333'>Number of Products</run>
                    <run fontcolor='#333333'>&quot; to view the product list in the designated year.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3837' id='45' mode='slider' name='Yr Sources' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' type-v2='filter' values='database' w='60300' x='800' y='59913'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='35250' id='20' is-fixed='true' name='Yr Sources' w='60300' x='800' y='63750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7A06BCEC-6B30-4C83-9EC6-80208E6CE276}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Product Detail'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Food Value+ (FoodImports - edit)' name='federated.1a5i1dw14wsuqf1day8fb1cvj4ik' />
      </datasources>
      <datasource-dependencies datasource='federated.1a5i1dw14wsuqf1day8fb1cvj4ik'>
        <column caption='Year' datatype='date' name='[Year (Country Compilation)]' role='dimension' semantic-role='' type='ordinal' />
        <column-instance column='[Group (Country Compilation) Set]' derivation='InOut' name='[io:Group (Country Compilation) Set:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year (Country Compilation)]' derivation='Year' name='[yr:Year (Country Compilation):ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='5' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='3' type-v2='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='52375' id='9' name='Plants by Cty' w='98400' x='800' y='46625'>
                      <layout-cache fixed-size-w='1679' type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone fixed-size='521' h='28000' id='6' is-fixed='true' name='Plant Sub-C' show-title='false' w='39400' x='800' y='9000'>
                      <layout-cache fixed-size-w='303' type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='36000' id='1' name='Plant P' w='59000' x='40200' y='1000'>
                      <layout-cache fixed-size-h='213' fixed-size-w='275' type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone forceUpdate='true' h='9625' id='16' type-v2='text' w='98400' x='800' y='37000'>
                      <formatted-text>
                        <run fontcolor='#1b1b1b'>Plants are the highest import category per year because the category entails the highest number of products. When viewing the sub-categories, it is apparent that </run>
                        <run bold='true' fontcolor='#1b1b1b'>&quot;Vegetables and Preparations&quot;</run>
                        <run fontcolor='#1b1b1b'> is the largest imported subcategory. View the </run>
                        <run bold='true' fontcolor='#1b1b1b'>Product Details</run>
                        <run fontcolor='#1b1b1b'> for an indiviudal product&apos;s import information.</run>
                        <run>Æ&#10;&#10;</run>
                        <run fontcolor='#1b1b1b'>For the chart below: Click </run>
                        <run bold='true' fontcolor='#1b1b1b'>&quot;IN&quot;</run>
                        <run fontcolor='#1b1b1b'> to view the imports per Country for </run>
                        <run bold='true' fontcolor='#1b1b1b'>Sub-Categories</run>
                        <run fontcolor='#1b1b1b'>, and click &quot;</run>
                        <run bold='true' fontcolor='#1b1b1b'>OUT&quot;</run>
                        <run fontcolor='#1b1b1b'> to view the </run>
                        <run bold='true' fontcolor='#1b1b1b'>Product Details</run>
                        <run fontcolor='#1b1b1b'> per Country.</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4000' id='17' type-v2='empty' w='39400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4000' id='15' mode='slider' name='Plants by Cty' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' show-title='false' type-v2='filter' values='database' w='39400' x='800' y='5000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9125' id='12' mode='radiolist' name='Plants by Cty' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' show-all='false' type-v2='filter' w='15700' x='83400' y='46000' />
        <zone forceUpdate='true' h='5250' id='18' type-v2='text' w='21500' x='9600' y='7500'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='12'>Sub-Categories</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='36000' id='1' is-fixed='true' name='Plant P' w='59000' x='40200' y='1000'>
                  <layout-cache fixed-size-h='213' fixed-size-w='275' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5250' id='18' type-v2='text' w='21500' x='9600' y='7500'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#333333' fontsize='12'>Sub-Categories</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='28000' id='6' is-fixed='true' name='Plant Sub-C' show-title='false' w='39400' x='800' y='9000'>
                  <layout-cache fixed-size-w='303' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9625' id='16' type-v2='text' w='98400' x='800' y='37000'>
                  <formatted-text>
                    <run fontcolor='#1b1b1b'>Plants are the highest import category per year because the category entails the highest number of products. When viewing the sub-categories, it is apparent that </run>
                    <run bold='true' fontcolor='#1b1b1b'>&quot;Vegetables and Preparations&quot;</run>
                    <run fontcolor='#1b1b1b'> is the largest imported subcategory. View the </run>
                    <run bold='true' fontcolor='#1b1b1b'>Product Details</run>
                    <run fontcolor='#1b1b1b'> for an indiviudal product&apos;s import information.</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b'>For the chart below: Click </run>
                    <run bold='true' fontcolor='#1b1b1b'>&quot;IN&quot;</run>
                    <run fontcolor='#1b1b1b'> to view the imports per Country for </run>
                    <run bold='true' fontcolor='#1b1b1b'>Sub-Categories</run>
                    <run fontcolor='#1b1b1b'>, and click &quot;</run>
                    <run bold='true' fontcolor='#1b1b1b'>OUT&quot;</run>
                    <run fontcolor='#1b1b1b'> to view the </run>
                    <run bold='true' fontcolor='#1b1b1b'>Product Details</run>
                    <run fontcolor='#1b1b1b'> per Country.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4000' id='15' mode='slider' name='Plants by Cty' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' show-title='false' type-v2='filter' values='database' w='39400' x='800' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='12' mode='dropdown' name='Plants by Cty' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' show-all='false' type-v2='filter' w='15700' x='83400' y='46000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52375' id='9' is-fixed='true' name='Plants by Cty' w='98400' x='800' y='46625'>
                  <layout-cache fixed-size-w='1679' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7CE9B44C-7690-4166-AFCE-E22EF0381765}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Summary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='23' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='12' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='52376' id='7' name='Infl &amp; Pric' w='98400' x='800' y='46624'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='9999' id='10' type-v2='text' w='44700' x='800' y='36625'>
                <formatted-text>
                  <run fontcolor='#333333' fontsize='10'>Imported goods into the US have drastically increasd over the last 20+ years, but there are some interesting trends to observe. Both the volume (metric tons) and total cost of the imported goods have </run>
                  <run bold='true' fontcolor='#333333' fontsize='10'>increased</run>
                  <run fontcolor='#333333' fontsize='10'>Æ </run>
                  <run bold='true' fontcolor='#333333' fontsize='10'>over 460%</run>
                  <run fontcolor='#333333' fontsize='10'>.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35625' id='18' param='vert' type-v2='layout-flow' w='44700' x='800' y='1000'>
                <zone fixed-size='168' h='22000' id='11' is-fixed='true' name='Val' w='44700' x='800' y='1000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11125' id='15' name='Vol' show-caption='true' show-title='false' w='44700' x='800' y='23000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone forceUpdate='true' h='10375' id='19' type-v2='text' w='50500' x='48700' y='1000'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#000000' fontsize='16'>The US Imports from </run>
                  <run bold='true' fontalignment='1' fontcolor='#005500' fontsize='16'>57 Countries</run>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='16'>Æ </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35249' id='21' name='Globe' show-title='false' w='50500' x='48700' y='11375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45624' id='24' type-v2='empty' w='3200' x='45500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='5250' id='39' type-v2='text' w='34100' x='8200' y='53625'>
          <formatted-text>
            <run fontcolor='#333333'>Observe the nonlinear relationship between time and increase in $/Metric Ton and Inflation %.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='51' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='50' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='168' h='22000' id='11' is-fixed='true' name='Val' w='44700' x='800' y='1000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='10375' id='19' type-v2='text' w='50500' x='48700' y='1000'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='16'>The US Imports from </run>
                    <run bold='true' fontalignment='1' fontcolor='#005500' fontsize='16'>57 Countries</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='16'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='35249' id='21' is-fixed='true' name='Globe' show-title='false' w='50500' x='48700' y='11375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='11125' id='15' is-fixed='true' name='Vol' show-caption='true' show-title='false' w='44700' x='800' y='23000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9999' id='10' type-v2='text' w='44700' x='800' y='36625'>
                  <formatted-text>
                    <run fontcolor='#333333' fontsize='10'>Imported goods into the US have drastically increasd over the last 20+ years, but there are some interesting trends to observe. Both the volume (metric tons) and total cost of the imported goods have </run>
                    <run bold='true' fontcolor='#333333' fontsize='10'>increased</run>
                    <run fontcolor='#333333' fontsize='10'>Æ </run>
                    <run bold='true' fontcolor='#333333' fontsize='10'>over 460%</run>
                    <run fontcolor='#333333' fontsize='10'>.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52376' id='7' is-fixed='true' name='Infl &amp; Pric' w='98400' x='800' y='46624'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5250' id='39' type-v2='text' w='34100' x='8200' y='53625'>
                  <formatted-text>
                    <run fontcolor='#333333'>Observe the nonlinear relationship between time and increase in $/Metric Ton and Inflation %.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1374C667-200E-4A3D-ABC5-8EF98A12C308}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Supp Info'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_20' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='9' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone forceUpdate='true' h='25250' id='12' type-v2='text' w='98400' x='800' y='69750'>
                <formatted-text>
                  <run fontcolor='#1b1b1b' fontsize='12'>This dataset was sourced from the Economic Research Service, which is a vessel for the </run>
                  <run bold='true' fontcolor='#1b1b1b' fontsize='12'>U.S. Department of Agriculture</run>
                  <run fontcolor='#1b1b1b' fontsize='12'>. The USDA obtained the raw data from the U.S. Department of Commerce, Beaureau of Census. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#1b1b1b' fontsize='12'>Source: </run>
                  <run auto-url='true' fontcolor='#0000ff' fontname='Benton Sans Book' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.ers.usda.gov/data-products/u-s-food-imports/u-s-food-imports/#All%20tables%20in%20one%20file&amp;quot;' underline='true'>https://www.ers.usda.gov/data-products/u-s-food-imports/u-s-food-imports/#All%20tables%20in%20one%20file</run>
                  <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='43625' id='19' type-v2='text' w='98400' x='800' y='15875'>
                <formatted-text>
                  <run fontcolor='#000000' fontsize='12'>This imports analysis comprehends the correlation between United States Imported products, and their source countries. With the data spanning over 20 years, trends are easily identifiable. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#000000' fontsize='12'>The need for understanding US Imports is driven by consumer demand and US domestic availability. Consumers have grown to appreciate a variety of food and beverage options, many of which are not feasible to produce in the United States year-round for a variety of reasons. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#000000' fontsize='12'>This data consists from 1999-2023.The product list consits of food and beverages.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='12'>While the dataset consists of over 50 individual products, for the analysis these categories are broken into 4 groups and 10 subcategories for analysis: </run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='12'>- Beverages: Beverages</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='12'>- Animals: Dairy, Fish and shellfish, Live meat animals, and Meats </run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='12'>- Plants: Coffee, tea, and spices, Fruits, Other edible products, Sugar and candy, Vegetables, Vegetable, and Wheat and products </run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000' fontsize='12'>- Miscellaneous: Bulk Grains, Cashew Nuts, Cereal and Bakery Foods, Ground Nuts, Milled Grain Products, Prepared Tree Nuts, Rice and Products </run>
                  <run>Æ&#10;&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='8375' id='20' type-v2='text' w='98400' x='800' y='1000'>
                <formatted-text>
                  <run bold='true' fontcolor='#0000ff' fontsize='22'>Supplemental Information</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='6500' id='17' type-v2='text' w='98400' x='800' y='9375'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='16'>Imports Overview</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='5125' id='18' type-v2='text' w='98400' x='800' y='64625'>
                <formatted-text>
                  <run bold='true' fontcolor='#1b1b1b' fontsize='16'>Source Description</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5125' id='21' type-v2='empty' w='98400' x='800' y='59500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4000' id='22' type-v2='empty' w='98400' x='800' y='95000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='47' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='8375' id='20' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#0000ff' fontsize='22'>Supplemental Information</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6500' id='17' type-v2='text' w='98400' x='800' y='9375'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='16'>Imports Overview</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='43625' id='19' type-v2='text' w='98400' x='800' y='15875'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='12'>This imports analysis comprehends the correlation between United States Imported products, and their source countries. With the data spanning over 20 years, trends are easily identifiable. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>The need for understanding US Imports is driven by consumer demand and US domestic availability. Consumers have grown to appreciate a variety of food and beverage options, many of which are not feasible to produce in the United States year-round for a variety of reasons. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>This data consists from 1999-2023.The product list consits of food and beverages.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>While the dataset consists of over 50 individual products, for the analysis these categories are broken into 4 groups and 10 subcategories for analysis: </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>- Beverages: Beverages</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>- Animals: Dairy, Fish and shellfish, Live meat animals, and Meats </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>- Plants: Coffee, tea, and spices, Fruits, Other edible products, Sugar and candy, Vegetables, Vegetable, and Wheat and products </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='12'>- Miscellaneous: Bulk Grains, Cashew Nuts, Cereal and Bakery Foods, Ground Nuts, Milled Grain Products, Prepared Tree Nuts, Rice and Products </run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5125' id='18' type-v2='text' w='98400' x='800' y='64625'>
                  <formatted-text>
                    <run bold='true' fontcolor='#1b1b1b' fontsize='16'>Source Description</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='25250' id='12' type-v2='text' w='98400' x='800' y='69750'>
                  <formatted-text>
                    <run fontcolor='#1b1b1b' fontsize='12'>This dataset was sourced from the Economic Research Service, which is a vessel for the </run>
                    <run bold='true' fontcolor='#1b1b1b' fontsize='12'>U.S. Department of Agriculture</run>
                    <run fontcolor='#1b1b1b' fontsize='12'>. The USDA obtained the raw data from the U.S. Department of Commerce, Beaureau of Census. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#1b1b1b' fontsize='12'>Source: </run>
                    <run auto-url='true' fontcolor='#0000ff' fontname='Benton Sans Book' fontsize='12' hyperlink='tabdoc:load-url url=&amp;quot;https://www.ers.usda.gov/data-products/u-s-food-imports/u-s-food-imports/#All%20tables%20in%20one%20file&amp;quot;' underline='true'>https://www.ers.usda.gov/data-products/u-s-food-imports/u-s-food-imports/#All%20tables%20in%20one%20file</run>
                    <run fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{46672534-B19C-49D5-8639-80AFAF68EADA}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='USA'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_24' value='center' />
          <format attr='text-align' id='dash-text_24' value='center' />
        </style-rule>
        <_.fcp.IndividualControlFormatting.true...style-rule element='parameter-ctrl'>
          <_.fcp.IndividualControlFormatting.true...format attr='border-width' field='[Parameters].[Year (Country Compilation) Parameter]' value='0' />
          <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[Parameters].[Year (Country Compilation) Parameter]' value='none' />
        </_.fcp.IndividualControlFormatting.true...style-rule>
        <_.fcp.IndividualControlFormatting.true...style-rule element='parameter-ctrl-title'>
          <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[Parameters].[Year (Country Compilation) Parameter]' value='center' />
        </_.fcp.IndividualControlFormatting.true...style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Year Parameter' datatype='integer' datatype-customized='true' default-format='n0;-0' name='[Year (Country Compilation) Parameter]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
          <calculation class='tableau' formula='2022' />
          <members>
            <member value='1999' />
            <member value='2000' />
            <member value='2001' />
            <member value='2002' />
            <member value='2003' />
            <member value='2004' />
            <member value='2005' />
            <member value='2006' />
            <member value='2007' />
            <member value='2008' />
            <member value='2009' />
            <member value='2010' />
            <member value='2011' />
            <member value='2012' />
            <member value='2013' />
            <member value='2014' />
            <member value='2015' />
            <member value='2016' />
            <member value='2017' />
            <member value='2018' />
            <member value='2019' />
            <member value='2020' />
            <member value='2021' />
            <member value='2022' />
            <member value='2023' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='23' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='21' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='22250' id='11' name='US Sub' w='54600' x='44600' y='16625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='20750' id='19' type-v2='text' w='43800' x='800' y='1000'>
                <formatted-text>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#333333'>Year Over Year Increases in total costs are nonlinear,  this is likely directly correlated to the changes in inflation combined with unit price increases. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#333333'>When viewing the import summaries per year, it can be observed that Plants is the dominating importing category. The distribution of the products imported varies, but as a whole the United States largely imports Plant goods as well as Animals (both livestock and meats) and Beverages.</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60125' id='5' name='Groups' w='54600' x='44600' y='38875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='77250' id='20' name='YoY Inc' w='43800' x='800' y='21750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='5375' id='24' type-v2='text' w='54600' x='44600' y='1000'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='18'>Imports Per Year</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' h='10250' id='13' mode='slider' param='[Parameters].[Year (Country Compilation) Parameter]' type-v2='paramctrl' w='32700' x='44600' y='6375'>
                <formatted-text>
                  <run>Æ </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10250' id='25' name='Annual Total' w='21900' x='77300' y='6375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='55' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='20750' id='19' type-v2='text' w='43800' x='800' y='1000'>
                  <formatted-text>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333'>Year Over Year Increases in total costs are nonlinear,  this is likely directly correlated to the changes in inflation combined with unit price increases. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#333333'>When viewing the import summaries per year, it can be observed that Plants is the dominating importing category. The distribution of the products imported varies, but as a whole the United States largely imports Plant goods as well as Animals (both livestock and meats) and Beverages.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5375' id='24' type-v2='text' w='54600' x='44600' y='1000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='18'>Imports Per Year</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='10250' id='13' mode='slider' param='[Parameters].[Year (Country Compilation) Parameter]' type-v2='paramctrl' w='32700' x='44600' y='6375'>
                  <formatted-text>
                    <run>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='74' h='10250' id='25' is-fixed='true' name='Annual Total' w='21900' x='77300' y='6375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='170' h='22250' id='11' is-fixed='true' name='US Sub' w='54600' x='44600' y='16625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77250' id='20' is-fixed='true' name='YoY Inc' w='43800' x='800' y='21750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60125' id='5' is-fixed='true' name='Groups' w='54600' x='44600' y='38875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{710EF0E0-E7A6-4709-84DA-7275F707C1ED}' />
    </dashboard>
    <dashboard name='United States Import Analysis' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_6' value='#ffffffd9' />
          <format attr='border-width' id='story-description_6' value='0' />
          <format attr='border-style' id='story-description_6' value='none' />
          <format attr='background-color' id='story-description_7' value='#00000000' />
          <format attr='border-width' id='story-description_7' value='0' />
          <format attr='border-style' id='story-description_7' value='none' />
          <format attr='background-color' id='story-description_8' value='#00000000' />
          <format attr='border-width' id='story-description_8' value='0' />
          <format attr='border-style' id='story-description_8' value='none' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='164' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='2697' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone fixed-size='113' h='11722' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='3527' />
            <zone h='83921' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15249'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='United States Imports Summarized' captured-sheet='Summary' id='6'>
                    <capturedDeltas>
                      <worksheet name='Globe'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Visualize the US Imports over the last 20 years. Details broken out by food &amp; beverages, import subtotals, and year.' captured-sheet='USA' id='1'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column name='[Year (Country Compilation) Parameter]' value='2002' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Understand the distribution of the US Imports by viewing the import&apos;s origin. View information on all global sources and details of individual countries.' captured-sheet='Global' id='2'>
                    <capturedDeltas>
                      <worksheet name='Country'>
                        <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]'>
                          <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Mexico&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <dashboard name='Global'>
                        <zone id='40'>
                          <formatted-text>
                            <run fontcolor='#333333'>When analyzing the source countries, Canada and Mexico are the two largest sources for US Imported products over the last 20+ years. Each country varies in the number of products they export to the US annually, and the cost of those products. </run>
                            <run>Æ&#10;&#10;</run>
                            <run fontcolor='#333333'>For </run>
                            <run bold='true' fontcolor='#333333'>Import Details</run>
                            <run fontcolor='#333333'>: Hover over the &quot;</run>
                            <run bold='true' fontcolor='#333333'>Number of Products</run>
                            <run fontcolor='#333333'>&quot; to view the product list in the designated year.</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                      <worksheet name='Source Details'>
                        <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]'>
                          <groupfilter function='member' level='[none:Category (Country Compilation):nk]' member='&quot;Mexico&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]'>
                          <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Yr Sources'>
                        <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]'>
                          <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='View details on the largest product category: Plants' captured-sheet='Product Detail' id='3'>
                    <capturedDeltas>
                      <worksheet name='Plant P'>
                        <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]'>
                          <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Plant Sub-C'>
                        <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]'>
                          <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Plants by Cty'>
                        <filter class='categorical' column='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]'>
                          <groupfilter function='member' level='[yr:Year (Country Compilation):ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Supplemental Information' captured-sheet='Supp Info' id='4'>
                    <capturedDeltas>
                      <dashboard name='Supp Info'>
                        <zone id='17'>
                          <formatted-text>
                            <run bold='true' fontcolor='#000000' fontsize='16'>Imports Overview</run>
                          </formatted-text>
                        </zone>
                        <zone id='19'>
                          <formatted-text>
                            <run fontcolor='#000000' fontsize='14'>This imports analysis comprehends the correlation between United States Imported products, and their source countries. With the data spanning over 20 years, trends are easily identifiable. </run>
                            <run>Æ&#10;&#10;</run>
                            <run fontcolor='#000000' fontsize='14'>The need for understanding US Imports is driven by consumer demand and US domestic availability. Consumers have grown to appreciate a variety of food and beverage options, many of which are not feasible to produce in the United States year-round for a variety of reasons. </run>
                            <run>Æ&#10;&#10;</run>
                            <run fontcolor='#000000' fontsize='14'>This data consists from 1999-2023.The product list consits of food and beverages.</run>
                            <run>Æ&#10;</run>
                            <run fontcolor='#000000' fontsize='14'>While the dataset consists of over 50 individual products, for the analysis these categories are broken into 4 groups and 10 subcategories for analysis: </run>
                            <run>Æ&#10;</run>
                            <run fontcolor='#000000' fontsize='14'>- Beverages: Beverages</run>
                            <run>Æ&#10;</run>
                            <run fontcolor='#000000' fontsize='14'>- Animals: Dairy, Fish and shellfish, Live meat animals, and Meats </run>
                            <run>Æ&#10;</run>
                            <run fontcolor='#000000' fontsize='14'>- Plants: Coffee, tea, and spices, Fruits, Other edible products, Sugar and candy, Vegetables, Vegetable, and Wheat and products </run>
                            <run>Æ&#10;</run>
                            <run fontcolor='#000000' fontsize='14'>- Miscellaneous: Bulk Grains, Cashew Nuts, Cereal and Bakery Foods, Ground Nuts, Milled Grain Products, Prepared Tree Nuts, Rice and Products </run>
                            <run>Æ&#10;&#10;</run>
                          </formatted-text>
                        </zone>
                        <zone id='20'>
                          <formatted-text>
                            <run bold='true' fontcolor='#0000ff' fontsize='25'>Supplemental Information</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='4253' hidden='true' id='6' story-point-id='1' type-v2='text' w='52756' x='-4528' y='15041'>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='25'>Total </run>
            <run bold='true' fontcolor='#e15759' fontsize='25'>US Imports</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='4979' hidden='true' id='7' story-point-id='2' type-v2='text' w='99803' x='98' y='15353'>
          <formatted-text>
            <run bold='true' fontsize='22'>Import Sources Globally</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3631' hidden='true' id='8' story-point-id='3' type-v2='text' w='37205' x='8071' y='15249'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#333333' fontsize='20'>Annual Plant Imports</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{EF2DC524-01ED-43F9-B001-207111F49F51}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='United States Import Analysis'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{83D4B102-6FAF-45B9-8A61-2ADE8E121E24}' />
    </window>
    <window class='dashboard' name='Summary'>
      <viewpoints>
        <viewpoint name='Globe'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Infl &amp; Pric'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Val' />
        <viewpoint name='Vol' />
      </viewpoints>
      <active id='39' />
      <simple-id uuid='{5AE1A08D-C292-4335-A5C9-F9269E410C3C}' />
    </window>
    <window class='worksheet' name='Globe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF54970C-8DD2-4D54-888C-67A627843A5F}' />
    </window>
    <window class='worksheet' name='Val'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric (US Food Volume):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1D1D403-9C57-454A-BF13-5E39C39EDADF}' />
    </window>
    <window class='worksheet' name='Vol'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Volume:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric (US Food Volume):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (US Food Volume):ok]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Volume:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BE0A611-2CF2-4530-A29A-4CF5FEDCC7E5}' />
    </window>
    <window class='worksheet' name='Ct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00CD1B0F-78C2-417C-BACF-60DFCB3AF7B2}' />
    </window>
    <window class='worksheet' name='Infl &amp; Pric'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Prices):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8394C0A0-60B7-4224-A2C1-00DD9953C474}' />
    </window>
    <window class='dashboard' name='USA'>
      <viewpoints>
        <viewpoint name='Annual Total'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Groups'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Sub'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='YoY Inc'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{F2F47E2E-5212-4144-89F2-0FEEAC317358}' />
    </window>
    <window class='worksheet' name='Annual Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (US Food Volume):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (US Food Volume):ok]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29C691C4-127F-41E2-ACA9-5C61520644F4}' />
    </window>
    <window class='worksheet' name='YoY Inc'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[usr:Calculation_231090970565545988:qk:4]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C6B04A4-0393-4622-A565-B68B708DCA40}' />
    </window>
    <window class='worksheet' name='US Sub'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Value:qk]' type='color' />
            <card mode='slider' param='[Parameters].[Year (Country Compilation) Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Animals):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Sweets):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8640358-FD9D-4705-838A-BF71EA4A2AF6}' />
    </window>
    <window class='worksheet' name='Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]' type='color' />
            <card pane-specification-id='2' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]&#10;[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5647D85-3286-4D90-88BE-3D5886C39975}' />
    </window>
    <window class='dashboard' name='Global'>
      <viewpoints>
        <viewpoint name='Country'>
          <zoom type='entire-view' />
          <highlight field='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Main (Country Compilation):nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='G. Sub'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Source Details'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Yr Sources'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='45' />
      <simple-id uuid='{301F8C45-9524-4D86-BB37-FB8AF428EE51}' />
    </window>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Main:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[sum:Imports (Country Compilation):qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C512C503-77A3-4F7C-90BA-5D51018DB41F}' />
    </window>
    <window class='worksheet' name='Yr Sources'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Beverages]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Group (Country Compilation) Set]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FA090F7-7905-444C-9D8A-C37E4E23AE4A}' />
    </window>
    <window class='worksheet' name='Source Details'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Group (Country Compilation) Set]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Main (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Metric (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Country Compilation):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCF87BF9-CF8F-4A64-A02E-41470259734D}' />
    </window>
    <window class='worksheet' name='G. Sub'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Group (Country Compilation) Set]' type='setMembership' />
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Group (Country Compilation) Set]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Year (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02CAAC12-37E6-44DF-A5FA-947F32CF3005}' />
    </window>
    <window class='worksheet' name='Grp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' type='filter' />
            <card param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Group (Country Compilation) Set]' type='setMembership' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Group (Country Compilation) Set]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Main (Country Compilation):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07247330-6B25-48E9-9E36-5F8B43B4968A}' />
    </window>
    <window class='dashboard' name='Product Detail'>
      <viewpoints>
        <viewpoint name='Plant P'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Plant Sub-C'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Plants by Cty'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{672073FE-3723-4769-B675-D3B9A6957892}' />
    </window>
    <window class='worksheet' name='Plant Sub-C'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Group (Country Compilation) Set]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0633EA86-F116-4891-8F3D-A0A7E4A5B1A1}' />
    </window>
    <window class='worksheet' name='Plant P'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20BEDC88-E7A2-41D7-A1F8-0E6942C18689}' />
    </window>
    <window class='worksheet' name='Plants by Cty'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]' type='filter' />
            <card mode='radiolist' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[io:Group (Country Compilation) Set:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Group (Country Compilation) Set]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[Main (Country Compilation) (group)]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Category (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[none:Group (Country Compilation):nk]</field>
            <field>[federated.1a5i1dw14wsuqf1day8fb1cvj4ik].[yr:Year (Country Compilation):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7070146-2ADE-4493-845D-2973376BAFB7}' />
    </window>
    <window class='dashboard' name='Supp Info'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{6CDADBB4-2D67-466C-8983-143235BFD93F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='37' name='Annual Total' width='179'>
      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
      LQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Country' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='24' name='Ct' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABWUlEQVRYhe2YMYrCUBRFj8kEIYKdnXaClb2FIKRUF+ICLCzExsYFWNlYiZsQzQKsRe1F
      FGwkIaLgm86ZMEWamXkQ/+nyuMXh/vcTSEZEhDfG0hbQxhSgLaCNKUBbQBtTgLaANqYAbQFt
      TAHaAtqYArQFtPnQFvgter0ei8Xi9VytVhmPx8xmMyaTSSxrWRaj0QjP80BSQBiG0u/35XQ6
      JWaDIJDBYCDn81lERFJxBW63G7Ztk8vlErPr9ZpKpUKhUABS8g4IggDXdRMLiKKI1WpFvV7/
      Gv71ev439/tdfN+XTqcjl8vlNX88HjIcDmW328XyqdiA7ziOQ6PRoFgscjweX/PNZoPrupTL
      5Vg+FV+B+XxONpul1WrhOA6+73M4HCiVSgA8n0+WyyXNZhPLip95Kjag3W6z3W7xPI9arcZ0
      OqXb7ZLP5wHY7/dcr9cfpw+QETF/hd+aT/ltPCEwbLEZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='G. Sub' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWYxc15nff3evvXpfuK+SSEqUuMmkRJnaMmNbGsiesWfiSWYmYwwQZIIE
      CQLkJS9GgAB5CJANCRAkQWzYlpcZ25qxbC3WZpEyKXEVd7JJNsne19rr7vfm4VY32WLT6i4V
      KTbr/IBCVZ2+df+nqs93zvedVQrDMEQgaFLkzzsDAsHniTAAQVMjDEDQ1AgDEDQ1S9YAbNv+
      vLMguA9YsgYgEDQCYQCCpuaOG0DoWQz2X+LS5X7yVZeQEKc8xaW+SwxNlgiBwLMZH+zn8tUh
      qo4POOTzJgCeWSJXqt7pbAqalDtsADaXjh3h/NVhhq73cejIKcxKgY8+OMj14QGOvP8bRqow
      PXCGQ8cu0H/mIw6dHQKmOXlyEIDLZz7i6njlzmZT0LSod/b2Out3PsEGScKvTnHkzDXyk9PI
      Xet55rGHKA4d4eSlCdpyIzz67FdYZUzxzrtXsFgFhJQHTzDkrWHvuo47m01B03KHDUBClqE6
      PcjJcyOseGgTmj1G0kiCJKFkMkhXC7h+gmRCQpKTtHhVSsDY6ff4Xl8LX/vm19ElCQDHcZiZ
      uREEAaZp3tnsC+577rABgDN5lWP9JTZt20Z7QiM/PI7pmBBCUKlAagVqwcS0QtAtylqCFND9
      8D6e653g2KlrtO5aiyGDruuz97VtG8Mw7nT2Bfc5dzYGCCocP3IOI2kwPXSVK4PjxFIZqqP9
      nDp3iqPHhuhd0057TwtnPzzMicNHsLJtxGpZa9uwm2XKABf6xxEz9gR3gjscBKssW7McJzfJ
      +Pg4k/kSUqKNPbs2UylU6N36BOtaFLrXPsaGTgUnvoLdj6xBIssDD3SBpPLApofJJJQ7m01B
      0yIt1enQwgUSNAIxECZoaoQBCJoaYQCCpkYYgKCpEQYgaGqEAQiaGmEAgqZGGICgqREGIGhq
      hAEImhphAIKmRhiAoKkRBiBoaoQBCJoaYQCCpkYYgKCpEQYgaGqEAQiaGmEAgqZGGICgqREG
      IGhqhAEImhphAIKmRhiAoKkRBiBoaoQBCJoaYQCCpkYYgKCpEQYgaGqEAQiamroMIAxDgiAk
      DHwcxyFYkhusCwR1HpFUmbzGmSGHXq7zqwMXeOT3/5QnNrYiNTp3AsEdpq4WYHrwIn39OX57
      8CA967o4v/80dqNzJhDcBeoygEQqxdUjf8upiVZWd8bxkwnEIUaCpUhdRySFoU+1VCLUkgTl
      UaxYD51pbR4XKCA/dIkTx45R6PoCL31hLQQlfvPKL+gvOMh6nF3PvcQKrvH2O4fIeToPP/E8
      uzYEHDhQYu/eDQyc+S1D8mp2b1o+587iiCRBI6grBiiMXWOolGDzxhYsJ6S/f5S2rSvnvZli
      ZHh026OcLESFNbQtzI4H+fOvbUeunf974eAl1u/7Og8kx3jr8ADehmUEQYhfHaZvRGH73u66
      v6BA8LtYpAH4TA1c5oN33+DMZAuF3espj52lr7iZh+Y1AJl0Rw9Ml5AKtTvYNtXxPt58c4qW
      7g1se3QNjhWnpzeJIffQ4w9RAHL9x/npkMwXXvwaLbHIwfI8b85B2bYtIg/BZ2ORBhBSmhrm
      2uAoE8USFy54KLE2fu/L29A//cMAKOlunnn6GUzHYfzaWY6dS5OSPDwvBNXHVVQ0INm5mrWp
      CcbGi6xItaJIIMs3QpYgCFDVO37Ot+A+Z5ElSGXNY0/zNVXi2GgHf/D8lkV3fZrlHNMlnzWr
      e/HzfVy2fDpTAVevTJJMDTEqJ3gc0FNtbH1yMwfeO8xwyx5WtsfnGACAoojQW/DZqKsKzbR3
      UTz2MUP5dXTGZWRFRVWVeYzB4sIHv+HgxWGCEK70reVrz23HnfiQH7z/Fq2rH+X5p7pRrV2M
      vf8uv7JbeOrpvchYdHaGoKTZ+dh6To2Ns6J9tRhnEDScunqBJvoP8D//w/9hNNtLq2Gw9dlv
      8IfPb1mwG9QIRC+QoBHUf1J8YDMyPEGivYts/G4W/QhhAIJGUJcLZOeu8uPvvsz1qo/vqjz3
      Z/+cJ9dlhIsiWHLUZQDjA33Y3U/y7/7hF5m48CY/f/8Uu9Y9iaiPBUuNugwgkUpRGj7BwcMJ
      chfOYyz7spgKIViS1DcVwjW5dPoQH54cJrN8DU8+sZv2xN01AREDCBpBXS2A71S42neFiu1T
      HR6h7Ia0NzpnAsFdoK7ZoGNXjnFmqpWXXnqJx3urvP72adxG50wguAvUZQCxRBtdy9tIJpN0
      rF6OWihQNW2CRudOILjD1DkQ9lu+939fo6DIhGFAEEDvun384289T/ZO5HIeRAwgaAR1xQAt
      XQ/w+N4xhgoOoLBy8xd4/JH5p0MLBPcydblAI30f8v7REdrbO+joaCed1MUgmGBJUt9kuJYV
      LFtrsXr1KkAmlU0KAxAsSeoyAMcpMNR3iWOKB6is2vI4ne0pscmQYMlRn9se6qzb9gQv/d4u
      ABRVEyPBgiVJXQYQhiWOvvozTh16DdA/l+nQAkEjqH869OeM6AYVNIJFtQBWqZ9Xf/hrpj9x
      i3Xbn2bfznVoDc2aQHDnWZQBKHoLm7Ztozo3lbbeFhEAC5YkwgUSNDWLagHCMMBzPeZajISs
      KCiKLMYCBEuORRmAWbzEj//XK0zMSdV46IkX+PLeB0QMIFhyLMoF8r0qY4PjOHNSZZIt7bS3
      JO9qHCBcIEEjqCsGCOwiR3/zJsevThGGGut3PMO+nWvvagsgDEDQCOqcDPcRB69eo3QlzsMb
      DGxJbI8uWJrUZQCBL9HRvZZU0iLe0cHo6ctiRZhgSVKXAXSu3szGdZt5bKvPL395mnU7xCCY
      YGlS3xlhpRwSaXa9+Fds2NXHhWtlfMSRk4Klx6LPBxi7fIZ333qDc1MZpobXUB6/wDCPs3PP
      hjuTQ4HgDrLo8wE826Rq2niuRalUQm1/mK8/tVO4QIIlSV3doGZhgrHpMsV8jkzvGlZ0taLK
      d3ccWHSDChpBfRtjVUf52fd+SrJ3GcWRV1j/lX/GV3f2ihhAsOSoywBy4yNkH3yeb/3xk0xe
      epufH7iMu7NXbI4rWHLUty1Kexe586/wnR9ep3z1PD3P/FOxJYpgSVJXDGBX8kzlckyMFoh3
      tpBNdtDZMd+i+IDi+CiuFidQYnRm4oSexfBYns6edoqjoxhdK1HMCUpegqxqMu0YLOvQmJz0
      6OhIkZscQUt1korNNTERAwgawSLd9hDfcxi8cIRDJ3M88PBDtIQjvPvW79gbVAKpPMLZgRwA
      1ekxzl6+BiFUx89z+nqJgTMfMVYNkfw8x4734ZHn7NkRfHOU48evilFmwR1jkZ6LR9/BX/KD
      n73BYCXO2eMdhH7Ao1/+y9vcSCbTuQymK0jFKMXyXDo7etBUjbb1qxk8PYllx1m2LIUhL6PX
      H6EA5K+d5JVh2PGVr9J6m3OCHceZV1UgWCiLPyZ127N800hzcdxgy4M96MkWers7FjwZTkLC
      D3wIIfRc0BLIjn/LOcHxtl5WJKaYnCqzMp295Zxg3/fFMamCz8wiDUAilsqy8aEtnP/4e7x8
      wsVIdPJH/+RbbGxb2K0SMYPRocuYD/QycOoyxvrfIzHqc61/itRN5wQb6U62P/kI+989zEh2
      Dyva5p4TLEmSMADBZ6aurvvR/o8ZVR/j3/zrf8XXd2f59evHmN8ZsbjwwRt85+/2c/HQ63zn
      lfdwYh3sXp/kpz/6KcPJzTy6PMaqh3biXn6XVz8aY8f2B5AxaG9P1s4JXsvwyDhLcuGy4J5n
      kSvCLKbHp5kcOMuBKxYv7NtOcfQYH/X18s0/2SEWxAiWHItygZzqIK+9/Arjtfcvv3weSYmx
      7bntYhRYsCSpaxzAqeYYGpyodU9KpNt66O5IizXBgiVHXQO4VnmMU0eOUQZyV44T2/PX/MVz
      d9cABIJG8Jk3xpq68g6vHkrxzT99/K5ujitaAEEjqKsFmLx6iJe/8zrTgGtX2bjvW6L2FyxJ
      FtcChCGe6yKpGoosUZoawZQzdLbe/RNiRAsgaASLqridygQ/+/nfkbc8Kn2/5t//x//O//hv
      /5UDl4uin16wJFmUAZjlASr5NHHN5J1Xfsuzf/3v+Bd/tocLB07fZiBMILi3WZQB6EYLZuEk
      r//0Z/zGWcHTqxM45SJhPCZiAMGSZFHlNpZdxR+8uI9Yppc/+0cvEZM8bDfDF57cJBbECJYk
      4nwAQVOzuPMBAg+zYuLPSZVQ9RgxQxXnAwiWHIs8H6CP7/znHzE2J1Vjy74/5KvPbhanRAqW
      HItygcLApVqxCD6RHrUA2l1tAYQLJGgEi2oBJFkjmdbwqlMceP0VPuqbRlE0HtjzAl96cqPY
      HU6w5KhvQcylI5zOV4kVV/LMkyuR9bQ4H0CwJKnLACTJoLVtJXFjjIIDw+euiJ0bBEuSurrv
      O9Zs4bFYBT9d5d3TOfb8/tPC/REsSepqAVTdwB06ybEBl95VG1i3TByULVia1FVuJ64c5vVD
      wzy0ZROxicP8/f5LeI3OmUBwF1jkQJiPbTs4rs6qzVt49OFHyLeb/PrA9C1dowLBUmBRBlAt
      XuT//acfMOxaFC2Psx+9gR/4PPzsXwoXSLAkqX8ukG8xcH2EZNcy2pJ3f0BKDIQJGkFdvUDm
      ZB/f/d8/oKDGsIoWT/zpv+S5TW2iFRAsOepbEzx0FW3tc/zbP9nLRN9bvPLBWdxNe8UBGYIl
      R10GkMq2kL+6nzfeccj3HSPx4DfEegDBkmSRk+E8zKqF7zuMXDvHqXOjpHpXsH3bNjrSupgM
      J1hyLHo69Hf/y4/nToc+d56in+alZ8R0aMHSwPE9CpbFRKW8uBYgCFyqpeotC2I0I048JqZD
      C+4tHM+j7NgULIuCZTJtVhksFBgs5LF9Dy8IFjkdGhlJkUkkYuSv93N9uoysqKzcsIX4nfoW
      AsFtCMOQMAwJwhAvDGZr9ZxpMlWtMFWtULJtcmYVy/OQAFmSMFSNzmSKnlR6kS5Qvp+X/+Yg
      3/iLF/nguy9zuqubVHWcxBX41te2ikBYcMfwg4Cq61KwTKquS8m2mKpWKFgWQ8UC45UyfjB3
      PoKuqKR0nRXZFrpTabqSKXrSabpTGeJaNH1zUWXWdfLIQQe6brBm57Ps/spT6Nf38/O38niL
      vZlAcBNBGOIFPo7n44UBJduiaFnkLZPRUonhUhHH87A8DzfwcTwPkFAVmZiq0hZPkNINOpJJ
      WmNxlmWyZGMxdEUlrmnEVBVFvnWkalFlNpbowZ76BYfOPcoXv/QUbu46v/j7t9Ef/SsRAAsW
      heW5lG2bom0zWSkzWi5Rtm1ylonpOuRME++mGl2WJGKqRms8Tms8TmcyTVsiQUrX6UymSOsG
      MW3xk/IX1w0aBuSvHePlH7/GcMEklA02ffFFvvHsdmLq3d0TQgTB9zYzNXrRsnF8j7xlkjdN
      CpbJcKnIaKmE43sEYYgfBISAKsvEVI2krpPSdVrjSdoTCZZlMrTFk8S1aE9aRZJRZBlZ+uxl
      rq65QGHg47oekqyiasrien9Ci3P73+XDK2PIWpxdz73EhnSFj95/l2tmhi8+8xQrWm3OnjXZ
      vLmX0shlrppJHlnXM+c2wgA+f8IwJCQq7EEYUnVsxitlBguF2QA0b5nYtd4YLwiQkJAlCVWW
      ycRis355RyJFUtdJaBopwyBtxFDncVkWm7/oGULC6LmWV9cLmCpU63PbJVlBN+pcBexUuOp3
      8Od/8aVZC7585D3ktft4MTXEO8cusuy5biYny+CXOH7mKht37a1PS9BQXN+n4jjkLZOibTFZ
      qZAzqwwVCxQsi7Jjz14rSxKaopAxDNriCda1tdOeSJKNxVieydKVSqHKjVtJHgQhluORK5uU
      Kg5V22U8V6FQsSmULSqWw3TJYrpokiuZVKxoEe9dj1t920bCZnRkFD2eprUliVmWWbO1g4wa
      o+fcacqAU57m9MF+Uht3050xal9ybpTv+/48CoJ6idyWAC8M8IIA03XJWybj5TIjpQLjlcps
      IGp7Hn4YoEgShhIFmKuyLbTFE7TE4izPZmmLJzBUFUNRiWkays0uS7jw/5/rB3hegOsFOL6P
      5fiUqzbDUyXGc1Um8hVGp8uYtofluNiOj+P7mJaHJIGqyChyFDBrqkwiptKeiZOMaZ9Dx42e
      oifucPLkCRzbZcPjzxKGKqoqgayg+R4uUJm4xumcz+OPJJFrv1sQBHNOivc8sQ5tsbiBj+35
      lG2bimtTsp3aYJGJ4/tUXZeK61BxHXKWNeezmqyQ0DRWZltoSyRoiydIajodiQSGopA1YrfV
      DX3/U1cNBmFIvmQxWagyXTKZzFeZLlkUKhbFqkuxYkc1esXGD+Z67rIkEY+pZBMx1i3PkI4b
      dGQTdGTjpOI6hq6QjutkEjqGppBORN02d90AAklh9UO72JpNMHHtMOev5+iKmYyOVMgkRxlR
      kjwKtK7dxgs7Erx34BCZvY/TkdRQ1RvZDYJgUTHAxyNDfHCtH9P1iGnq3NoIiNUO/bgZQ9UW
      dF2UdsNfTWja7HWqHMVIWu1Qb01RUGV5Nk2RZeRad95McLdYHN/H9lxc38fyfBzfw3RdTNeh
      aNvkrSrTVRPLi2p01/dn/faZRxiGqLKCriposkJSN+hKpWlPJOlKpelOpWmLJ9AVZTavsiQh
      zROIen6A6/m4XvRsuz6OG3Vxup6P5XhUTJeK7TI2XWYiX2UsV2ayUMX1AvwgwPej4DgIQzRF
      IRXXScRUOrIJ1vS2kkkYLOtI0dmSJJs0WNWdxdBU5FpNr8hS9NvKvztCvfsG4FY5/+F+Lo4U
      0TPd7H1uOy3mRt5+5285Fhhs2fM8Kn70RZLL2bp+hFPnr/H0jg2faarFVDXyVQHC6nxX3NoX
      cLvegVu7DcLbvlNlGUmS0JUbhqDJCpIEmqKi1f6uyQqaIiNL8myfdUzVkCVI6EaUJkX/1Liq
      MVEpU3VdcmaVsmNjum7U7LtuzUVxCSH6zSSptlZDQpIgY8TIxuKkDaP2OkZLPI4qK8RUFU1W
      SBsG8Zph3xxMup5PvmJTrjqULYeq5TJVrFKxXKqWS9V2yZctXNfH8QJs18NyPGzHx3Y9HM/H
      tL1abkCSojzJkoSiyLRn47RnEnS2JOhqSdLTliIZ18gkDFJxffahKI1ZfdI0u0P7QYBVc5lm
      /Nc597td2ifijhAwXffW6276bNVxsf3os47vE4Yhtu/N1rzOTc8zXYGu78+mLxZNUVBR0GQ5
      GuEMJFK6gYpM2jCQQ5mUZqDJKi2xGK4bEhIFjUEQYrsenhdgOtHvUzFdTDsqzFNFM3ptRTV2
      ufrpR6FoioyqyOhaVHPHDY24oRLTVQxNxdAVWlIx4oZGV0uSjmycrtYkbZl4XS3gZ6FpDODz
      IhrMiYLLIIgK3swAjxdEzb3nB9he5CI4nkfFdrFdl1zVolS1Gc2XmSpXKVYsqqZH6IPvhwR+
      SBiAFETuiFJrSQijHpgZ4/X9EM+P9CHqzSGMgsswDPGDMJonU3MXIhdCjlopVUGRJeSaSxHT
      VeKGiqEptGUSJGMa7dkESUMjEYsemaQRdXUqMrqqoKpR8KkpCooSdYE2qgb/rIjZC3cYVZax
      HQ/L9smXLUzHJVeyMG2PsmnXXruRC2FHgZ7leBQrNsWqPY+7NR8BuqagqTIePsmYRhiGpGJR
      oBczVOK6hqFFcUgypiHJEsmYjiJLxA0VRZExNHX27wlDQ1FkMkmDmK4Q01RihkrC0Ob1+5cq
      ogWoE8eNgrmq7VKqRgW5arnkyhYT+QpTBZNSNSrExYpdG/EMCYPoOQhDgtqzriroWvSI6Sqa
      KhPXI7chbqgkDJ32bJzWVIy2TJxkTEdVZRKGhq4qGLoy60uDhCxx03tmg9X53ktInxoo3s+I
      FuAT3BzwzfjjruczVTAZzUU9FgNjBSbyFaq2S9mMgr6y6eD5wWyhkmYKIVENnIzptGfiJD7h
      MnRkEyRiWuQf61ENa2jKrDvRiOF+we1pegNwXH+2Fp/IV8mVTKaKJrmSxeBEkWLFZmC8cEu/
      s1EL8DJJgw3L28gmDdqycTqyCbJJg/aaf5xJGqQT936s0qw0jQHYrkeuZDE+XWGyWCVXshgY
      LzA6XaZiudiOR8VyZ3tGNE2OxgsUmWUdaTqyCdozCbpaEyzvyNDdliSma8R0hYShETPmn24r
      uLdpGgP4xQcX+fn+85TNud14Rs3vbs8k2LS6g2Rcp7ctRWsmTndrkkRMo7s1hXqP9FoIGkvT
      GMCKzgzrl7WSTcXobEnQmU2wsitLV1syqullCU1VZkcSBc1B0/QCzfS4iMItuJmmaQFkWUIW
      B7kKPoGoDgVNjTAAQVMjDEDQ1AgDEDQ1wgAETY0wAEFTIwxA0NQIAxA0NU0zECZoPm5Mcghn
      Em7+K4TCAAT3EGHggxdtxRJ6NgQehMG8aaFb27LFj9LCMADXgtAnnLneLkHgg1UgdMqEdpnQ
      qYBdJLCK4JSEAQjqJwzDqIARgO9C4BP6LoR+lB64hK5J6JTBKhJaeUK7RFiZILRKUbpnETqV
      6HOE0X3gRuEPQ8KglubX0m66Lgzc2t6HAcy8Dmo7EElKbesJFWQlekgK0sxr+fPYGEuwZAh9
      l9CtgF2OalCnSlidAqdK6FaigmyXohrYzEV/N3OEbhVck9CcrhnIApFkJD0ZvdYSIKtRgZ1J
      S8SRFO2W6yQluo5amqTFQdaQ9ETt2lR0nRaPnvUEklFLa5bZoPc7szWv70avfaf22o5qyzAA
      zyEMnKgQhwGhWSC0ixD6BOUJcMqRm2GXoprazM/W5mEY1GrZmZq59lpWbxQ2RUPSomcUHUnW
      kGIZ0FNIsQxSLItkZJCSHdF7PQWqET0rGiCBVOuXkWRmFjFLknJTGre9jpuuW+jCfdEC1MGt
      dUb4yQvm+9R8N4qePZvQM6PXvhP5qRAVPLs4e21oFW6k+W7k09bcCjyTMPDAc6L7+Ta4VnRf
      z44+51k1n3mmVr6pkMwpMLXXio5kpJCSbchGGow0croLSU+DkUJOdYMaQ1INMNJIioEUS4NS
      S1ONqNa9h2k6A4gKSbSLceiate3OogIX+m7kk9aCqNmCEwZRAXNqW8rdfI2ZJwyDGwXVqRJ6
      DjjlyCet6YRebSWab4EbFfbQKjTuiylaVBOrRq1QxkCLIceiQoqsRIVRNZC0RFTrxrJIRhpJ
      UpCSnWAkkVRjtoBLsZb7aguU+WgaA/D69+Mc/U5UI/q1IKkWNIV+rXAGftSszxtgeZFbAcxp
      gmX1RqAFIMuAjCR/ommefS3f8FVj2ehZNZDUm2pKIwWyFhVaIx1dI8kQy86mSYoe/S2WQTKy
      SIoeacsayGrkK8saqDqSrEa6M0bSwG3JlzpNYwD+4GH8gQ+jwjHTLOupyF+sFbIbteNNAZZc
      60HQE0iyBlo8KmxqFH9IM/eY+Ywaq/nC8cg4IKqNldrxPYqOpNYOlNLT930Ne6/TNEFw6FmE
      ZoHahj1RYi1omq0RJfnGY+Y9Uq2Gj2pxSRKD5/cT90QL4FVzHN7/Nv3VLPueeYrlLTbnz5s8
      9FAPlbF+rlTjPLK259Nv9DuQ1BhS+vb71wuak3uiOrt27iNYtY8Xd3Vw+OhFAkzGx0vglzl2
      6grtba2fdxYF9yn3gAGEmCWJNes7yCzbQHdQoQK41TznPjxIYsPO2SOSBIJGc08YQBjcOCJJ
      910coDR6meNXJmlvTaGIOFFwh7gHDEBGi5uMjVZx8mOMKkkyQNu6HfzxV/dy6cMPmaqKs8AE
      d4Z7wABg2Zr1XHz3b3j5F4foXLuKmfO+1dRKHlmr8fHZq7c9rkgg+Cw0TTeoQDAf90QLIBB8
      XiypFsB13dmJaL7voyhiSF/w2bgnBsIWiqqqN53gEs45N/h3Ebg2VdsBWSMRj7HQE4Fc10XT
      tE+/EAg8m6rlEKIQT8RRFyiyGI25gi6Fqkc29emzLResEfqYpoMej0c9b6GP5QTEjE//7MI1
      AhzXR9M1Qs+iYoUkkvEF9fTV9Vs5ZcZNla7s/IOgS8oApE8czCx/2oEUYcj0tRMcvVLFKwwg
      t3Th2Bq79+6mM7WwH3IhGlP9Rzl4oUBXRxYZj4nJMg/t2sPajmTDNG5ppivjvHN0nD96dkeD
      NBwuHd7PVccgmVnJrq2rUKqT/ObjCb785NYGabhcOfI+F4sKHStWoxbHsF0Lqf1BHn+otzEa
      ns3o2BjV2lnETJ7nzcE0X9qzhTW9bbfeb0Gq9yALcn+qg7x9JMeeZ55kQ2+SljU72btB550P
      zzRQY4h3Dk/zxd9/jsd37WTnrt08/Wg3B482UMPOceiDAxw5epSjM48TpxicKDZOozjCwSGZ
      Lz61l/WpCY6dHyF0LcamG6hRHuPQoMwzzz+FfPkIo1on2x9aycUrVxqn4ZY5c/wwZ66M4IYg
      EeAF4W0nHS6pFuBmFuT+SAqaEmBVK1RMD0WSyLS04l7KN05D0UlpLuPjOUioSATkpgsYRqZx
      GpqBWiySemArK+K1OqsQ50R+unEasQQdocW0HdC5chOTxz/mihzH9YNP/+xCNWQZnQAvUOha
      2YFpZAmD3ILPDF6QRryNfc//AwYuXaB/pMAjnSmSbT2s7pl/Oo3y7W9/+9sLUl+KaEnatCIX
      +ofwtG42PbgKOfDItrbTlkk0RkNNsqI7zqWz55nMTTM5McaUneTx7ZtJ6A0K0mWd1qyKq7TR
      1ZLAMAwMXUPW4/S0ZxujoSboafHJu2naMgm6lnUxNdBPmOxh/fL2xmjoMbKhA62d9Cxby6qO
      BKX8NGqynd72hVUYn46ErBq0di2nO+Vz6Xwfdmolm1a0zH/1UuoFqocwDHCsKpYbICtREKw0
      +lzcMMR3bSqmTYBCMpVAa/RJNGGI7zlULXs20L4zGrcG8w1ds1D7HqYV/VaxmI6iKI09YPAm
      Dd/3UWIpUrH5Y74l6wItiDAkf+1jjswJgnV27/3CgoPghWjMBMGdHRkUfCYmy7kV5msAAASX
      SURBVGzatYc1CwyCF6IxffUYvz2fn9WYnCzz4M49rO1snEbu2nE+OJebo/HAjt2s60o1VOPA
      2RxdnTWNqRIbt+9hfQM18tdPsP/MFF2dWRR8pqZKbNi2h/Xd82iE9zPl6+FPfvJ2WArC8OLB
      vw8PXSmE032Hwh+9dbyBGgPhT370RljwbyRVh06GP3j9w8ZpVAbDn/zo9TA/R+NU+P3XDjVQ
      Y+hWjeHT4fd/dbCxGj98ba7GyJnw+7/6oIEaw+Hf/PBXczTM0XPh9395YN7L7+8WQFLQ1BCr
      WqViLT4IXhAzQfDETBAckp8uYugNqtEA5EhjYiKHNKORK2IYDYpjABSN9Cc0CrkihtHARUSK
      TlqPOgyk5A0NXW+khkZK9+ZqTBduq3GfxwAB45dOcHHCRpaSPLxjK0Z1jMGSwvoVHQ1TMaev
      c/RUP4phIIU+Dgm2bN1Ce1JvmIaVG+DIySvIuoGMj0OcLVsfbrDGIEdOXo40JB8niLP50Yfp
      aKCGnR/kyMeXkW7W2PowHakGahSGOHK8D8mI1TRibNr6CJ3zaNzfLQAS2e6VdHsTTOemuHju
      DK3ZNpYt62ygRoikxujp6aJi2YSotKcz6A1dxBAiKbdqaA0N5kMk1aCnp4uqZROg0pbOoDdY
      A8Wge45GuuG/FbJBd2/3HA3jNhpLdiBsQbgFjrx/hKKaJsgPUAk0hs8f4aNzg43T8Iocee8Q
      E4FB77IVrFjWQXnoLAc+7m+oxuH3Ds7RqAyd48DHCxtAWqjGkXcPMu4bdNc0qsPn2f/x5QZq
      lDj63kHGfX1Wwxy5yP4TfQ3W+C1jN2uMXuT94xfnvfz+bgHMPFe9FH+8YSX9k2kmkp3s2SXz
      vUPD7Nu6qkEaBQbcOC9uWEtai2qZlLeC0ydyjbk/gFVk0I3zwhyNKU4db6RGiQE3xgsbb9Lw
      pzl1tLEa122DFzauu6ER5Pj4SAM17DLXbX2ORjrI8/HhqXkvv78NINnNlvRpPvjoCNVRiS2b
      0tjWBMs7G7jIPtnDkxsHefPVV2lrzaLgMJkzeWzHE43TSHTz5AMDt2g8un1PQzX2PhhptLZm
      UHGZzJls3dZIjS72bsrO0ZjKmWzdtrtxGvFOntrcypuv/oLW1uwNjcfm17jPg+BoK8RivoCW
      biGhKeBUuD5ts6rn1olR9RJ4NtNTRYxUEk1R0VUoVF1aMw3qowcC32Z68m5oFDBSqSWtEfoO
      U5P5BWnc3zFA4GGaFpKq4ZkVisUixfF+3j02vz9YF26Rg2+8xvnBa5w4fRkbBak8zBuHFjYZ
      bkF4JQ69XtM4dSnSqIzwxqHTDdX48I3XOD84wIlTl7BQkCqjvHHwVMM1zg0OcOJUX6RRHWuw
      RpkP3/xVpHGyDytUkKrjvHHw5LyX398GYE9zYP9BLly8yMWZx6WrFCp24zQqU1z22tmzYyeb
      eyTOXrxGGAZYTgMX8pcnueS1sXvHTrYskyONwG+sRmWKPqeV3Tt28PByhbMXrhI0XGOaPqeF
      PTt28PAKjbPn+wl8H8txG6dRneailWXPjh08slLn7IV+/MDHsufX+P+SNfEBfbe1tgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Global' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WZBk13mg990t972ylqy9urp678YOkAABkiJFSlyGpEiPRI00puywQw4v
      8+KwPXaEQxF+84s9djgcMREjTYSkkUYeDrVxkwgSAImN6G703rXvuS8393tv3s0PWZVVBXQ1
      usFuNIDOLyKjMk+dc+65957/nP8s/38E13Vd+vR5SBEfdAH69HmQ9AWgz0NNXwD6PNT0BaDP
      Q01fAPo81PQFoM9DTV8A+jzU9AWgz0NNXwD6PNT0BaDPQ809FQDbtu9ldn363HfkO41otBus
      rm8zNDJEudokHpDRHJl4OIBpdkgkBu5nOft8zGnWSmzm65w6duTQOLVymeDAwG0rbaeW5ZXr
      ecYTHhxETp04cdvr3rEAePwhokEv5VqbgCzSNm1E12Hxyg2mzj2Lbds4jkN/b12fXQRBQJKk
      O4hp8cMfv8JXv/Zlrl96i1yhQjwaYGDuMTKLi9RKW1hyACe/xcgnPkN1/i1sycvQ7JMY6ibP
      PvtsL6cbSxu0Sip2fApBeO8r37EA1IsZSq0OAxEPlUa71wNMHz+DVq8ghlMAd3jDfT4OdGyL
      crtNVdOo6Ro1Q6dpGLwwM8tgMHQXOVmIkhef18taOs8LZ8b5ix+8yfNTZ6lUVBAURLtDPDnC
      seNHePHq23zza/+Ev/2rPyE2/dyBnI6dOsfZsy41A7zye0uAcC+3Q9u23ReAhwTTtvmTC28y
      HAoT8/mJ+HxEfT4iXh8DgSDCnTS/+1iev0rVEBlP+FnaLHDu5DTXV9JEI3EUwUbAZSQeYKlg
      EFZs5o4d42/+/V/w69/8NoE7bsbfTV8A+rwvfrw0T9zn5+mJqQdTAEtjI19namz4V8qmPw3a
      564pNJts16o8NT754Aoh+3/lyg93MQbo0wfAcV3+bv4aXz5+6q7VnEPzdBxM07wned0tfQHo
      c1e8ndlmIhpjJBy5Z3maponX633PeLZt88pLP2Rqeo6N1RtU8jcJhpNYZoel1SyzoxafOOPl
      SuYEzzz/VTqdznsKaV8A+twxTcPgjc11/ounP8nPfvYzJEliYGCA2dlZFEXBNE2KxSLDw8O4
      rovH47lnvUSz2WD+xmVa1Syx+CdR4+OMThxnafEGw5NjiJ4VtlcvcmExwvNf+ioejxfHcd5z
      cbYvAH3uCNd1+dHiTX597jgeSUbTNBKJBOVyme9+97ucOXMG13Xxer0kk0lu3rzJd77znXty
      bcuyePOlf0eu1OLp577M2vI1RDnI9asXqFez1GslRKvMaGoIw5YIBkO9dSlRFHEc59C8+wLQ
      545YqZSwXYe5gUEAnn76aZLJJBsbG7zwwgukUikGBgZoNpu0221Onz59z65t2zae6AmK8z/j
      5vn/gGMblPQxxM4WrpRgIKQTHzxNQCjQEmYQBAFZlonFYgBomoau67fMuz8N2uc9MSyTP7nw
      S3730SeIeH33Pn/DuO0YYHtrhWY1jSeQYmPlMtNHzzGSGieXy7G6dBVcG79cRxIlBsYe4+ix
      MwfSu66Lqqq3zLvfA/S5LY7r8Nc3rvKpqSP3pfLfCWpxjQnPK7x1ycvcE9+mmE9TyG2zeONN
      XNdlZsyLZoao1ttk8z8hFE4wkho9kIckSbccD/TXAfociuu6/HxtlYQ/yOnhkQdWDqu1xfV1
      iYGwhrr0x2QW/x5ZaDI3GaDeaBEcfgHR3GIiVmBra5ur53+Apmm99IIgHDoY7wtAn0NZLBXZ
      rlf53OzcPZvNOQxN07Bt+12bKQuFAjNnv8bcU/8lN7fDgMBnHvchmlmGjn6FZx6bQnKbqA2R
      kQGJr3zKx5BvhT/7t/831eqe2uP3+295D4eOAUzTpNVsEo3F7vjm+2OAjw+lVpPvXrvMP3/8
      KfyK575eyzAMVFXtDV7Tm/O0Ww0cbQujsUrDCDMzPU66YDAZ28KxHTbzFjX3JJ36Cl6vh9NP
      fIWX/+FPCSZOMpdcQ5FssuYzfP3r3wCg0+mg6zqWZR249qE9wNULb/If/uI/stuRuK6LaVo4
      tkVb07Ats/v7DuZa+3y00E2T712/wtdPn7vvlX8/3TpmojWyzIZe5fjwJo8dU3jhrM5EeJnZ
      gQ0uroT4h192CIaiDIRtZFngyTmdaxe+z7PnfPza5z7PfCZBPOpFbF9lY2Md6KpBhmEcuJ4k
      SYf1AC6b65sItsPQkWm8goCpt1jdzuOXHTquF9FqYzgiXsFEDiWZSA32e4CPAZbj8N1rlzkz
      PMLp4dSvnN+daA+GYVAul3u/t5Zf43jiyoE4++fz1zImR8a6gmnZLqblsrztsK0m+NY/+xds
      bizjr/45r121KNSD/OF/+79gWRbVarVXPwVBIBQKHTYLZHH+jTeYOHaKsZ0QSfEiiy5+f4Dt
      9Qwjg3EUQUBr1YlGZVzXxXXd2y469Pnw0jQMLma2WSgVOTOS4uTg8K/8Lm83+Lxb9pdlt/ID
      yJKAacFqPsDUqMDS4jxvvfq3fPqsSzzqY/bRL/dUK1EUe+WK7aj2hwiAwtnTs2yrbWy6epJt
      mXg9XvyhKMfmAoR9Mh1XwueZwHEcBFFEdN1+D/ARwXYcTMdmvVLhUjaNZpo8khrlO08+jU9W
      HkiZ7kRYBEHAdd1eXNd1uZYe40vf+CaX3n4TVS1z8uyzbLRKXF58i996PNFL5/f70XX9wBaN
      Q9cBOjZo9So2oACK18/4+DgAoWA3zntvX+rzILEdh6ZhkGnUyNTrVHUN3bLQTBPXdZFFkZFw
      mF+bnWMwGLrvMz23Q5Kk3sfBi2a4+DzCu8wadzX23b+lGjz1wu8QjUb53Oe/xOXLl0i5/5HF
      Spzf/Np3CAT8vbQ+nw/LspDlvWp/qABEQz40R+CDGwL1+VVxXZdiq8m1fI5MvUbb7BDyeBmN
      RJmMxTnrG8WnyPhlBeVD1lP7/X6CwSCiKPKJ57/C5beTCKWXmRps3zadi4ihtyEaRRAEFFlA
      tAQGgxWq2YsU014GP/ctoDuOCIfDB9IfKgCZXBmPqVFqaQyFAvfgFvvcL0zbZrlc5Hx6C4DH
      UuM8NjpG1OdHfICt+t0QCAQOqM/nHn2GpXkvldr3SIQPv4fBqMP69T+hknuSY2c/T6lcw9Bt
      joxJjLDAhQWTdvtLBALdOvzOXu5QAQh4RSrNFrZpHRalzwPEdV0ahsGFzBYLxQJHEgN86fgp
      BgLBB12098V+tQS6rbXterm20OFzT95e2Z4e0nHcn/PT7/2C4MA5joztCdKjczI//8H/wSe/
      8N8QiUTflfbQdQDDFjh79gzJWPiwKH0eAI7rsq6W+f+uXuK71y4T8/n5gyee4QtzJz6ylf8w
      hkdGUOLPspru9MIOm1kSBYFTUw6N8kIvzHFcXBcGox02NzZueY1De4BQMEil2Tns330+YDTT
      5Gouw9V8lrg/wHNTM4xGog904Hq/GRgY4DOf/Sx/+e/WMWUPgrCnwggAgoBt2ShuDt30cTSl
      8fTx7mKXbji8eBF88XPEQg6Vq69w6vSZ3lToLrcUgHa1SF5tAAp9N1cPBsd1qWptlssl5osF
      TMfmRHKI3zn3GEHPwzP/FolE+E//4A+pVCq9sN1eYFcYHMdBURQW3/4ex4c20QyHq2tegkGJ
      ja0NTn7xS3hDlVs2FrcUANnrZ3R0FJD6u+U+QBzXpdhscDWfZUNV8coyJwaH+cqJ08QP2cz1
      MLB/Eeydz0AQBERRRJZllNg5Lq7rJCee4bFPT1Kv1/hkJMLwbXay3lIABFGi066ysFxkcnb6
      3txFn1viui51Q+dGIc/1fJaI18e51CjPT8/ilfvmGrBP7dm3+LX/O3Q3u42OjjM+Poksy8Tj
      cYaH39ttyi2fsOL14+Cg5gr0NzbcHbbj8A9L8xiWRdwfIBEIEPcHiHh9uLi0OyYNQ++5Ecw1
      6rQtk0dGRvn2I48/VOrNneL1evF4PAdcp+wKwe4WnP3hoVDojnckHLoXKLtdYXp2oj8GuAtc
      1+Unywv4FQ+PpsZRtTYVrc2GqlIzNEAg5PEQ8niJ+nyMRqI8khp7qNWbO0EQBKLRKAvzCyge
      hVAodKDy7wqDIAj4fD48njtfvj1EAESGkhGyDbu/3eEuuJDeom4YfHPuBKIgkIrcO985H0Yc
      x0UUPxjBlSSJTqvNlZ9f5tzoDFpIIZwaZGBoEEmSUBSFTqdDNBp910zP7ThUAARRxNUadIAH
      Ywn60WKzqnI1l+V3H33iI7P6+n6wbIfVjMovrmyylK4wPhjmN5+ZYyZ154ZT7wdBEDh25hQ3
      FuaRfR5OB5NsbJdwk0niyXi3bJaFZVl31QMcYg/gsDS/hGs5TJ4+gW/XHiBdIOaTSJebJII7
      B2QEFUxXYWJs5KG1B6hqGv/+ykV+59zjRP3+907wEWQ9q/LzK5ssp1XGkmGeOzvB3HiC9VyN
      v/nFAo7r8JVPHuPEVBLpLlpgeG+vEPspFYsUC0XC+SZRr59SKsjE5CT5XJ6RVLcOyrJ8x1ux
      DxEAi3/8u79HU6J85Yuf6bVo2WwWyzS7K2wCCC6U81uMzT1KMurvbov+GLd+t6JjW/z55Yt8
      bvYYk9HYgy7OfeH8QoYfv7XKN54/wdGxOB753Y1cttzkR79cYT1X5b/7racYiAbu+IAMwzDu
      2ovc8oUrBFoWGa1GrdPGo3j55Oc/gyRJWJbF+bfOc+6RcwSDt18dv6UAdLQW//iPP8HQHH7j
      n36dgCBgtBusrG+RSqWot3RiARndkQkHfFiWSTgSwXnIegDLcfjbG1eZiQ/w2Nj4gy7OfWEz
      X+Nf/90F/uU/+xRB/3urFmpDw+9V8HnufAr3bnqA/TiOQ6lY4q2rb3Jj/jLTiTG+9e3vIAgC
      7Xa7twHudtyylKIkMTkxyspmqRfBGwhz6tQpAOJdlYu9rUUfz27/dlR1jb+7eY3pWIJHR8fe
      O8FHkEbb4P/967f4r3/r6V7lX11dZXKyO9fe6XR6i1C7RINeKpUKvmTyvpdPFEWGhof48vBX
      efaJT/Hyj3+Mpmlc/Iu/xHPqFMdOnuiZPh7WMN96JdjjY2R4mO3t8kO5DmDaNqIg3FKXdV2X
      +WKBn6+v8PmjxziSuP8v+kFgWjb/z/fe4rd/7Qzjg3uzWZubmxiGwerqKrFYDL/fTzqdJhqN
      YlkW0WiUUqmE67p88Ytf/MBU4ng8ztd++7fJZ7MM3riJur7BfLuFFI0QDAUZS40hy/K7VKJb
      CkA9s0HTtNEFhYdHoekuYp1Pb3E5m0ZAYDQS4cTgMBOxOB5JomNZ/GR5kWbH4Pcee5LAB+gx
      4YPEdV3+8sVrnJ4Z5JGje6upuq73KvfJkydZXV3F7/dz/PhxAC5duoRt24RCIa5fv/6BlbfR
      aPTWBhYvXSTkOkitJvOVRWpOk0AxjLAloOhevv2l3z/QG9xyDNAuZ/jZxSVOTKWYmJvD8zH3
      C+S6LmtqhZdWl5iMxfnU1BEkUSRdr3E9n2WrViUZCFLVNc4Op3hqYupjPdX50tvrXF8r8F99
      /akPZJ7//Y4BdimVSkQiERRF4f/63/5nHh3zsLZUx/n96QM9ULtk4NYFjg6e4Nz044wMjtxa
      APRmjaW1TUDm5JkTyB9jAajpGj9enMd1XT5/9DgDt5g1sB2HcruNIonE/R8d6zjNMKnUNTLl
      BvlKC71jYdkOtuNgOy4dy8axXWzHxbIdLNvGsh00w+J/+N1n8Xk+GOP4X1UAdjFNk8s//Dck
      5To/iIA/cfgKltm0+HTiy4fvBfLJDvNL2xw/c/uDhj+KdI1KKjsrtzqfmTnKTGLg0FZdEkWG
      Qndz7Of7p6V3eOntdQQEwkEPsZCPaNBLwOchHvIhSbeeY7cdh3ylycXFHAubJRpaB0kUSET8
      DMdDjA+G8Sgyiix2xzeSiCKLSKKILHZ/yzufoM+DR/loNWQAiqIw+thvoCx+l+Rag3Y1jjFY
      xxN+tyArtpfUcOrWAiApHizHppLNfawGwQ1D53I2w41CjuFQmE9OTjMaiX5o1JmVdIU//sEl
      nj83SSjgodEy2C7UqbcM2oaF2tDwKBKDsQCzYwkmhiK0NZNLyzlW0iqD8SBnjwzxnd98lHDA
      g0d5+HaTjk5Mc2NlghdGtqiMPove0Xk1/RNCYwdnKk8HnyASjhxuESa5AoMTqY+8PYDruuSa
      DV5dX6VhGDySGuX3H3sKv/JgfN/cCttx+PEvVzi/kOFffOtphuK37m0c10U3TPJqi5W0yhvX
      tpFlkU+cHufbnz97V3PvH2dOvPAtfvCDv2bKcQh4fQzVI7TH9naS2qbDQKQ7e3fLJ6bVymxk
      CiB89LrBXXbVnF9ub2DZDp+aPsJkLP6hae13abQN/s33LzIQCfA//e6nbqt6iIJAwOdhJuVh
      JhX/AEv50UIURYJD4/z9Ly4QMGo8Lr3FldAJAhMRrJrLsDvBkXOzwCEC4I8OMBiPkM6qHzkV
      qGNb3MjnuZDeIhEI8Nkjcww9YKdPvbKZNtWmTrHaIldpki03md8o8fXnT/DE8dSHoowfF3JV
      le0KiIFZiuU2yRsFjIif3zr6ewwN7k3t3lIA9EaVilpmu1j/SKhAjuuyXatyfnuTitbmSCLJ
      N888Quw9Nqa5rovesfAo0l1v4DoMw7TYKtTJlBoU1BbFaotKQ8PodD1ox8M+BmNBUgMhHjk6
      zNefP0HoDrYY9Lk7CutZxEBXzWn6xhk6IZBkhOTOGWe73HoQLInMHjuNFCx+aM9QclyXbL3O
      fDHPUrnISCjM42MTTERjh67gqg2drUKNlYzKZr5GtaEjiAKWbQNCbzbE71V45uQYz5waQ7nF
      xq93Um3qXF7OcXk5T67SZCYVY3wowkwqxtMnR0mE/b0ZmH4r/8GgdbqH4gmCQEw2mKwN8Wuf
      +uqdeYWobK5SskLY7QY68GGZ+W53OqyqZRaLBQqtJkPBMMeSgzw3NYNv36DWdV0aWofNXJWF
      rQqrGZVaSycS8DKaDHFkNMGzp8dJRLoVs+vV2sVyHCzboa2bvHJ5g//1j3/Gs6cn+PyTR/B7
      9/K3ne6e+CsreS4v5/F5ZE7PDPLNT59kOBFCPmSqss8HQ6FQYKOmIQd26oLr5ze/8a1brjXc
      ciHMdWyuXb6IFEpy8ujB1bRmtUK20mAg7EVzZGIhP6ZpEovF7vlCmOu6qJrGQjHPUrmE4zqM
      R+OcHh5hMBhEFiVs26FQbZEpNVjLqqxlqzS1Dl5FZmI4wtGxBEdG4wyE/ch30Jrvp62b/Ozt
      NV67tsXZI8OMDYZ5eylHsdpiPBnhsWMpTk0PEvQp/Zb9V+BeLYTtsr6xwf/+Z99H8o0yGzX4
      /W98noGBgVvGvetjUtObq7QtCZ8s4LpQyqwzceopEiHPPbEH0CyTYrPJarXChqrikSRm4wlO
      DA4T9vnQDYuNfI2FrTJL2xUamkE04GVqOMJ0Ks7MSIxwwHNHqsudYtkO5+czFKotHj+WYqTf
      yt8Rd2MPcC8F4LXXXuPPfnQBKTzC//jtT/a8mt+Ku1bxw+Ewhc08nogX3VEYPzKH3qgiRrun
      iUiShO04/PmlCxiW1XNvLQgCoiAgiyJBj5eI10fQ4yHk8VA3dLZrNRqGjixKDPgDxD1BnkpO
      U2922F5vcPHtGxSrLURBYGokxonJAX7t8RkiQe89G8AehizDpx6Zvq/X+DDiug5OeQVr8cfY
      uWuAC67b/buLICJ4wwihYYTwCGJ4BHn6UwjKg9sin83nQZE5kfLftvLD+xCASHyQx+KDt40j
      iSK/99iTXYt9OPBXN03SlToLmRJvbWVYzlUwdJsBX5Cwx4cArIotQr4ag7EAQ/EgR8cSPHtm
      gmQ0gFeR+urGfcZp5LCWX8Rc+SlCIIly6qt4nvrP99aF9j9/x8I1GjiNPG4ji9PI4RqNBysA
      mQyCHCNyB17N79skj9h15IhmmCxulbm2VmAlo2KaNtGQj7FkmE8dneHbzz66M0siIYkConjr
      ffh97g7XNnH1Gm6nidtWcbVK97em4hoNXK0Keg3X0rutuut0PzjgCSPPfQH/V/9PBM97rKFI
      CoLiRwwNQersB3Z/tyMei+FsbvDcI8/2ju26K4OYXxXHcfnbVxe4tJzDcVyOTw5w9sgQ33j+
      JD6P/IG50vg44zo2bruM08zjVrdwqhs4tW3cZoGuiiKAL4LgCSP44wi+KII/jjhwdOd7rPtX
      9nVbdEEExN733Ur/5ptvsrq6yhe+8AXa7TaJRALbtsnlcqRSKarVKu12m6GhIVRVRZZlIpEI
      2WyWEydOPJDe+tOf/jQXL/0rXvnF6wwmk+86FAP2HGvd9SD4duzOArmuy9XVAjOpGCH/3Rk7
      99nDMRpdtULdxKlv49bSXRXDbAECgi+GGEkhRscRY1MIkbFuSywpByrxr8Lrr79OPp+n0+kQ
      DAbxer3UajVarRZjY2MMDQ3x05/+lCeeeALbtpmfn2d8fJx2u823vvWtOz4l8l4OggHq9Tql
      UokjR47cNt59EYA+h+M6NtgGrqmDqeEadZxmAbeRw2lkcZt53HYF1+4gKEGEyAhieBQxPoUY
      GUOIjCIoPhA/mKnXdDpNOp1mamqKYrFIIpEgkUhw6dIlTp48CcDS0hKNRoNSqcSZM2fw+Xyo
      qspjjz32wATgTnkoBcB1XTBb3YqmVwEBRLmrz0oeEGWEwACCfHcvxe209g0Gs3uDwlYJ17Fg
      16mr7AXZi6AEujp2cBAxMooQSSGGhhECiW4FFz/8z/Je8CAF4MO60+Ge4Do2jrqOU1zALtzA
      qaziWgY4NoIn0K3k/nh3EOhYYJu4dgccE7dVxHVBDA8jJo8hJo4geiM4morbLuNqZVyt2m2x
      9TquY3UrdHAQMZJCCI8gTX4COTSCGEzuU0v6A/wPmt02/la90Ue+B3AdC7dV6qkPTj2LW8/g
      qOu4po4YG0caOo04fKo7AFT8IErvWRFd1wXHxGnkccpLOOUV3E4TwRfrCY4YSCAEB7tCJIgP
      TYt9r7mfPcCuR2nlEPuPD60AuHYHp57DqW7i1jZx1A2cRrarN+9M2wm4IEgIgcTOIkwKITKK
      GB5BjI6D4u+3uB8B7pcA2LZNo9EgGj38KKkPRAVyXRcsA9eo43Za3UrcaeGabeg0cdoV3EYW
      t5HH0Wvdyi3K3Uodm0SMjqOMnEOIjiN4gjsLMd11hn4F73MYhmG8p4/Q+zMN6tho3//vcY16
      b4FFUPwInhB4wzvfg7A7CAwkuoO/8HBXndiZj+5Pnz4cWJaFbdv3PF/HcXAc511HsO7nfQtA
      KZ9Bs2Vi4QCm2ektkOyuA3RXFem11v3K3OfDyPvWH7SODZbB4tXz2PJBXzqCICCIUvdzjxZk
      +vS5H7xvARCcDrrlMHXsFEaj0j9Kqc9Hkns2BnAcB9u27+p4mj4fb3aPMP0wc89KJ4rizkcg
      vbbA9esL6Fb3f5Ikks9uk8tmKKuN3kOxLZN2u83WVro3fWo0q6xt56iXylg7YQIOa8tLrK+t
      0NTtXp65TJqFq9dQNQNR7KpaakWlXMiRzhb2pmSdDtVqlaWFeVrGbnpYXVqi3tKQJKmXvlTI
      sbqywlYmv1emVp2b8wtsbGcQd8vkWGxubLK1uYnp7N2nrmm023VyuXIvfbNaYjtbRC2VcXfC
      XFNndXWV5ZU1duzlkSTIbG1z8+o1Wh2rV4HUikohmyZX2MuzUa1SKeZZ3djulUmvq6xubGG7
      XbuM3fT5bJrVlRUy+VIvfaumsrCwyHY230vvmhobm9tsbGztbI7r3pPWbtNuq+Tztd67zqa3
      qNablEt7ZVJLedbX19lK5xB3x4Ifcu6peHYrtkWj2SaRjFGt7FV2ra1hOw6arvfilgoFHNfF
      sqxemG12iMcibG6mcXbCXNfC6w8Q8HpotTu9PENBP7pmEAx2954LgoChNSlVW+CYe2USBHLp
      LVp6B9d1d9K7KN4Qoq1TbbT20us6utHB7Bi99FqriWULeCUBe7ecdgejY2J2DDrmXs9XLBZw
      XRfLsnvpzY5FNBIgncnh7oRZHQOfP0jAK2P00osEgl6Mjo3ft7eJsN2sU2+b2OZemRy7w8ZW
      BttxenmaRofkyAjlfA7T3rPOM3Qdo2PSMfbSt1pNHEFCYn96A9OxMTQNa99zKhSKvXvavU8X
      EcE2qNQavTz1jk0kHMG19z37DxC1mOHlH32PH738JkW1ceB/q2tr74r/6utv3Nt1gO7RlTKh
      UIBKqcrs8eGdl+Di9/txBBGPz9d7MT6fh0a9gXfH4awgCHj8forFKqFkAi+73aiCZZk4gsBA
      2NfLs9lsMTQ+QlOt4090j+vwer1ERKW7t2cnvSBIBEIRggIo8q5BjYQsdYXVF/L2yuT3+xEV
      L0ieXnp/MEjMhI7tIu2EyZ4AY6MjGO0GlmUjCB7AZXBwCMc1e/bHgiAQSyZpawbxaARh9z5D
      UWKCgtaoAW7vnnz+IHMnpilkSoyNdQ2PhkZGMC2Lilrv5RmOJTjmC6KW1W4FFgQig0O0Wm0E
      20a3bMI7hvyp0TE6lk21upc+OTxCMNqhUlZ7YaIkIQoyw0NhbNfdWWNxcG0LUfHj81p7h1bj
      4Epedh47giDgVSRMF4KBvff5QRIfHOX45BCVxCMMRkV+/tJLuILIsRPHePHFFxF/4ytIZp1c
      ocjgeNfn7X0QUYvmvh5gF03TcPb1AAC6pmE7Nm1N64V1NAPbtTHaWs8pl+ta6HoH2zYxDHNf
      nvpOnsZenrqG8448XdtEN0xsy8ToWLuhaG0dx7HR35XeQduX3tB1bMdB31cmx9QpVRtds0Fn
      z33YO3sAgIZaRjMdLNvqTRY4nTblagPXtnGc3dBuawsH0xcLBVwXbMvqhdUqJTq2eyDMNpqU
      6xqObePs0z4KxWL3zeyba1dLJSznYHrHMonFY2xvbWP30rt4fCEalRxtvbP3TN/RA0DX8VfE
      r5AtlHjQlFcvEZt7iufOjLKYtzgyO8v0+AjFYglREpi/OQ/cFwEQkESB7c0sXl8FBCgAACAA
      SURBVP/e8rZL11TSdfcqi+O6SKK0Y2e6G9Hp7tXZn6XbzVcUhQOzTbtd9/70XRVH2k20lxwQ
      Bd4xW9U95/bgSeO3yNNxEHbUgV7ZHQdDa1NvtFF6bsQdOrpBvVpD8u45u3Jsm3ariWE7vQNH
      HNvB0DXqbW2fO0SXjm5Qq9aQfXvPzrZM6vU67r69Ro5t02o26DhO71nZloOht2noBso+o33b
      7NCo1w+4unQcm2ajgem4B561qlaQfT6UfUZLzXoVywRfcM/M0TQ0NL2D17vnglxwLdR6C98D
      2tm5n9j4HFtXXuOVC4scnxnCatdZT+cplUoHTDrvw1YICY/Px7HJFB1zr3XxKDKW7eD1760Z
      BPxe1JaJZ98D8wYD2GoRyePpSacgykiii+uKBzwee5SuAf5+QfP7vNQ1E69nL0yUlG56Qd5X
      2QQURca2XfwBz770HhqGdWBvii8QwGqoKB5vr7JIigeBrrDuVTYRRZGwHJfgPgHwBfyUi3WU
      fefXSh4vOBaCJO/zMCGiKCK2Df596b1eBcOy8Xr3KqA/4KNWaaJ4PL0yKT4frl1CkuUDZzp4
      PQod28br27ORDQR8NNU2nn3XUfwBHFNFVBSkXnoJRRGwHQjt843UfZ82Xl/wQJ7luoHifXCe
      7kZOPccIAD6+9Ju/3gv/4pe/BsD02D85EP8+9AAOtiOjNcvU1GYvtN5s4bgCDbXcCyuUqsiC
      S6u5F69WyIPswWw02VVCHEun3TaRPFAuVHdCXRqNNi4C9fJenqVKFUlwaTb2umar00LTLUTR
      oVLeDXdoNNogilRLlX3pa0hwIL1aLCDIMkajya4C1mnXMUwHXItqvb0TatNotBFlEbWwl2el
      WEKURPRGi90mwWhU6dgCWB1qrV210KLR0BAVkUp+757UarcszVq1F1YqlpFEEa3ZZlexaVfL
      WEg4uk5jn6pYrTdwXWhW1V5YsVhGkqDdbPfUula5gC0qOC2NVk8F69Bs6Mh+iVJmr0y1Rvd9
      Nqt795kvqsiiS7vZ5qPCPd0LBDueH3Qdn09B02wCAS/g0mq18Xlk1IZOcmfkpLVbePx+ysUy
      Q0PdAZ9jdzBMgXZdJTo0hLyTZ1vTwOrgKoEdX5rdPL2KSK1lMhCP7OTZxuPzUi6rDA0md8rk
      0Na6VliiN0TAp+yk1/DI0NBsErHwXpl8vgPpLdPAdiUa1QrxoSEkwHVtNM3EMtoowQh+j9zL
      U5FcWoZLPNp1c252dFxBoaaWGRgaQqRrq6DpJqbewhuO4lP20suig2YKxCLd1rXdbuHzeiir
      DQaTCQA6uoYge6hW9udpoRk2nVaDQDyBZ6dnabfb+LwKZbXJ4M6p6oauISleKuUSg0NDCIDr
      mGiGi9GsERoYQNlR+1otDREL01WIhPx7eXpkyrU2gwPd85H1dhvF76dcLPby/LBzzwWgT5+P
      Eh/uZbo+fe4zfQHo81DTF4A+DzV9AejzUNMXgD4PNX0B6PNQ0xeAPg81fQHo81BzQAAsrUXH
      NlGrTVo1lc6dnpHqdGhp1nvHA3RNf+9I95h2vcLaVu7Q/+v7dn6+C6eD1nEoFouATaFQPjzu
      e3Db6xy4ZIs7fJx3TSm3ResdL7bdbqHpGttry1QaGtpdvyMHXeu8d7QPIQc2w0mizsU3biDG
      I/jVbdJuiHPHjlAoqwQEA8cbYzIZ4sZalmRIpm5K+FyNcMTDckbi1JE41WoBy+ygdwK0WlUm
      J4fIFZscn47z6vl1Yr4OA+MzaGqZibnTlLaXCIRjbG1nSE1O4ZcFWrUyFgodV0LQqwxOzNGu
      ZHAEmXyhRGpiGr8C9UoRw4aV1W3OnpmlVW4SnhihXm4g2y2GJo8TD/tY3Uhz7Phx5q9dIhJO
      sJHLMT09gVrT8bltyi2HoNxh9MgZjFqOhiXTKm0xMDJOdv0GidkXKC9eol6fJqPqlHJbhGJJ
      lIAfo1mjXa/iDURoGg6PnJzm0sUrJMfHMDWNWrXG3OmzvP7ij4gNjiB5gySDEvjjFLeWiURj
      eEIhXMuD6zbQLJmZUJt1K4VWyTIc9WLYArlchZmZYRo6GNUsHc0mOD5FQrZoWgqamiYSiRKK
      JylWmyiuSblUZ3gkguWIlPNVHn36HBfOX2TqaAvRE8Bqlpg59Tibmxt4/X621lY4GRsmV6rg
      Vxw2M0VCsSSiUcMbGaCczzKQmsCoV1hJ5zl3dAJ8YUrpVQKJWY7Pjjyoevy+kf7oj/7oj3Z/
      CHKAa/PXiDtNAkNTjKfCvHlpkdWNNEenJpAEB61e5G9efINTJ+bwSBKXfvkLWrbFQGKEpZV1
      rEaJUDxMNmswNx5no1alWqxy4uQc2XSe1NgYkl7khz95g8m5k+RXr7GdrSLJJpl8nc3tbRKJ
      BIJlYIsuP//xT0hOztEoZzFaOrrZZDujks5mGRoaRPYoOLqOEgwTFwTmt5dYWitAq4gt+QjH
      4qi5LRodm/Ov/oJWVefEmSmuLa5x7doyYb+E7BG59MtfIgeHKW5d58ZmkaMzUzRyGzRdh3B8
      knBQYm01zUhU5KcvvsrAaIpCvoJHtikXKuimRa3ZYnLAy/e//31avjHOjXr57o9eZu7kORy9
      hjecIBr0cPH1VzDkKOPJMI4/xOrCKpVKDskxqTYMRuMKy5kqL//iDeZmZ/CINpvraQrFTXIV
      g2p6idjgBHIwCI0iNzZz2O0WZrvC8soGBdPPI2NBVksam4tvU9Vha+Eq06eeIBTwUq8Uqbc7
      RKIRhpMJbl59G0vwE/ZLqE0Tv0fGcVyCwe5ZaMV8FrNdodpRUIslnnj6KQq5NMvXL2F0OrRc
      D9FwnIFE6H1VQsuyaLVadDqd3qder+M4Tu93IZvFFkTyhSxmxySztY7esVhb30KWXErlKs1a
      maLaolpM0zQcMhsrOKKXRqVAsayylc6BbbCdLaI1VEqV6r3bC6Q1VKo6pAbjB8KL2U2KdYtT
      x2/vp/1+UKtUCMUTSB+FXVm3oV0vc30lw5OPnX0gG8xUtUo8HvtAruW6LuV8mu1ii0fPHu+F
      L1x6jfNLOYJyhNERGUmKUC6mqTZqJFNTDAyPEffapEsNkrEIHrOGk0jh6l4cSyUe8nPj2iKh
      1CjxoEK1oTEQC/c3w/X5cPGj7/4p126W+IN/+S8Y2GfU8+rPfsLrV9Z59Mwka0vLXdvtjs7Z
      pz+NbLUpVxqMTqRIxmJUmzrnjk/y2oVrDA/EECQJU2+B2cFwEwheHZ9rI4eTB1UgnA7Xry/i
      D4WoqSqZ7S0i0TA/f/FlIiMjuKaJWsqwfH2ekuVSSaeJDw2S3VjBtAVkj0hdrZGvNHD0OpYr
      8PNXXqXdbtLUbfR6CUcOsL66CJZOtW2T31plc3sb3RLAqPPSGxfRagXW0kVsq0MsGqXdbndt
      YgsZTCRWFlcIRkNUyyXWNzM725Z1fvLDnxGKRVnfShP2CGS2F3n7Rp7R0WHqpSx1rcP2Vhq/
      349lmlRLWUqVKuffvspgMkyhXMcjS4hOh44rUM7nKFbbiGaTrYKKYuuUWyb5rVWC8SEqpRzl
      fAZL9LN84yJmPc9ba3VG4j420wUSsQCLN+ZxFD+ibdFqVdncStPSLW5ceYtoMsX66irBoA9V
      rSPYGplSjRf/7q8YPHKOzMp1PL4QRbVKrZhB8oVZufCPFMQUQclCb6isLF1ncbuF3S7iDcY5
      /8bLFNUGjUYLhQ7lehNJ8WOZBvVKgaZh4loW9UadTKF7XljDgHopz+WrFwnHR7j45ssEQzHS
      +RJhD7z0+gValRy25KeS28IbjrO0tECz0WJj+Qa5qsbI0K3P4b0TLMui2WxiGAYTsyeYnR2l
      mFfxexUMw8AwDJqaRmp4kKBHxHElTjzyOEcnJ/F7oFDIExlMge0gCwZ6x6LTqpKv1OnYIsND
      AxSyGZLJBKarEBqIMBoNUtM77xAAo0i5KfD2xatMDymUzQBvvfoGs0ePUFRV1EKRlt5hLBIk
      PD7Mxo0FYuMzZLc3qKt5lua3KJZzNNoGmqYzNTnZPTsYERGH61cvIXhCiK5Fu9lgYW0d9CaW
      nODE8Wn0douBZNcA3CsLLNy4hhyIIhoq85tl1pauY+tN8uk1Vio2M8MRllbSjM9MIGGxuryJ
      16uwePkGNUXhxHgcU1Jo1QUqlSx2s4pftjm/VsWsl7BcFwGBaDREIV9kIKxwdSXH1Pggr7/y
      GrYssbi40j1PCpuV5QV000GrFvDFxlGLaUy3ax6oeP1MDQYxRJnXXr+KaRnMTEYoliyuXbmJ
      0GlTs2ywu3kFgiGWf/ky2w2dalVj+sgMS0vL6O0WM3MnGBsaQK2U2L5xGWF4imapzMqlNxiZ
      nWUpXcWol6g3WxyfGcSSh6kVVpB8MTxeD15ZxBFElhevo1si+ZVrhEaOcOWXr2KKHhZuXMfv
      99NuNag32zTrVdqaRmJgiNHhQTq2i1oqYeoaQ5NTCHYHUVZwrDpXLt7EF4nR0ZrYjs301BRr
      61tMT028bwEQRRGv19v7ROMDSLjEE/FeWG5zmXrbpVAuMHVklszqEqI/yMULVzjz5Dkk00bX
      auTUNmZHxzRN4rEAqqqTiIcYGRnm2vwm09NDGJqJbXdwbPsdJpGih2KpwGc/+yxBv5fSwgK/
      8aXPsryyzcxIgkrLJiSbCL4I9ZzKwEiKiALJWITw4AQTRhO/DFvFJhOpIQB8skBkdBKPAH7F
      RQknCXpFWrUK4aFJmqUcUzMTZDIFgrJNNlvi6PQwmuPl1OkzANTKOYaTIaaSj4AvTDAcJzE6
      RTQoM5JKYjSaeMIBhkcSxAcGOHb2DOPjA2SqLabGx8AW0YJJTNGLWq7w7PEI5ZbN6GAcBMhl
      sswdP46tNUgNKSB6Of3YOSTHJBROkErGcVyb0WQCVQfDK5OIKIQ9Uzu2wgKirZOptpgeG2Qs
      kWA7XwZCTE0HGE9F2cxWODI+3tXhBUhvrPD4r3+djeVFJmZm8SsiczPjFBsWwwNd455Soci5
      Zz+D7AuQb5eYPf4l0mvLfPLEGNlSjbFEgEJbQOoUiUYHSCQiaEKbjhggGvIxEgui6g51USQZ
      Ujj36CNolsCx6efY2NwgnBgiothYcphoQKHdUKm1DGJBH4n4AOVaExkQRInJybHuQTquRDyZ
      wJPwkalo2JbJ1MzM+678wC39Bw0kBw6EO8D6+nWGUnPotkEwmqCt1kgMxWhqEAqFGR0McGV5
      C8kKEEsEWFxY4tjkSTYyGdrVOpOjKZZXNvBbJtmggqD1DWL6fAgwDINy+fbrKyuLN1nZyHH8
      xBSmKeID2q5JdjvH9MQg+YqGP+CnktskFBsjFhbRtQ6GJXL85DFkScDrkVi8uczkzDSKz0sp
      s/WOHsCxuHZ9kenpUTJ5lWTUS6MjMRgP4bo2a6vbIIvIgsPk5DQIAgG/n3qlQLnlEBB0HG8U
      vZqjg49WJYMkBSEc4NjYIPlqh+mxJPMLKwxE/eCLUc5soRsNkqNHSQSg2LC49Isf8tgLX2Zx
      fp6RZJDIwDiCUSM+PMbmZprxwQhNx0M8qLC5nWNqYoRarYlabzE9muCNi/M8/cQjILgUc2nS
      uSKT0zM0Wzon5j742ag+78072+GuWe2exwnTaNNstChXaviCXvLZGmMTw8QSSQRJITkYRDDb
      WLEEjt2m3ZBwPQqCItNq1FBEF80bYWJqlEKpwmA8iOwLHOwBrEaen738CzrxY8yN+HFtG1mW
      MfQWWrVEpaLSisxxYkhGEECUfMwdPcLqwg2ur6Q5NjuJ4tZpuyP4PRa4NgHRRTdcFksZgp4w
      x5IBOgNTlDeWwG5TVzUCo5M8fmKWK1euABCJRZiZmmF5ZRnLtlFkgWZdp9MoUXNDSFaFUHyc
      ZMSPoLXImBCVICDbrLU9TEY9mB2TjtVAJIrHLzAcDXFlI88LTz/+Ab3SPu+HzOYqLcNC9ISY
      nRrthb/80g/QdAdLh8RMCpoOpY1FLq/kef4zj3P82CnO//INgh4XXR5mRFZphabxaFVi4ylq
      mS3iI1MEPELXH5QooAjvVIFci6WFJRKj3Yhdum4F44NDFDMZYiMTBD0Chc0V4hMz1GoGUa9N
      pe2QSsYBl/TWJsPjkwidFpWWw3AijGFpZItNjs2M7esBIhQzGWamUlRaDnG/S7FhMTQQwe/z
      s766ytBoCgGBUnaL6GCK7e0cY8kQqg5e16BmOEyPpfB6RBZWthgfipKr6gQlE8Efx6gXCEUT
      tDWdlm4xNpIkHHp/CzZ97j+v/PRF1HqL5OAIzz33dC987eZ5Li41mB4UyJVrdMQwMVGj3HIY
      H/LQEJIcG42i6SaLy6ucmB3DnxhDFFzCfh+ObeBIfmy9homXZDyCLPXHAH0+BLiu21OBMptr
      1NsG8eQww8m9RdWl1bfxSlPMX3uJWruD2nAJCSrh8UcIOSqO4KNjdXDFIKnROFvzb5MYOcap
      0zMsbpSZHAqytFXhqUdOEAjs+UfqC0CfB45hGFQqlQNh7u6ZyjtspzeoVzUk2gieJNXSFr5Y
      kqlEhFxVRfRGsJsV6qbDcDRAs9UgPjaHVkxTqmtEI2EQBIYHBwAXx3bAfec0aJ8+DwCv10sq
      lToQViqWSO74ZQLIry1R0S0ijo7ptJCwsZp15utVookB4hEvV5ayDB05xvL6FjMTcVbnb+AP
      KBSLNZ76xFN4jSrXV2skRgJIgoyI0LcH6PNhw2V5/hrp/MFpUdsjE1NkFH+AjaUVWnqbumHh
      88rcOP86S2tp1HoLQa/RERSSoQiNWhWvL8TQYJTXX/op69tblKsNtrcyRBQRW/b2BaDPhw2N
      l198k8Y+d5kAgtYkr5s4HY0js5PUTC9afhHDEhg6eorhaICTx2dQIiO4eoO65RIMRxAlibHR
      UYaHh+kYFqGQglatIQRjdJqVdwpAk5d/8iqNd1hjXHz74m2LrGa2aFqwcPVtXnrpRQr1rrvx
      rc3tvTiqyo3rVw+ky2VzbG5u3O0T6lGtquSy2QNhWinNxYU1XnvxB6wtXWOj8k5DjQ43ri8c
      muf5N36OZnX44d/+DVfnVw6mrGywkN33YqwmW5muv01HK/H6xW6+qlrlnez3NbofVa2SzR5u
      rLOfbO7gvarV7nU2NzdoNpo7Yd3yNJv7rqerqPq700P3HRwsZ/Ndcfbnu5fu3XndC3K5On/w
      h/+cqfHRA+FSdIC4aOMoCpbjEpZtho4+QrNaRjLrrK6lMYQA3k6T6elpNhcWSYwkyawuspXO
      EIoP0dActLZKIJakVVglXzHeOQaw0HWLhRuXqbUMoorN7JknUasq3//ed2maFgFbxfCPYTgK
      AcnBo1h4dI34uecRmgZPPTHHn/7FX2GLAsNhiUJmghffusFzT55DwuJP//W/4pNf+DbT00Os
      r8xTadkU0luYio+I5FKsNVneLPLYqQkmZ8+wdvNt8Pjx4VJuNFnLVjk3M8jsmSe48PqrxAZH
      uLm8jlnZRBk+zrOPneR0GC6WMqxcfp1sqMmpER/VYo5ytUYkFqFZUrl56Q02Km2Ozszw+JNP
      sbFwkXpHoJrd5vSTT1GvN6lvXOT7lSZCcR3BbWO6MjlhkOZ0DL1aJBbzc20DnMplnvz8P+XR
      09Ngabz66hukUglaBjw+l+LGVhWPR6GwchllYAzJ7roSf+SZZ3j11TcYHU2yvL5NYfUSU498
      lqBTJ1vViCg2tuChrpkMRxSajkKtqlLPbWOER+ioaR5/5jO02y3azQYX33iDwSNHOXniLM1q
      Hq1VR3O8nEy6XKrVkKuLrN+8zuWVdf6T3/3PWL38C1y7w/f+5u85d/YU9Y7IzLCPQq4BWg3D
      5yE6kOTajXWmkh68Hh+blQ7Hx6I4SgTBbLFdsymtXsIzOMX2zQsMTT/FkZkR5o5Mvi8BWF+8
      wcaaDzE4wMT43rjAaDdo6RpjiQRuvY1ui6T8QYKTHjLr27Q0jbnQJAuLm4ynEpiCj8TQKE61
      SLnVJLe5RrVlkRoOIXpDROLDzAjld84C6agqWFqBjKozNTpILB5ndW0VRfLgii71tfPcaAzw
      9KlJcpU6o0NxkkGFjapNVNRZz5aYnRpjLaMyHFVo6xbVtsFEahgRCzWfJTw4y/jUEE21imWb
      NKslLDmM6HRIRoMsbpU4Mj1KIhZndfE6+OJg6STCPlZyNWbHR4j9/+2dV5Nb6ZmYn5MPzkHO
      QOdmk2ySQ3KGnBmNV+uSduV1vPKdb3zvP+If4RtXucpXLu+W17taaZWtkUbSaAJz6pwbOePk
      c3zRHJLN4Yic2D27eKpQAN768OEA+F584U2ZDBsr91ESBeK6RLu2j2DmWJg+ikra2d7FH9ax
      5TSNTpf5ahFBCBEin92NLUozc+wfNimVKiwtzrC5ep+hr5A2VaZnquzu1MnHYaAU2H/4Acls
      kcO9Pcxsme5gyEw2hmQkadY7aMKQTPUi1eKRD8/Du7fRTZOhC5fOLbK+vk4ykaTfriGYOfCO
      QiMXFhZ4ePc2mfIMqggHuxukSnN0DzYItRTTpRyBO2K7PiCtR7iiiTdoYCQztLtjChmdZH6G
      wBlAFLK/s0O6UEZUY+hSiCTLgEDGlLm9Vme6nCF0hqxu1bj8+jV2Vm6jxtM0D2uUq2UGVkAx
      Y/CPf/e3nLv0HS5cmqXeHtDpDMjHZTwkLDdCj2xEM0s5rXFn7YCCKSLE4nSbdWKJCstnpxkO
      B8TjiVca9FEUHSsy8km96Wf54KNf0z0cMQg8pgsFdg6bdOsNslNl/OGA3JlzFFVY31gjnytg
      BwEhAnutAW+dm+H+7XtkpxcZ9ocsL88Si+dYu/3HyTHohJMnCAJs+3gc8vOnQHfv3sDq92kO
      bNpjl2vnl2nVVkHLYQ1bnLn0JtVckvt3bpDN5vEiH1kxGVk2y0sz3L9zn1g8ycHeAYsXz6NE
      0G/XJ5vgCSfPJzPAs7dUOnXsuexHrG7WSJgahg57BzukzAwHu1tIRpKY6PLLn/6EWKZIezDG
      Ho24f+cj/FBgbW2FSNZQFZmZuRIPb94jFjeZnj8zsQNMOHlkWSaROL5cajaapNNPwzAjQ+L6
      9WXW7u2hJVU2Hj6iWSjjOR6ePaQ/tKg3DtC2YjR7Lq/NxOm7CtHaI9LFHLurd5ldOMNgGNDq
      7PPebz3KpdJkBphwujg8OCAiotfvH5P7wzG11piZs1OkVZ3l169z8cw001MlYopEvedz7Y2r
      CFqCXCzCzE4jh0PkeJFCOkY6kyN0HTRNRU1OcWW+RKPZnOwBJpwu/vDuL4lkFdnM8+aVp0Hx
      K3c/4Hcf30FPzpGShuzttygXE9QbAxYuX+baa5c43F5h+7BFqVQhEQ2ohTKF1Cy+1QBvzINH
      e8xdvkBCUfCtIT7h16MAUehx/8E6SwtV9psjiimVUEnSPtggP72IoUov72TCPxt833+mLG1E
      EITYto1pPi3A92DlHqLncdAcI0sSkmhjOwG9gc0777yFJku4joMcM/GcMZqiUK/XKVemcawB
      ihaj3xugx01kAdxxl0COH18CbWxssL29/aU/kGM5mKLNHx/sMuy38RnSOOyxurLKzZu3X97B
      hH9WSJJELBZ7fDOIx+OYhvmMLEbkWzTaFqHbQzWS5PIVpudmcEdN3n//d7z7m98jqgZGzMC3
      x6yvPWLoiWys3KEz9kilsgj+kI3tA2RZxtAUBsPB8Rngw/d+Bslp7r33C8698R0++OgOb145
      w8yZS1SLmT/1GY7R2lnl/Ue7TOUztAYWZ6oqKzsyM7kAT81w6dz81/E9TviW4rounU7nT7bZ
      XFmhNbLIJmMMRjb9Xp9iMUej0UJXJRLZEr5tkcln6fZGFPNprEEPRYtRb/W4cPH8sdKxn3Ds
      FGhhqoSTXaC3fxY5cJmarqLGs59r8APkZpb4dzNLx2Szk0jECZ9BGIY4jvMn2wSRi+9YhEKS
      mKlgqAquF5BIJMhmUoQRDK0Axw0QRZEwCPE9D0k3cV0X33WflJN9lskmeMKJ4/s+4/Hx2sLD
      wZB44mnk3q2Pfs9ux2euaDIKRErJBIIqong2u32P+ZlZCo/L7z7Fot2GbDbGi2i32xM7wIST
      x/M86vX6p+Rj66lSRJGAN+ohaEX0QZeDpkdcU3EcC1GV6Xa7uNYQ13UJggBZCPBQUGWVVtsm
      pmn4no8XBciiTBD4yLI0UYAJJ08sFmNp6fiS+XlXiObBOuPhgG5/TK/RJnQtBokiSdVDjFWZ
      KqRw/KNkupl8CX/YwB47uJ6FkqjgjmsMbYlCMYGuqnQ6PVzXnxjCJpw8vu/T7/eP3TzfO/Zc
      FiTKxSKRGHL+7AIiEfFchnQqhaqIrG5sEYQCgT3m0eoavh8hBz6RIBMhoOkGkuDR7XTptDuE
      kYDvjSYKMOHkkWWZZDJJMpnE81w2Ht6l2bOeyJLJJLIYsVmr09nvMA4DVCNF2O/yhz9+TCBK
      BCGMujUebm6iyjFGoz6PtjdwRz6D7gEff/QxrXqb3nCINxyz36zRbvUmS6AJp4sHd+5SLBVo
      9HrH5GG8yGKpSZTOUzvsYsZVgvGQRHEK1R1hZvK8dq6CJ8pEtsalaxfpjy0ScQOlVOLs4gLF
      YoYPf3+DpGmy/N23WPv47uQUaMLJ43keg8cRc/aoz/ZenYUzZ1CeKexw9+YNduo9zszk2G4O
      WagWCB2XZqeDkUpRyOUYDIdY/S5qokBKjxAllYEbcHb+k8S9AeOxh2E8zTh3bAn04c9/yaeD
      +V7Ow7v3+KIVou58/D5/eP+PbOy8Wojd3dv3vuA7TTitiKL4xOKbyZe4evUyrjU+ZgnW1KNl
      juXa5NJJNjc36fZbhLJB0ohhjYYIkka1UmTU7x0F2EgyoeciKxqxWAxZUjDjJgIRkqwQhZ8K
      iTzir//X/yTyRaaWzzPuW8jukEQuT88OSUoOgaiBbNDaf0SmukRj7S5t2yPGCCtQWFw6Tymb
      5Ed/99fkChUkM8+4sYkkCZTPXeV3P/4x3/nLH7A0N0WzO+b7f/F9AP7fopa8FwAAG0xJREFU
      z3+Mbpgki4u06ztcX0jyYTvL4e2fko0bVC//OR9++CFmJsvN937J3KXrNPe3+d47l3j/UY/v
      Xl/+Jn+3CV8RURThed4xWSqdOiYLRFheXqJ9sMLYanPQtPFsB0m0qEseg96I6+98F0Nw6Ny4
      i2ku4o76CHaDlY0EZ+erbK3cZb8HklPHSBep1w9fvAmuzi6wUKpw4dp1TE1AM1Ncu/4mYmAz
      9iLefvtt3HGHZK7CO9euUJ2a5/XrV7l44TXEMGBnZw+ATL7M2995m2GnSa1RR4snCZ0xi8sX
      WZqbAiCMAj5Zg4mawdtvv02ztgc8XZlV5xZ54+I8gZpiaWmJ+ekyxal5Xr90jsVSnL/5+U2u
      vz4Z/P+UeD44P/B8PHuMWaiQSBW4fnmR6twSyxeXiEkCpXKFjZVH2I5LtlBClo4SXwWIDFoH
      rK5vMrYtGrUmjqISOEPy5annCmQAiUwGGUgmU08eNw72aLbbzC9dpJI1uHPvIQvnLhM3VFLJ
      FJmExs1bK2i6yGgwpjw1QzIe4/aNP9Lujrhy7S2yCZ2xHVCZmsLQdJKpowCIYibBx7fu4YUi
      6ZjMo/Vtrl67jtNrsN8aUpmeJWUevY8cSyC6XQauQCZhkkylyJTKPLr/gMsXzzPh28nzBTIU
      RcF2HLLZ7BNZbf+QeneIbPeptwbIuo4mh9jDHjfv3kOMpfDHHcZRgG15ZEyNlY1t0sUqqVjE
      jduPSBkwdFQkVeOdKxfoecGrbYJ3t3eYnv38FUB2d7aZnvli2QFelc1Hd4iXl8gn9Zc3nvAt
      wOEf/s9PuHD9LRZmnpZdffDBb/nFjTXOTqcZeTJCFKIwwhHiCO6QQnmW3d1VLEcimc5iRj6R
      KTIeCxSzBs1Gm0iUSSd19nZq/OCv/hW7O7uvZgf4IoMf+NoHP8D8udcmg/+fENbYRtVkXO94
      bqpe4HFpaQ4zV6SYkDhsHNDsiaSzaZzxmL39BhcuXcJQZao5k95ozOKFK0xnYmzv9ajmTEaO
      QDqV5Mpb76CLIktzMxM7wISTJwxDfP9owG9vbJLIZpElAdd95mwxElBE6He65LNZJPGAailD
      o9EnnjDQk3EO9pqY8RyzS+dp91rs3PoYPZVCUUVEI0kQHpArVCmXSk+6ndgBJpw4r+INunP/
      Ju/d3+PsfBFR1nFHA0RCAlkFUWKuUmJ99QFRqsJiMcvIGtI/2CXUTDQ9geuNCdyQqdkSveaA
      pUsXUUU+PQMEB22wvefF3xrCxB6Bt3PSl/HKHCjfo+d8NRNxtbWD+vDuV9JXNJ2mqTz6wq/P
      Vt4kN/X2yxtytAlWVfWYLAzDYzJXN7i2VGSn1me3t4IZqEwvnKHXajA9U8SOJLKZLGYuy8HB
      Aam4ipTMo6oGaV3A9mTSuSKa6LI5OCSwB3TdF6RHjw67RL3RF/7gJ41X/hjf+t1JX8Yrs2W8
      wdZA+0r6Uh49IPF//+Yr6St4Z45V44df+PVL1/7LKyuA53mfKpIXRuExWa9xSHfkY1kOS/Mz
      2F0PXRXpiQJ+ECJE4LoOTrdNr9lCiEzcyKRf34HZIl6ng+VDSvYZOTa7m5uMvUl9gAmnAE3T
      mJo6sguNR0P8IGQ0sqhUnq7V6werNNqHoBgYmoqQjPHwzm0GbkixWsL2AkLfI6ZKVGaXSCkD
      +kqFjKFhZnMcNGokzASm6DNTlkgW0hSE8LNPgX70+1/T6LR59+aH+IH/JENXZ9DDD3yCMCQI
      XhRkdjq4u9Lmo7sNfD8kDKOn98HR/fpOH98PX1ij9iR4dPN9DrfWCIOA4PH3Hfg+0eP7IAhe
      +VqlbBYxkwFRAFFErpThBfGwr8LICugPfYIgIowi9uvOk+dfx3dXP9hlfX2dQDieOcSNJJRY
      ivmZBI3dBs3aPn7oHNUoFmQ+/M0vmb30FheWL9GtbyIaGUJ3hOsN0RWTd/7lX5BVHO6ubjK0
      BriWRX80+uwZIKbpvH//NjFN47/+j//G9954C1mSiKKIzqCPrmp4vsd/+LPvf+VfwleB4wZc
      Xc7x3//3A6bKJpbtY8YU7q62efO1Ip4X8rPf7nBlOc87r5de3uHXjGtbeJ7Lzd/+nPGghyAI
      yIqCosVIZLI8+PA9Xnvn+8wvX3lpX4KqolQrBK02sbffwrl9B0GPEYUB/tbny/oRBBFrOxbD
      UUAmJTMYBWRTCqvbFjNljSvnv3zBQc/z6D32/oyn88QfJ4RrNptP2oiuj+W4+J5AojCLaXWp
      FAtIskintotuxtnZ2WI8SGOaBo3DAxq2hOp0GLHKzorLcNhhMBTJVIvIvsXqfv2zFeDSwhKt
      Xpd4zEQQBKYKJWKajiAIbOzvkk0mcb3Tu1ku5WPcfNDi6nKOdFIjn9Gpty0SpkI6qRGGEYm4
      QqVgvLyzb4C5c69hJJJkS1Uau1uIkkS2VMUaDRh0Wpx/4x3S+VdT1GAwINryEHQd5959/GYT
      KZ0m6P7pzAsvQlNFpooauiYyGAVIkkA+oxCGEenkV7OC9jzv2GB/EV3LYrpSQNcERs0e6Xwe
      z/eQZRHTDyhWppFEEbvfYhzKFNNxek6Xyuwinu9jD20y+QrJrEDkuoxCkaQZ/2wFyKcy5FMZ
      BEFgunj8i5/KF7+SD/51Ui2aVIvmsUJr2fTpNZjF01kAzEQK88LTf/l4KkOh+vkMitFoRDA6
      Osjw9478soKXDLDPQlNFirmj05hkXGaKow17Lq18of5ehK7rLCwsHJPt7+1TnXpaJGPQrrNX
      rzO2xhSqRRpNi5m5At3GAbqu0233WZitkp06j7Jxj6HtYJhJPMfGcWym5pcJvSGWG2IaMUxN
      ZGtn78UKEEURP/7Du5ybWWCvcUg5W2C7fsA7l67S6nXZqR8SNwxiqka73yObTOF4LlEUcXZ6
      DkN/cRT+N8mthy0s20dVJFRFpN1zuHI+Ryqh8v7NOoVcjGbHQpFFNFXCcQPyGR1JFKmWzJe/
      wVfMoxvvEzNN7PGIQnUWLWaw+eA2+co07doBmWIZTTdo1w8ozczTbdWZWjj3wr6kfB55aoqg
      3YYgwD84QF0+j79/gFytEtTrSMUikWXh7eygLMzjra69sK9vgk98gY6IePjgEYlU8hkZoPic
      v7DEr395gzNnJMZ9i7sf3KDb73Dm4lni2TKDbhNf8JH0PAWpRk8tE/cGRPkCtd1HpEoLZJIC
      ve4Qz5NIpTOfvQn2gwA/8DF1Az8IKKazRFFEIZ3F0HX6wwGO51J9PBus7e2wuruN9ZL8Lt8U
      QRDh+SGVooEgCNhOwMpWj52DIfv1EamESrvr0OrYNDs2W3sDVrd6DMcns6wLQx/f8xgP+niu
      i+vYWKMB24/uMux3SOdL2NaQbuOQvfWHjAe9z+5MEhEkCdE0QJZBkhBkmdi1NxBVlch1iWwL
      QZHRlpcRjdOxDDzC5d2f/YrtvcZx6cjjxz96l0uXplhf2aHdrlGvb5KbXmKqOsXh9hq5mXny
      hSlW734Aeho5sGn2u8SNJIuLSyj41Jst2t0OMTOF4P+JmGBREOmPhgysEc1em71mja3aPrfW
      HuK4Lul4EstxuLFy/2iZVCgxXSihyKfjZFUQYGT53HrQQpFFdE0iYR4lU1IUkb3aEF2TiOky
      MU1ieTFDTJcxja9uav981yviWGPMZJphr4PnuqiafjQb6DHqu5s093eYOnMeQRCJp7Kf3VkY
      IWgq4WiMqCpI6TSR6+E8eEAUBChzswiaTtDtEvkeQb3x2X19w/z6Jz+lcmaObD5/TF7Ip/kX
      3/0+1qCFaZhUphZZmFtAiYZsrq+xtbPNoGcTWCN8WWH13m326y10KeCw2SSTryD4Y3pjn4WF
      eSSniaukX7wEEgSBv3rrz1Bk+dga2nYcdO2rMdp83VxdzhOEEYp8pOPnFtLYToCmiizNpV/y
      6m+es1ffQkBAlCR8z0WUJArV406IM2cvAlCaWXhRF08IGg2sTgce+9cgy0/2AP5zRfGCxhfb
      G3xdLL92mQ8/uontHI8xFAWB3e1HCEqaUjrEkWQ8USRAJFua4ko8ybCxxd5+iIKCHI/RrO9w
      9spleo7FR3ce8saFeTr9B/i2i6MksOv7nz0DqIpybPAD35rBDyCKwpPB/wm6Jn3qM50WJElG
      fFwXS1ZURPFLZtD2/Rc/PuU8uHMLQTWIacddI1qujya4ZKpJFFXHcbtIhkYky/jDDo4TkMun
      gZCYYpDIZdE1kfXVLTZ2Gsh+j+1aGyEC33GZmqmiasbEEjzh5HnWGe71d74HQKvZov9MkQxd
      kInHE9QPG/iqjCqrSLJCKAqUChUSvoeoyExVpkkkUghCiOIFyLpJzg8QiIiCiFwhTzKdZtjo
      kCtkJ3mBJpxOUunjeT4HnQG3Hq4Q11WGjoeu6+hiRKdxyHargywplEvZIx+iwxZeBP1em9AN
      EbQYkqJRLqQY9HrsrK7RHg+p11uTGWDCyfNJYqxn6Xa6x2RmvsCFhQGSptNodChmU7hBQISE
      LrrYjke9O2Zv4xHp8gXiqkA8k8dHYGluFk0S0HWJMILF5WViyTg1YX2iABNOnuMVYo4YW2Mk
      +ek+aNSp0xpEVFIW5xfn2Fx9iKLIVCt5PCGB5vTZr/ucObvM6qM1VpwUkmLQa+9QrJbJJAz2
      NncIkFhdf4iqx/HtwUQBJpw8QRAcW+9/wrMywQ+xfYfA0+jaNpXpGYyYhuu4RMGA1shBT0i0
      +z7xVBxViLCCkIiQra11DgRwRh3qXciW0xTCHrV2f6IAE06eVymQ4UsSlbROEKrYow7peBE/
      VInHFdbXNzFSOTRJYNzv4oYCgiQw6Pep5oq4UUS3VUeLp6hWDPS4jiqCoVsTBZhw8miaxvT0
      9DFZs9kin889ed4+2KHvR2iSgBEz2NnZQjMMOq0OhVKVaj7FzRs3iRdmScdjaIqA5G3R7Icc
      HHb5wffeptEdUy3myD82si3wgpDICRO+aV40Azi2fUxmqgqCEWPY7qGaGTRRICFI7I4tLpdL
      xHQJTZUpFIuE3phMKkGrBrl8FU2L4/oh2aTJaNjhYK/GwrkzKKIwOQadcDqIoujYLR6PH3s+
      clyG4wH17hgNn6Ft03cdsrk8hD61RpvZ+XkSpkZM19FMg+nZRfL5HPNTefpDB1EUkGWNwBvh
      BUfvOZkBJpxKnj0BAgj0GClJIrs4R317nUwuw/7+PvHiHIW0waYdsfzaWULfR5ZlPM8jl/3E
      XyrJs55FuWfc+ScKMOHEeZEd4GD/gGz1qcOfRIjjq2QVyBTSDPseUzPTeL7Pe797HzVZonaY
      QlNFAmTsYQfDiJNMpThsdrl47swL3WAmCjDhlBHSrtcY2B6VZ6SSO0ZOSKzduo85WzyKU/dE
      7j7a5q3rr1HOFfn9r39CcuYCqjdGkzy26l3SiQxeKIHTQ06UyJkiB40+mYSGF0wUYMKpw+Hv
      /v6XXH7jNeBpJJyv6aj1NvOvXWavsUs+k2Zkjbn++htMV0sUi0UC702MVIpuZ0zOjCgsXMEb
      9gmEkDAI0BQZyxoRBiGSbqJH3kQBThpNEjCUr+YsQjZiSLncyxu+AkIiha6XX97ws65F/aLB
      8jKVaplk4nhUnmjDfm9EXndJmSbJVAa8Lgkdfv+HP7J8+QoLc2dxuvsMHA/FsRCLOp7rUp2Z
      IXR69Hs9sHuoRoJavYkhhRMFOGlu3Vrlw7Xhyxu+Aj8FmP/Xn5IvXYjzoL/7BXr8z/ybhQT/
      Pvn7z/1KtVB5eaMXIuBbXcbe3HFx6JAuz2HXd8iUcqzu7JHwh/TsGt6gzqObjzBiMr/54Q8p
      n7+KHwYU8xl2th5hhy6N/R1GtkTGDAjlFBlDY70/cYY7cXojm1rn683Elx2JHA4+7WrwKgws
      gUj//EEzUTB+eaMX8N6vfoUvCMjK8XgAKR7H2l5j/sLrSE6DlC8RNQ+QYxKJ0iJpRWGxmmZl
      6TymrOA4Fq3DQwI7xCbB0uwUvpqkvb9D4Pkkq3NI0cQOcGqQJRFZ+nqDdQQEMjEDSXz6s8vi
      6RoCiqIgKSrKc8egg2GPcjZJb1hHj2eobT7Ey51DFCQq2Th2YLNzOKC9t4MjyiQTBna9x8Vr
      l8GysSOBXq+DpMWZmp8lpigoujCZAU4Ls6UkUQS246MoEqp8lM3C9UK6Q4tc0qA9sMglY4xs
      j5365/9HX8jlGLsuV7JTHPR7KJKErsgICKw06pxUjjzHcZ7kBarOL1EFPM9l73FKF4CUEeMP
      K3VmqxGtrkQqW6CQihOPpWnub+EGAq1OlzPnziMZGiktQcqMs/LgIfPnLtNrbDHyFC4vL+KM
      BziOj6LpEwU4LbheSEyTiRsqF+fyrB906Y8cEKCcjXN2OsvmQY/O0ObLzBOiINC1xqiyjKmq
      FBMJUrrOVqeNc0Khk7Isk8lkjsn6vT7J1FPbwLB7yMKZs2hBB9/3yJaqDOtrdKUslVKJnJYi
      aaj48QSGEcOzR6Cm+Yul86iqij8/RRiGxGI6PHPAOlGAU8J+c4AoCkRRxEFriOsFqIqE5XgI
      AuzU+4xtj/BL5OPcaDVJ6jq1x/sBQTj6509o2okNfnhxenTgmGzo+EwXkrQ7Lpqq4IZQKV/i
      0Z01hn0fo1DgzJkzjEYjTNOkP+iTTCQ/1efzTBTglPDJ4A/CiKF1lBHB9Z8mH+6Nvny+pQjo
      2fYzgiNl6jwXjPJNEwTBk4CYMAwJAx8vCI8FyYiOz0Ztmyh0GbouiqAjeAbNdhNZr5DC5h/+
      /ofMnzvLaGgh+COarTbl8hQ7jR4/+PO3J5bg08yb5ysctIZIkkAQRPTHDsuzOYaWS0xVWNlr
      s1jJoCoS6/sd8imDu5unJ5/Pl0GWZRKJo6qhH334Ie36AWZ+mpnpp6kRJQ3kmERvZ0z+bJWb
      v/uQw5pGLJ4nm02higK21WNjawt35FBMwMgXaTTaRH7EnRvvYxYWycdFDus9EgkVP/AnCnBa
      qLVHFDIGyZhGa2AxtFyiCBRJQhAFlmfzaIpMqz+mkoszsk5vYuLPSxAE2I9nJkMTSV26hhi4
      jEZPj4ct10MNJcqLVaJQ5OJrl3HHfUYji732gNZBjUL1DPGEyvbKOp2+jeUnkewGmZnzZDMq
      h/sr/PGwzWwhhx8mCVx3ogCnBUGEg+aQj1qH5JIxBEGgMziyEeSSMdb2O8RjKmEYoqvKseXR
      t51nK8QYyRzg4wb+sQoxgeWzsVdnfmaaIAowdQVTMkhm88hajJSq4AUugRRjen4OWZaYFWU0
      WaLd7jH2FNLZClcSCVTFRI1pCEyOQU8N6/vdJ48bvSMjUvPxfXd49O/4yd5g7Hx7El29Crqu
      Mzt7PAP286dA9eYhuU6HCJ+7a7tMx0WMZIlhs0apkiMyCjSaAxZn4uxZKtPJGNZoxCiKce2N
      S3StkEzCgCikVmswOz+PJE4UYMIp4Fk7wLMMhoMnj91+j92Ww2JsyNnpCpEgkIwJjBwNSRLZ
      PzgkCGFva5P15phRDcxcBVHs0h0c7S86HYfQHhEqJocH+8BkEzzhFPBsjbBPaDaa5AtPw1h6
      zT1myhGCHkfsb9EYyTzY2+Cv/uN/or56g7iWZq9VxxEVwsBhZmqWw57HfKXEOAzwez10w2TQ
      aqNWUiQUcMbDiQJMOF04jnO8LsBj3FiCjNmiMQ45O32G4LBGJX+V0WhANl9FkxSWr5yj0bMZ
      9QdcOFem9/E6sihTnK6w0e7iOA6iooI3Zrs5oJCKTRRgwuniVz/+B1KlCqXphWNhjILlIusx
      DMZsNkbEU0k8R8Da38DPlxj0+0RbFp1AJ+juccftYhTOEFP7/Phv/5G5ShlFUsnkcmysPsRI
      ZLCsyRJowinj9e/8GcXSp0twDUdNDps+wriOWalQ3+kSOA2m58+zduc2lbOX0HSdB7/5DZlU
      gZHt0t/v0jI1EvEYtmMj4PHujVucvThLLJbm7gfvThTgpHn7zQKlc5mXN/wSdO0xt7ovb3dS
      PL8J3t/f/1SbYBygKSJmeYa4riHnIkRhDjvwWTq7QNsasl8bsLR8FXvQJJmrYO2tEwoJyvkE
      rhtQ7wy5fGGBvgeS3yI7szBRgJOmY4/YH34x3/lXRTzlXu+vsgnutw9orO7Rb/kUZzMoRgps
      m7WVexQX5wl8KE+Vee/3H1CeXkawW6QKRQpGjs39XaqZNDEBar0euXgWiwBDkSYKMOHkebY+
      wLM8mxt06EaYqo6p2+haCqvfRBIkUrkshUwBMRKQBJhaXMRAoVip8oebD8lMJyjkiji+hZGO
      0211ccQucsKk352ERJ4atu7eQ1FVxoMh5cV5wiDAHo0xU0k8xyVdLJz0JX5tCIKA+Fxgjud5
      6LGnZW2jEIxUEjkU6fS7iJ4LikElV0AUA/xQ4NaDTUbDPl4gYY1SLC5dotHYQ0Rm/twZVH9I
      tz0mWcph2wHp5EQBThWF2Rn2V9c5XN8kDEO0WIxBu03nsMab//bTsb7/VIiiiCA47tphmMYx
      ma4IuK6EHk8RF0LiiRhaMoXn+oz7TbR4jmy+zNLCHIftLpVsglHgEyGyfPEcjcM9TE0mmy+A
      ZjCfVqgP7YkCnBby09N0DmuUF+fxPQ8ikFUFazAgkfl6N8knjSzLpFLHK8I8vwfQlJBiPsfD
      tUdgDznQ06Rqu5y5eJW97QHuSGW+GKe1v0vLEcnHBLZqHt/78+uIgKYo5HIZhKGMkTRJKhGW
      qE4U4LSgx01icRNRktBiTwuNP/v4izKdzvO9Jf3lDV9ANafTi33+gn1JZZFXfcdn4wE+QY/p
      DIdPs2VYnkBjdwVJzTBbyrFeaxCLGdx+uMe/ePM7CECnVUNbXCbtjIlrMterKQz96Crml84D
      MPVYzxwgbU7sAKeG9Y9vYmbSyI+rcybzObbu3CNTLuG7LpKiMOr28D2X0vwcvUaLmeUXV4p/
      HlPLUk5Nv7zhC2h48Atv/nO/7qpp8vorthVFEeO5Yt2tVovcMzmOrP4IFwFv1OBeJ2Aw7NAO
      HBLlRRqNGhEiFy9dRhbh7q2b5Mtz2J5Hp9kiXSxj6grDXhs7lBG8EYqZYdTZnyjAaUE3Tca9
      Pu2DA7LlMtlKGTOVIlMq0drfx0gk6NbqhGFIfXsHVf9i/+inEUEQPh2tFXFsYyxrArOFM0R+
      n9FgSK0mUKrkuf/xbXaFAUNHQ1U0EukMo1GfDz94n3avhZGoom9ucmn5PCsP7tEZWiSSCeRg
      gCPEJwpwWvA8F1XXuPqX36dbq1Pf3mE86NOt1+nW6gSeRywRJ1UoYA366Kb50j6/nbj87Ee/
      ID+zSOGZky8V+NmvfsvyvInr60iiRH13l1Q2xcDRODdX4vbtm8gxA4mQ+UKK9ZqHGPYRDJ9b
      N25S299HNyvENI8oiuiMOvx/OiR/m9/SjL4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Globe' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Groups' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAaz0lEQVR4nO3dWYwl133f8e85td61l+llFg6H5CwkxU2SKTGx4diKYjkBIiW2AyQInDwm
      D3lJHvOWxwQRZMV5SxAkcCTYFvJgCYkDbXZkiBJFckiRFNnD2fet17tW1a2qc/JQPc3uvren
      b880SYv1/wAEp6vvvVUNnN+ts5ey1lqEKCn9cV+AEB8nF8Bay927d6lUKh/39QjxkXLv/aNa
      rdJoND7OaxHiIydVIFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBR
      ahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoS
      AFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBR
      ahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIA8Uvt
      nYt3eHXhBlluAGh14z293/0wLkqUizUGOxiAMehq9b6vNVGECgJsmqKD4KHPnaQ5k/WQH799
      lZVOxLH5CRZbfabqIZXQ4/kn5u/7fgmA2BfJwgLWWJxGA91skt29g3vgACaOGZw9R/iZT2Oj
      mOTCBfzHH8N0eyjPQzcaKM/FO3jwgc5br/hEScqhmQaTjZDJesjcVI3lVsR0o7Lr+5Ut0O12
      aTQaD3QRQvR+8lOcyQnit97GnZ8DpcnX1nBnZkBrwJItLuFMToJS2DjGdDq4R46gtKL60kv7
      ej1JmuG7Dkqp+75OAiD2hU1TcBxsnGDTAcmZM4TPvwBYUBoUYC0Yi/LcIgRJAo4DSqMDf+xz
      rXYizl1f4chsg2SQ89jBSc5cXSL0XXrxgEfnJri+2ObJR2c4d32Z+ak6aZYzP10f+iypAon9
      4brYOEZXK0BlrG905T5Y8VtpRyRpRi3wuXJ7kScOT9Go+lxfbDPdqPB/XjnHiSPT5MbwzsW7
      dA8OCAN3SwCy3HBzqSMBEPsjfucX2DjGmZpCuQ6Dq9dwpqYITp4geuMNsKCbTWy/D1oTnDxB
      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
      hQc6Z3bnDtGrrxG9+SaDy1e27j63V0qhGw2CUyepvPgilRd/Zde5RjIXSBQsxXqAPANrydtt
      8qUlbJIwuHCBvNUmuxXhHy/qznmnS97pYBbOYO4z+no/Sim8gwfxvvJlml/5MqbXK6Zhnz9P
      dusW6c2bZHfvrl9XvjHbUzlOsXdQGOIePox3cB7vkSMEp07hHT16/w21tpEAiHUW5Xnk3R55
      u4Ou1nAOHCC7eavYHDc3qNkZ7CAFa9FhgDc3T95p48/N7ssV6FqN8NlnCJ995oOrMgabpthk
      gF1f+6uDoNg+ZacdpfdAqkBig80ycLbu1myS5IPZop9AcgcQG0ZtWvtJLvwgK8JEyUkARKlJ
      FUh85KI338Q7dqx4jjFg0xTT7aLC8L7TrcdhrSV6/TTeo0dxmk2yxSXy5WUAgqeeXJ/GkaLD
      kLzblQCIj162uISu1UgvX8GZmCDvdooAuB756gq13/iNBw9ClhUDXmlK9NrrmDjGmZzEJgnt
      b3+n2MnCGOq//SWMBEB8HIITx9GTk7izsyQXL6KDAO/wYUy/j81zTBQ/cACU5+GsL9t0pqYI
      5udRgQ/W4kxN4UxNFuMNFy7iP/6YdIOK8tm8ZbrcAcSHzuY58dtv4x8/TnZ3EV0JMd0u/qlT
      ZHfv4k5NkV6/jjM7S3rtGsHJk6S3buPOHMD0I9yZ+z/Fcq8G584Vu2KgpBdIfPhMp0N2p1iS
      mC0t4kxNkbfaKKXI7y6S3riBiSL6P34Z0+uB1kSnXyc5d470+vV9vx47KEaWdRhIAMSH797c
      nP5rr0Oakd29i3f0KNnyCnmrRd7pbEysM1GM6XRxDx7CtNsof2/PCxiL62KThHx1TdoA4qNh
      +v0tG2FZa8lXVze6Qj9K1hiwFuU40gYQH43tu8AppT6Wwg9sWRcgVSBRahIAUWoSAFFqEgBR
      ahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoS
      AFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBR
      ahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoSAFFqEgBRahIAUWoS
      AFFqEgBRav8fhFR0+2ULToQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Grp' width='192'>
      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
      wTGuef4fFY7Et6E+pdMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Infl &amp; Pric' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Plant P' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANIElEQVR4nO3dWW9bZ2KH8ecs3ClKIkUtkbfEdibpIMugSGdadIC21wUK9KbodecL9OPM
      zdzN/aA3QdGLAZq2KQoEGXeaxE6caF9JcedZeLZe0HHsWJaTyDLlvP8fYJgijg5fCucR35c8
      Iq0syzJEDGXPegAis6QAxGjuo1/c+Zf/ZnDYm9VY5BKp395jOPz3WQ/jXCr5f6C3ffbv+McC
      GBx06Wy3LnRQ8nJwF7fodT+e9TDOJSn+FZ0t58xtTs3Dsi2wrOc/ogvYpVysLMuIk+zh5STJ
      SNKMbz93cpHPpWTZk7f3vVhgPeV4dk+7cvn2OsNWDwsLy7aY+BOK1SK5cgGvMyQcB1SX5gkG
      HlhgOw7FuRJO3sXrjihUi5BBHEYEI5/61Sa9vRPW37pB66sD0jhl4oXkywVqKwu0N46Iw+iH
      30G5MPe3AwDKRRvHsfiPj/pgwS/erlEpO3T7EddeKXLn7ojXrhTpjRLqNZdOP6JadonilCBM
      ubJaIJ+zGfsJSZLRHcQs1lyCMGXoJdQqDmkGYy8hmKSUiw5pmrG6lOfjuyN+8XYN5+xf5k9V
      v9okXynS2zvBsixs18Z2bCZeeHoAWZriuC5YUL/WxO+PsSybYOCRK+YpVEtYts3CeoPj+wfU
      rzUJRz5pkjLXnGfiT7BsaLy6QjgOCAYeWZbR3jgkVyqQRgmlhQpk4PfHxBMd/JdVkmRcWS3w
      1a4PGfz8nRp+kHBvw6NacWh3I+YqDrWqy5c7AUcnE5brOY47Ebeul3Adi9ZJxPycS33eYnMv
      YDROcF2L3jCmXLSZRBntbsTYTygXHaplB9e1+OO9MUcnE5YWc+e7E5ZFMPQpL1bJFfNARjgK
      qK2UTw+gvXFElqbTH0CUkEYxTt7F73vA9CGpslilf9CBLGPUHmA7Nn7fw+uNyNLpw9VkHBIF
      EwpzJeIwYhwlD2+jvFglGHg4ORcn55JM4vPdSbkQN68VOWxNWGnkpwemY5FmLvWFHBaw2sgz
      P+cSxRlrzTLLjRy1istqM6a5mMeyIOdaeEHKwhzU513Wlwvk8xaWZZFzLQ5aIatLebIMvCCh
      uZhjME5482aFxoJLdxBjn+P5yt7eCWmcYLsOtmNTqJYoVIt0d9tYj74Q9sGv39ciWABYfvc+
      ve7vZj2Mc6kV/5n2vR+wCBb5UbF4sFa1p/+7DpZlYTn26VMgkR+T+bU6lm3TvLnKqNXH/no1
      bT3lWSCRHxOvO8K2bU42j8myjObNNfb/uIllWwpAfvwifwJAOJ4+pdt9ZJ2rNYAYTQGI0RSA
      GE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjR
      FIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0B
      iNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjRFIAY
      TQGI0RSAGE0BiNEUgBhNAYjRFIAYTQGI0RSAGE0BiNEUgBhNAYjR3FkPQC6n8tw1nOJfzHoY
      51IpvIIVnfI73oLEysgyBSBPkZv8DHf81qyHcT4jmC8/ebWdd/jPKwGt0VBTIDGbApAzHbQP
      +WLnSwCyLGPzYJtJFD2x3dgfn7mfNE3JsgwAL/DIsozBePjEdpNo8sx9PU+aAsmZBt6QwWjI
      l7sb9McDdo72yLKUdr9DfW6RvdYBq40Vtg62+eXP/pzesE9/PKA/GlAulHAch5N+lyRNaC4s
      cTLoUCmWKRdKhA8O9jduvM5R55ickyOIQvwwwHUc3r39FpZlXdh9S9NUjwBytkkU4YcBn+/c
      pzvo8fatn5JmGUvzDfrjAfe2v+Coc4TrOuTdPJ98dZd274S91gHdYY/d433ubn3OXLmKH/rc
      3bhHf9THnwQkacxnm/fwAo/usEd32GMSTbCAe1tfPHzEuCiWZWFlj9zKB79+n85260JvVF4O
      t3/+U7JxfK593N38nIW5BVYby89pVM/Ho4tgTYHkwrxx4/VZD+GZNAUSoykAMZoCEKMpADGa
      AhCjKQAxmgIQoykAMZoCEKMpADHaY6dCFKpFirVT/oJAjOM4Nuc7E+jl8FgAYz5jwOaMhiKX
      SWwtA4VZD+PCPR5Av8uwo7NBBZIowjEggFPXAMXKHLlC6cmNbed77dx6sL3t6KRTuZxOPTKb
      116jd3xAdaEOQBQG5EtlipU5ht02E29MRkahXCWNY8rzC3j9HsXKHJWFOp2DHQrlCvliiXGv
      M90uTQjGQ9x8gf7xwQu9kyJPc2oAoTcmS1OSJObqm+/Qbx1RKJXpHu7iujkix2Fp7SqVhQbB
      eEgSRyyuXMGyLLpHexQrVdZee5PW7leU5xexHZf62lW6B7u4+bwCkEvj1ABaOxtkWYoF3P/o
      v0iTGNt1mfg+AFmacLj5Bbb9JZZts3L9Nhv/+z+4+QJRGGBZNqPuCWmakCbTf52DHZJo8nBa
      JHIZnBpAlibT/4HQG02vDB/fJokmJA8u79y9A0ynSl+LvrV9MBqce7Aiz5teCBOjKQAxmgIQ
      oykAMZoCEKMpADGaAhCjKQAxmgIQoykAMZrOUxYjLQ3GOAO9O7QYavvjP3B4sK8pkJhNAYjR
      FIAYy7IsrQHkdMWST6UwmfUwLoSdywHTT71UAHKqQutfqR3/ftbDuBiFGvB3gKZAYjgFIGfa
      6ky4s+s/132GUcowSOic8imUfpQ+19t6Fk2B5Ex9PyHN4H4rJE4ydroRS1WXDzc8/ux6ifWF
      HKu16dfzRYcPNzzeuVIkSjK+OJ7w3vUSYZyx24so5WzqZYf9fsRbrxT5w17ActXho22fN1YL
      nIwTsgz+/t158u7FfUD2oxSAnKmct9nrRXS8hLxj4UfTCJpVl2rBJu9YBHFGmkE/SFgsO9TL
      03f+6HoJ8yWHnW5E0bW4vZyn5yU4tkXetSjlLOIUbjYLFFybW00Xb6JHALlEbjUL3GpO3yIx
      TTM+2vF5e71IwZ3OnsdhStG1+MublSe+9+aD71tfyD287nod3rkyvbw2n3vie140BSDfmW1b
      vHf98XcPrxRe7mXkyz16kXNSAGI0BSBGUwBiNAUgRlMAYjQFIEZTAGI0BSBGUwBiNAUgRlMA
      YjQFIEZTAGI0BSBGUwBiNAUgRlMAYjT9SaQY6b2VVYaOowDETDc++ZRoe0dTIDGbAhCjKQAx
      l2UpADFYlikAMdtjzwI1bvwEu1Sb1VjkEsmX92c9hBfisQB6r/0NreVoVmORSyTq/HbWQ3gh
      NAUSo50awNa9/+NoZ+NcO/ZGw4eXx8M+afrN215nWUaaJNPLaUoSP/lBCSIvwqmvBHeP9ymU
      ynRbh5QqVXqtI5av3uB4d5O5xSVsy2bQbTPfWCbwRtx860+588G/0bxynVG3Q3WxTr99zKt/
      8i4bn35MsVwlXywRTyaEgYfj5vCGA4qVCpW5BeJowqjfpVZfolAssXbj9ov+OYihTn0EsB2X
      OIpp729zvLvF2qu3Odre4Gh7g1KlipvP097fptc+4mDzPqE3prW/xbB7QmN1nVG/i5vLEwYe
      geeRpiknh3u09rdZXH6F8lyNfLFEe3+H9v42oe+xcvVVoknI0c7mC/4RiMmsLMuyr794/26H
      49HzWwSHvoftuOTy+ee2T3kx/rrzWxY/+c2sh3ExCjVGm78k2t652JPhCqXyszcSmSGdDSqn
      ahV/wuHi3856GBfCzZdZYzy9POOxyCX12WHEp3ee78ejXhalEvzqwWW9DiBGUwBypuXVVV69
      dWt65qRtk8t984TGXO2HnTZTLJXI5Z7PJ0TO1Wo0lpaoVL75lMpCoUipVPpO368pkJwtg067
      zetvvMFoOGSuVqO5vMLO1hb5fJ7hYEBzZYVGY4koirAdm+WVVQ729oCMRnOZXrdLksS8sn6F
      o8MDCoUi+7s7LK+uEccRw8EA27ap1eaJ4xjHdWk0Gniex2g45Or162xtbpClGUEQsLq2RhiG
      pEnCYNBnYbHOJAyJogm+71OvN7Adm72dHQb9/pl3TwHI2SyoLy1xuH9A4E/XBIEfEMcRSRKz
      WK/jOC6TaMJJqwXAJAzJFwqMRyNOWi3CMKR9fAwZjEZD5hcWCIOQOI4Y9Hq0jo9Zv3qVMAzp
      nLRxHBffG5OmKY7jsr25QffkhEG/z9r6Ou3WMWEQUluYx/c8RsMRkBH4Pjdff53RcIjvf7f1
      y4W+DiAvL+erD/n0w98/czvbns6iHz3V5evrv33ds/bzfbY/j1KpxK/i7OJfB5Afv6cdtN/3
      YH5RB/+3aREsRlMAYjQFIEbTGkCM1PjHfyLzfAUgZrJiCyuyNQUSsykAMVacJApAzOU6jgIQ
      sykAMZoCEKMpADGaAhCjKQAxmgIQoykAMZoCEKMpADGaAhCjKQAxmgIQoykAMZoCEKMpADGa
      AhCjKQAxmgIQoykAMdr/A/lF+PPok7fKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Plant Sub-C' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASdklEQVR4nO3dyXMc53nH8e/0rMCs2EmCAAiQIEFS4CqGohaLMlOyZEsqRqU4OaTig/+a
      nHNLXMnFFVf5kIPLJkPbimS5JMqOKZgSKa4gCAyWwcxgMPs+/eYACSKIfdDAkHifz01gT/c7
      qvc33U/3+/ZrU0ophNCU0egGCNFIEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIA
      oTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBakwAIrUkA
      hNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYB
      EFqTAAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBakwAIrTka3QAhGmFqaoo7d+7IGUDo
      aX5+nnPnzmFTSqlGN0aInVar1bhx44YEQDz7lFKoag0MhWF3WrpvqQFEQymlqKbzlOdSlONp
      yvEkpeg8lWQOs1TBLFeolSqYqkCk/5fgVDicXuwuLw6nl+bAfrzBPryhfpoDPTT59uHyBDd8
      fAmA2FFKKSrJLPnHEXIPp8iNTlNJpFE1c83P1YwK1UoOZVaolFKLf0/O/nXJdobDgy80QNu+
      c7TufZFQ5wlcTS2r7lcugcS2U0pRnkuT+uIByZH7lONpMNfu8E+rGSVmBn6Oslc29TnD7ibU
      OUz34ffo7Hsdl2dpGCQAYttUc0VSIw9IjTwgPzELZv1drd4APMmwu2nff4Geofdp3/8yht0l
      ARDWq6TzzH1yk8TntzELZUv2aUUAntQc7GPgxE8kAMI65bk08U9ukvzzXcyyNR31W1YH4FtS
      BIstM0sVYv/7BfE//BVVqTW6OZsiARB1U0qRuTXGzK8+pZLINLo5dZEAiLpU0jmmfvkx2Tvj
      jW7KlkgAxKZl74eZ/K8PqWbyjW7KlkkAxIapWo3o728Q+90N2CX3TiQAYkOq+SKTP/8d2Xvh
      RjfFUhIAsa5KOsf4v/2a4sxco5tiOQmAWFMpluTxv/+ayly60U3ZFhIAsar8RJSJ/7iyK4rd
      1ciMMLGiUizJxH9e3dWdHyQAYgWVTJ7xn/2GajrX6KZsOwmAWKJWKDH+s99QjqfW33gXkACI
      Rco0mfzFhxQnY41uyo6RAAhgYVxP/A83ydx+3Oim7Ci5C2Sxb0eXK6UwjNV/X54ehW6z2dbd
      dq1ttqowPkv0f/68bft/VkkALJZKpYhEIuTzeQzDoLe3l4mJCQKBAMVikXA4TE9PDx6Ph/v3
      77Nv3z5CoRClUolSqcSBAweIRqO43W6i0Si9vb18+umnvP7660xPT9PS0kI6ncYwDILBIKOj
      owwODjI5OUl3dzfJZJJ8Pk84HKa3t5fOzk5SqRSGYeByuYjH4wwPD+N0fvd2hWq2wOQvPlx4
      84JmJAAWCwaDfPzxx3R3dzMyMsL09DRer5eRkRH6+/vp6elhbGyMdDrNoUOHePjwIaVSCb/f
      j2EY+Hw+xsfHicViDA4O8tFHH9HT0wNALpcjGo3idDq5e/cug4ODOJ1Orl27RiKR4PTp0wSD
      Qf74xz/yyiuvUKlUuHXrFna7Hb/fD8Djx4/p7++npWVhbqxSiplffapN0fs0CYDFbDYbr776
      Ki0tLbjdbqrVKvfu3ePSpUu4XC6y2SxDQ0P4/X4ikQhvvvkm5XKZeDyOaZp0dXVhGAZHjx4l
      GAxy6NAhxsbG8Hq9FItFTp48idvtpru7G4fDwZ07d3jnnXeYmpqir6+PWq3GpUuXaG1tpVqt
      MjAwQDKZpLOzE6UUbrebQCCw2N7c6DSpkQcN/D/WWDIl8hmSz+dpbm7eseOZlSqP/vW/KU7F
      d+yY9ZIpkbvc3bt3uXv3LkNDQ8zMzPDGG29w8+ZN8vk8c3NztLW1MTc3x9tvv83Vq1cZHByk
      XC4zPDxc9zET179+Ljr/dpIAPCPa29vJ5XL4fD4qlQrFYpHr168TDAZxu93E43H6+/splUpU
      q1VmZ2fx+Xx1H6+aKxD7/V8s/AbPJwnAM6JUKuH1ehev1x8/fsxPf/pTIpEIo6OjDAwMMDU1
      RVNTExcuXCCdTi+5lt+sxPWvqeWKFn6D55PUABqqFUo8+JdfPFcD3bajBlDIk2Atzf/57nPV
      +beDAnKefrkE0o1ZqZL47Fajm9FQCsh6Bhjb+xMJgG6y98PaPvSCbzv/Qcb2/jOm4ZEA6EQp
      RfKGvg+9ADLNRxjr+ieU4QLkLpBWzEKZ7L2JRjejYZLeYcY7/wFlfDcOSgKgkfTtMcyiNW9r
      ft7Me4eZ6PpHlG1pl5cAaEIppeWYHwUkfSeZ6Pzxss4PEgBtmOUq+fHZRjdjRykg4T/HZMfl
      FTs/SAC0UZyKa3X5o4B44GWm2t8Bm33V7SQAmsiNTjW6CTtGAfHgK0y1vQO2tZ/1SgA0oJQi
      Nzrd6GbsCAXEgq8x3fbDdTs/SAC0oKq1Xflez6cpYDb0fSKtb8IG509LADRQy5eoZQuNbsa2
      UtiYaf0B0dDFDXd+kMFwWijHk41uwraqt/ODnAG0UIrt3rE/CoPp1reIhb636c4PEgAtlKK7
      8wxgYmeq/V3mAi/V1flBAqCF3Tj238ROuON95v1n6+78IDWAFszS7noAZlXnBzkDaMEsWfsq
      kUYysTPR+fckfae23PlBArDrKaWo7ZIhEKbhZrzr70j5XrBsn3IJtNspUOVqo1thiZnWH1ja
      +UHOAHrYvpdK7wjTYWOy1cWsZ9jyryJngF3OZtgw3M71N3xGlQNOYmda+boYpTpv/e1cCYAG
      DLer0U3YNAUUOjwkXgiRqZVIplKYKeuXapVLIA08b2cAZYNsj5dsrxcMG9OPIyilUBXri3kJ
      gAbsnufnDGDabaQGAxQ73GCzUa1WiUajAKiy9bdzJQAacLbW/w7RnVR1GySPBqkEvgtsLBan
      /E3Hr6XTKNPEtsbSU5slAdCAuyPY6Casq+x3kjwapOb5bvqiUoqp6Znv/rtYQpUr2Dxuy44r
      AdCAuyPU6CasSgHFdjepwwGUY+kveyaTIZvNPLGxwsxkMCwMgNwF0oCzLQDGs/cwQAHZXi/J
      oeCyzg8wNT3D0+8ur1l8J0gCoAG7y4kzWP9iGtvBNCA5FCDb510xnOVymVhs+eo1Vt8KlQBo
      wOaw03ygq9HNWFR1GySGWyh2Nq06oG02GqVWW75say2dXrbG8lZIADThPdjd6CYAUPY5SJxs
      pRJc/dasaZrMTEdW/DdVKKLK1j0PkCJYE80D+xp6/LWK3aclk0ly+VUm8ZgmZiaL4bamEJYz
      gCZcbQGcocbUAYvF7tGVi90l2z5163MlVtYBEgBNGA473kM7fxlkGpA68k2xu4EJLMViiURi
      fs1tainrJvlLADQSPHVoR49Xcy0Uu4Wu1Yvdp81EIpimueY2ZjpjWSEsAdCI91A3zpaduQyq
      eB3MnVq72H1arVZjNrL+G6zNfMGycUESAI0YTgeB4YPbfpxim5u5ky1LhjVsRCKRoFgqrb+h
      aWJms3W2bikJgGaCp7YvAArI9DQzf2z9YnfZZzdQ/D7JqkJYAqCZpp5Omgf2Wr5fZUDqcIDs
      AV9db2vI5fIkkxuf8VVLWlMISwA0YzMM2i+etnSfNZdB4oUWCl2eul9VEolElo37WYtVhbAE
      QEP+oR7ce9ss2VfF62DuZAvlkKvuzl+tVonMRjf1GTOfR1W2XghLADRks9tpv3hqy/sptroW
      it2mrQ0oiEZjVDbbmb95IrxVEgBNBU8exN3VUtdnFZDd38z8sdCmi91l+1KKmcjK437WY0Uh
      LAHQlOF0sOe9Vzb9ziBlQGrQT6bfZ8kcg0wmQzqdWX/DFVjxRFgCoDHfkR4CJzZ+W3Sx2N2z
      8Se7a9nsrc+nWVEISwA0ZrPZ2POjCxgbeGuEFcXusn1WKitOetkoM5eHLRbCEgDNudoCdFw6
      s+Y2xVYXcye2Xuw+LTK78qSXDTNNatncltogARC0fe8kviM9y/6+WOweD6Gc1nYV0zSZman/
      8mdxP1sshCUAAsNhp/vHb+AIeBf/tqTYteiS50nJZJJ8fusrV271ibAEQADgDPno/vFFMGzU
      nNYWu0/bavH7JHOLc4QlAGKRb6iXtrfPMXfK2mL3aaVSibm5hCX7WiiE61//QAIgFtlsNva8
      cZY9Q4PbepyZmYh1b3bY4tBoCYBYwmazMXTiJB17t2cSvWmazGxg0stm1NL1F8ISALGMYdh5
      4cw5Qq3WDJh7Ujw+R2kjk142oZaUAAiLORwOTp1/mVBbu2X7tLL4fZKZqf+JsARArMrpcnHm
      pVcsuxzK5Tc36WWjzGwO6nygJgEQa7I7HJx48TzdvQe2tB+lFDMz9Y36XFetthCCOkgAxLoM
      w+DoqTMMHDmKrc5bo7VajYjFxe+S/ddZCEsAxIbYbDYODh3j9IVXcTc1bfrz0ViManX71iuu
      d0iEBEBsSltHJ+e/933au/Zs+DNKKaZXedmtVWqp+p4ISwA0MDk5SSQSWfEXOJP5bjLK7OzC
      JUo4HF62XSwWI/LNzC23x8Op8y9z+IUTOBzrr0CZyWSWHGc7mNlsXYWwTVn5snXxTBoZGaFa
      rRIOhzFNE6/Xi1KKL7/8kr6+PoaHh7ly5Qpnz57FMAycTifXr1/n8uXLRCIRHA4HTqeTRCJB
      KpXigw8+WKwFioUCD25/RWRqeWhg4df/zt17zG5y0ns9ml97GXtwcwsCyhlAA/39/dhsNvbu
      3cvhw4dJpVJUq1VeeuklhoaGKBQKDA0N0dzcjMvlIhQKceLECVpaWhY7v9vtZu/evTidziXv
      7vQ0NTH84t9w9uXX8AWWL8a31Ukvm1HP8klyBtCMaZrcuXOHwcFBXC5r1w9WShGLTPP4wX1S
      8wuD3cLhSR6OPrL0OKtx9vXgGT6+4e3tNkMCoCOlFJ999hk9PT08evSIY8eOkc/n6e3tZWJi
      gn379hGPL/xqt7W14d7kYhRKKeais4zdv8tvr/2WXG5rs7Y2ymgJ0fzy+XVv1ToMg2Nd+zjf
      1y8rxOhIKcXDhw85dOgQBw4cIJvN8qc//Ylarca9e/cIhULcuHGDUqnExYsXNx0Am81Ge9ce
      2jq76B0c4uYXN/hy5AsS8e29FDIzWaiZ4Fj+Ul7DZmOPP8Dw3v0c6ezC61r4ThIATfn9fkZH
      R2lubsbr9ZLP5wmHw8RiscVC2W631/3gCxaC0LVnD2/+8Ef87VtvMzkxwchf/o/R+/dIJBKY
      W5kPvJJqFTOfxx7wA+C02+ny+Rlo62Cocw+tzd5l30cugTSVyWTw+Xxb6uD1UkqRnJ9nfOwR
      Yw8fEh4fJzmfoFwur7s4xmrsdjtuj4d9F85zcOgovaFW9gaCeJxr36aVAIhnQrVaJZWcZ34u
      QSwWJZ1MUi6XKZWKlIpFyuUyNmx4mjw4XW7cbhceTxMtbW20d3QQamnF5/djt29uTQIJgFiR
      Uop0Oo3f78cwrLtbXqvVMAxjxTOPUgrTNDfdibdCagCxounpaT7//HMuXLiAUgqv18v4+Dg9
      PT2Mj48TDoc5ffo0iUQCn8+HaZoUCgU6OzvJ5XLE43FefPFFbt++TVdXF6Ojoxw5coQPP/yQ
      999/n1u3buH1LlyT5/N52traePToEW63myNHjlgevNXIGUCsKJ/P88knn+ByuUilUgSDQb76
      6is6OjooFAocPXqUQqHA5OQkx48fx+Fw8NFHH9HX18drr73GlStXuHz5MteuXcM0TY4fP879
      +/fp6Ojg7Nmz3Lhxg3K5vBik9Ddvd7Db7WQyGd56660dqU8kAGJFlUqF8fFx9u/fT6VSwTAM
      YrEYra2tRKNRWltbAZifn6e7e2H51dnZWQKBAMFgkEePHjEwMMDU1BSBQACPx0OlUmF2dpaB
      gQHC4TBOpxPDMAgGF54gT09P43K5KJVKHDy4/WuZgQRAWKBYLOJwOHA4nr8r6uevxeKZc/Xq
      VQYHBxkfH6erq4vJyUkGBgZ48OAB7777LleuXOHw4cNUKhVOnjzZ6OYuIYPhxJZ1d3cTj8dp
      aWnh1q1bnDlzhmKxiGEY1Go17HY7kQ0sgN0IcgYQW1apVBaL4/fee4+vv/6aAwcOUCqVcLlc
      XLhwgUwmg9/vb3RTl5EaQGhNLoGE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBakwAIrUkAhNYk
      AEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqT
      AAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBa+39tNG9IkT4zQAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Plants by Cty' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Product Detail' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Source Details' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Supp Info' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Sub' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEA0lEQVR4nO3az24bVRxH8a/tscdO0pTaTQCprVRVqooU4D3hSfo0rEBtlQoSVVCiKn9q
      x/bYYw8LWATJsKI20jmf3Z3V7y6O5mrutJqmaSJBtXc9gLRLBiC04u7i9OXLjM/OdzWLtHV/
      C2B8dp7rV692NYu0dR6BhFZsejj8+iRpmixvb9Os15n9fpH+aJTuwUHmHz6kXfYy/fW3bc8q
      /ef+4Q3QSnV9k06vzMGjRxmenKTd7WY1nydJ+qOHWxxR+nQ2vgGu37zJuqpSDAap57NUl1dZ
      VVU6vV6Kvb1Ul5fbnlP6JDYG0NR1kqSezTK581VovVhkOZlsZzJpCzYGMPr2m9y+e5dyOMzH
      n3/J/WfPshyP0ynL3Jye5t7Tp2m1WlmMx+n0+ykPD3Pz9m0OnjzO5Ow8958/z8fT0wyOj7Kc
      zrK4usr6r6ik/5ONAdTTWTr9QRY3N2mWyywnkxT7e2l3e2kXRTplmXZRZO/LL5K0Uk+n6R3e
      y2pe5bOvXmRdVRl8fpzu/n46g70Mjo/TKcs0dZ31qs7Vjz9teZvSZhsDaHe7aVar9IejdHpl
      iv39zC4u0n84Sv/oKMvbSVrtTq5fv07v8DDlaJR6XqWeV2lWq9TTaZI/j1BpmiStlA8eZPr+
      fZpmvc39Sf+qdfdnuB+++96LMKF4ESY0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0A
      hGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZ
      gNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0
      AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCE
      ZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA
      0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQD
      EJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRm
      AEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQ
      DEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQ
      mgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGILTi7uLgyeOkaXY1
      i7R1fwDHmrSw9Nb60wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='USA' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='United States Import Analysis' width='192'>
      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
      /cOyUSlHqNi+lddffRVzZi69zdU8+MDPkSwZtHywmj+t2Mb0ycXc97178Ti7+c59v2TS9Jno
      VDGR1/x7BX6gt7maiupmXn/ht2xrcjFlQi4aUyqpycnMnT+fNKuJB+//GUkpmURDR27gDrt6
      +dPf/kXRhDJ++dMforFms/Zvz9DuhjUrXsUtNyPZa/ndC6/xl6d+SbNbRZYpyo9//iiu3mYe
      fvABhiQLJSUlJCcnM3/+/DERlle8/CRLly7l2/f/NnbDb+ffazbSX7uVp/6xhtzcHFwuJ6Wl
      JaRnFzLnoinUbh9b/oDw89yv/4+N+7oonVjKn597hrAQvPTKP0ixJSr/h+GECvDg4y+ybNky
      7v7sx6mu2s/Sz9zJgo8tIC1JP/ZBnY1rr7yUpZ+4lo72QzFAq2vq8Dn76BjyI4VHx3SPULl9
      K255Kr/62bcAuOKTn+XWG6+kpfYA1990O4suvZLyFDnVtbWUfexaLlu0kJL87KPKeaCqnju/
      8qXYO6WFpNpiCpBuM/Od73yHfTve55Xlbx713fJpc1i8+FJKy8q59spLKSlMIRgCVGauveYK
      br/1Jnp6uqmu7uRzd97G9Td/lkB/IwBzr/gkn7/1RkpKS0lOtjF//nzM2kNRbm783D0sW7aM
      xx/8/pg8k0tmc/tVs3njtb+yqbKaCaWlpGcXMnfGFOqqx5a/3wdpxdP5/j1fIj0tk2vmZvOv
      lavQ5c5Cfx54SFft3slry15j/fotbNq8mWNFBHV219PtDAEhamvr6WqpY/369RyoawYg5Oym
      vtt5SjL0D/Qf9b5vsJUVb64dc5bCaE74+f750jNstWopnDyL6bMv5hv330/VxqlUdxwW0sLV
      w69+/Rsqtm7ga/c/gXffvwFYvGQxf1i1i+kTsklNThr1goovf/O7ZI6yFNSaWMiQeYuu4qv3
      Pkj1xjIaglamT5rMg/c/wiOin20bdjL/TjAYIzz68CP01VQw8xN3c81113Df17/KjLIcPnHn
      d0nWhXjwwV/y2c/ezqpVa8jILaB9fwsCxn9mbcDOY7/+DTU7N7P0mz/HYjfz/a99ixxTmPyZ
      l8dkVh+KNxkaaueXv/oNd971bTLMxw/11Fldye6mXopLChkaHEJrmcyOd/+PZ2xKlh5W/kwd
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='108' name='Val' width='192'>
      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
    </thumbnail>
    <thumbnail height='54' name='Vol' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='YoY Inc' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dy3MbV37o8W83QADEkyQAgqT4AvgUX6Y8tDwpWxNHSaoyo8wimyyyyWoW
      +Y+ySSWVSqZuNrlTM3PLNxnfjGxHfkiWRUl8E3wTAAkQ7zca3X0XGiIjjwibUhMSzfPZeFjU
      /HgawEGf/p3fOUfSdV1HEK4o+XU3QBBeJ0M7wHluJrqun+vfG/33X1c8I2NehtfQaEZfs6Ed
      QFXVc/37er1u5J9/4+Opqmp4Bzjva/5tjL7mfD5vaDyj22c2NJogfEO+VCa8HzEuoA5I//Pj
      /NQEkiSh6zpHR0f09vaeK9yZHUDXdRYXFykUCszMzLC0tERnZyd+v5+1tTVGR0fJZDKk02kW
      Fhaw2Wwve0nC95iug6IY+639TZqm8etf/5rl5WV+9rOf8e///u/09PRw584dFEXh5z//OVar
      ldu3b/OrX/2KmzdvkkqlWFtbaz4Eeuutt+jp6SEajTI/P4+u6ySTSd577z3i8Tgmk4nJyUlS
      qdSFXqAgNKNpGrVajZGRETRNQ9M0JicnkWWZWq2G1WrFZrPx2WefMTAwgM/nQ1EU/uZv/qZ5
      B9ja2iIQCOB2u6nVamiahq7r1Go1ZFmmXq+jKAqyLJJJwusjyzK3b98mlUpxfHzMj3/8Y776
      6itKpRLlchmfz4fZbEbXdYLBIB9//DHVapVCoXB2B9B1nXg8zvLyMk6nk+3tbTweD/39/Tx+
      /JiBgQEcDgfRaBSv19vK6xWE5+i6zv3798lms3i9Xu7fv4/X62VtbQ1FUchkMkiSxJ/8yZ/w
      9ddfMzExwcDAAHfv3kUyciKsXq9jNn+352pd16nX67S1tRn151EU5Y2OV6/XkWXZsDvm6e3+
      u77m34XR15xMZzhJZQyLp+s6kvQ/T8HjoaHGQ3A2m6Wjo6Pxu5OTE7xe73P//ptEFki4UGZZ
      YmJk2LB4iqJgNpv/4EMtSdJzH34An8/37e0zrGWC8AK6rpNKpV/4O7fb1Rib67r+Wp4lm3aA
      eDxONptlZGSE3d1durq6cDgcbG1tEQwGqdfrjYcMQXgRpa6SSJy88Hc2mw2z2cznn39OMpnk
      zp07rK2tEQqFsNls6LrO48ePGwmXSCTC8PAw09PTLC0tMT09/cqdpulDcK1WA2BtbQ1d1wmH
      w2xubuJ2uwmHw2SzWRKJxCs1QLjaSqUSjx8/xuv1kkql2N/fJ5vNArC7u0sikaC/v5+xsTFG
      RkbIZDKsra3x4YcfomnaK//9MzuAJEnY7XbgWU/t6emhvb0dSZIIBALouk5fX59IgQqvpL29
      nZGREe7fv4/T6WRwcLAxvj85OSEcDvPhhx9it9uJRCLMzc2xurrK4OAgiqK88t8/89OraRoP
      HjygVCphtVpZXFykWCzS1tbGgwcPsFgshMNhtra2SKdfPMYThG9Tq9WIxWLUajUODg747W9/
      yyeffMLBwQG9vb2NOahEIoHL5UKSJEwmE0tLS4aMPs5Mg+q6TqVSQdd1rFZr4+nbZDJRqVSw
      Wq2NyTGLxYLZbBZp0G9xFdOgiZPkmc8Aw0ODtLfbiMViVKtV+vv7KRaLSJLE6uoq77zzDpVK
      BZPJ1GjT6fWeftaapTi/CzEP0MJ4V7ED5PP5M+NZLJZzvxZnpUFflkiDChdK1/U3ulBSdADh
      QmWLFZ5u7BkW7xvV0OdiMpn44Y0pAKLRKIFA4NvLofP5PFNTU6ysrODxePD7/WxubhIMBsnl
      cqRSKebm5v5gFk4QADRNRzUgXWmI3/WcSCTCP/zDP/DHf/zH314OHQgEiMfj3LhxA1mWyWQy
      vPfee2SzWaanp+nt7RWpUOFSqdfrWCwWhoeHm3eAzc1N+vv7cbvdlMvlxpK+SqWCJEmEw2F6
      enpwuVytarsgvDK/38+PfvQj7t2713wmOJVK8eTJE5xOJ4eHh3i9XgYHB1leXubatWtkMhme
      Pn3amLkThMugVCrx3//93wwPD4s0aCvjXcU0aOQoTq5QNiyepmvI0su9frIsMxEaAJ6lZx0O
      h8gCCRfL7WjnWk+3YfGMmgc4HbaLDiBcqHSuSCSRMyyeqqmYZJNh8Zp2gGg0SiqVYmpqivX1
      dbq7u3G5XKyurjI+Ps7R0RGFQoGpqSlMJuMaJXx/FKt1VrYOX3czztT0IViWZZxOJysrKzid
      TnZ3dxuZoXA4jM/nw2azcXLy4loPQXjTNS2HNplMqKqKw+Ggq6sLm82GLMt0dHQgSRLFYpHj
      4+NG2bQgXDZndgBVVfnyyy9JJBJYLBbu379PsVjEarXy6aef0tbWRjQapV6vUyqVWtlmQTDM
      mc8Asixz586dxs99fX2N/x0MBi+2VYLQImd2AKPKTYWrrc/nZrD3hmHxns01mXj5krjniTSo
      cKFkScJusxgWT1Fk2tqM+9iKDiBcqIN4luXPl153M870reXQuVyOyclJ1tbWcLlc+P1+tra2
      GB4epq+vj48++og//dM/xWq1trLdgmCIpkUVc3NzdHd3k0ql+MEPfoDFYiGfz/P++++Tz+fZ
      2dmhr6/vjT9VRBDO0rQDbGxsEAwGcbvdFAoFFEVB13VKpRKKonBwcMDW1paYCBMuraZDoFwu
      x6NHj5iammJ3d5eenh48Hg/Ly8tcv34dp9NJMpnE4/G0ss2CYBhRDt3CeFexHHr38IhkzriJ
      Uk3TkGUJkQYVLgWvx8Fwf49h8cS2KMKlUqzW2YkZtyvEszuAcWvQmz4DHBwckEqlmJ2dZWVl
      he7u7ueeAeLxOEdHR8zOzuJwOAxrlPD9kcoWWd+Nvu5mnKnpHcBut6PrOisrK3i9XiKRCIlE
      gtHRUba2tpBlmXfffVeUTQiXVtNy6Hq9jqZpuFwu3G53Yys7p9PZ+HeffPIJyWSyJY0VBKM1
      LYf++uuvOTo6wmq18tVXX1GtVnE4HHz66afY7XbDTykXhFY7cwhkMpn4yU9+0vj590/gHhoa
      uthWCUKLiCyQcKF6uhyMDr5jWLx6XfndvIcxz51iT0PhUtEBI0vPxB1AuFCxVIGnX66+7mac
      6VvLobPZLOPj42xsbOB0OvH7/ezs7DAwMEChUKBcLjM/P/9G7wEvCGdpOgSamZkhEAiQz+dZ
      WFjAZrNRLBa5desW+XyeVCplaB2KILRa0w4QDocJhUK4XC5yuVzjTLBCoYAsy3R2djI4OEg0
      +ubO9AlCM003xioWi3z99deNsuf+/n5GR0cJh8OMjo4yMDDA4eEh/f39rWyzIBhGlEO3MN5V
      LIeOJdIcp4zbPr9lxXCCYASnzUzvxLBh8UQ5tHCpJLNFNg5e/UDrUy1bEKPrOru7u6TTaWZm
      ZlhdXcXv99PR0cHy8jLj4+Nsb29TLBaZmpqiq6vLkAYJ3y+lap3tw+PX3YwzNb0DdHR0IMsy
      6+vrBAIBYrEY6XSaiYkJ9vf3uXHjBtvb22JLFOHSaloOXS6XkSQJl8uF0+mkra0NSZIa6wRU
      VaVcLovdoYVLq2k59JMnT4hEIthsNh4+fIiiKLhcLu7du4fb7SYajTI0NCQWxAiXVtNy6L/4
      i79o/NzT8z8LmwcGBi62VYLQIiILJFyogW4P10PXDIunKHWxOa5weaiaTqFcNSxevV7HXDdu
      JWLTDnCeSWLxHCC8yO5xmkdrxm2LYrRvLYfOZDKMjIywtbWF3W7H7/ezv79Pb28vqVSKarXK
      7OwsXq+3le0WBEM0LaqYmpqip6eHSqXCzZs3cTqdVKtVbt26Ra1Wa+wSYWTtiCC00reWQweD
      QZxOJ6lUikqlgqZpZDIZVFVFkiSGh4fJZo0rdhKEVmpaDl2r1Xjy5Akul4tCoUAwGGRsbIzD
      w0OuX79OT08P2Wz2uR0jBOEyEeXQLYx3Fcuhdw5i5MqKYfE0TUWWTYbFE2lQ4UL5OpwEB1yG
      xbuy5dCaplEqlZ7blvFVxVdWyEfOXs5p9OILXdcAybA379nNW0eSjGuj0dfc5vfhmp83LJ7R
      mqZBw+EwmUymsTu0z+ejs7OTlZUVJiYmSCQSlMtlpqamLmxxfL1e57PPPsNms3H37l3+7u/+
      jnv37lGpVHj//ff5zW9+w8TEBG+//TaFQoH//M//ZH5+HpPJxP379/npT3/Kf/3Xf1Eul5md
      ncXtdjdKOYrxOKlw+ELaLTzjMrAzXYSmrQsEAvj9fjY3N+nv7yeVSrG/v8/09DQ7OzsUCgXc
      bveFnhG2tLTEyMgIy8vLvP/++5hMJt555x0sFguapvGTn/yEWCwGwNraGn/0R3/E+vo6y8vL
      3L59m0ePHiFJEn/1V3/F9evXWVlZubC2CpdP03LobDZLW1sbLpeL9vZ2TCYTkiRhs9kwm834
      /X729vao1WoX1sB4PE5XVxd/+Zd/yRdffMHe3h7r6+tMTExgt9t58OABt27dAmjsZN3W1obZ
      bMblcjXGjP/0T/9EOp0W27i02LNh35vrzE+Dqqqsra3hdDoZGRnh0aNHdHR00NHRwb179wiF
      QuTzecxmM4FA4MIa6PP5SKfTfPHFFxSLRQqFAp9//jnd3d309vYSDofRdR2/309PTw//9m//
      xuTkJCaTiX/+53/mz//8z7l//z4mkwmr1Uq9Xr+wtgp/6E0/QfeNT4MqisK9e/d47733SCaT
      z5Vln9I0ja2tLYaGhrBYLGfG2tzcpK2tjeHhYQD2Pv2Uk/WNZq3EqLWnl4ex12wPBbl++7Zh
      8YzOAr3xHeA8xDzAqzP6mnO5HG6327B4VzYNKlxOiqqTSOcNi1dX65hNLVoPoCgKqqpitVqp
      1WqYTCZMJlPjW0JVVVRVxWKxiHJo4YXCkSSfP91+3c04U9N5gLW1NXK5HNeuXSMSiWA2mwmF
      QmxsbHDz5k0WFxepVCrMzc2J0+KFS6npYHR0dJTOzk4URWF+fh6n04nX6yUQCKCqKh6Ph5mZ
      GQqFQqvaKwiGajoEWl9fJxgMUiwWOTo6olwuU6/XqVQqKIpCoVBA13WxGEa4tJqWQ1utVvb2
      9vB4PEiSxOjoKNlsFk3TSKVSBINBLBaL6ADCpSXSoC2MdxXToHvROOmCcYviNVVFNolyaOGS
      6HBYGerrNiyemAcQLpWNaIYvf7NoWDxd1w1NuTdNg66vr5PNZpmdnWV5eRmfz4fX62Vvb4/p
      6WlisRi1Wo1gMGhYg4Tvl0SmwPJO7HU340xNB6ODg4N0d3eztbVFKBQil8thsViwWq3ouk5n
      Z+eFVoIKwkU78w4gSRKJRIL29nZkWW5sgWK1WhsPcWJXaOGya1oOHQ6HsdvtjI2Nsbi4SFdX
      F7FYjHA43CiTODg4wOv14vP5WtluQTCESIO2MN5VTIN+9GCV//dVs5Lz8zG6QF10gBbGu4od
      IJ/P43KJXSGEKyqTL7F3lDIsnq5pSK04JlXXdXZ2dkin041dIfx+P52dnezv7zM+Ps7h4SHx
      eJzZ2VlxTpjwQrW6RvQ4+bqbcaamXamrqwufz8f6+jq9vb3E43E07dkiZ03T8Hg89Pb2kslk
      WtJYQTBa010hisVi45A8h8OB2WzGbrc3xmDlcplarUZ3t3FT3YLQSk3ToEtLS7jdbkKhEA8f
      PsTj8XB0dMT6+jq1Wo2joyNsNhudnZ10dHS0st2CYAiRBWphvKuYBdo+iBHee3NLIUQWSLhQ
      /g4noYG3DYsn0qDCpaLrUK4Ye0ieSVWRzjkdZrO+eOOGph1A0zR0XUeWZTRNQ5Ke7Wx8uoPw
      aUZIlmWxK4TwQplCib3I698V4oc3pjGbTOzt7eH1enE6nc/uJmf9H3Rd58mTJ2SzWYLBIDs7
      O9hsNkKh0HOb0J6cnDAzMyOWRQpvvHQ6zT/+4z+ysLBAZ2cnW1tbzecBJicn6e7uplKpsLCw
      0NgVore3F0mSGh96m83WkgsQhFdhs9nweDw4HI7GgY/fekje0NAQTqeTk5MTyuVyI3ujKAo2
      m43BwUHS6XSrrkEQXpqu6ywsLBCLxVhbW+OnP/1p810hNE1jdXUVt9tNpVIhFAqRSCQoFAoc
      Hh6STCYplUov3LBWEN40FouFra0tRkdHuXPnDl988YWYB2hlvKs4D5A4SVFRjNuS/mUPyesL
      +DDJ8h+8ByINKlwoS5sJv6/LsHivOg/wzS8L0QGEC3WcrfDJk13D4mmajiy3aFeIzc1Nstks
      MzMzjUPyTneFuH79OpIk8fjxY6anpw29bQrfH6lckc2D+OtuxpmaDkZ7e3vx+/2Ew+FGtkeW
      ZcxmM7quc3h4SKFQQFXVVrVXEAzVtBw6k8lgsVhwuVzYbDZMJlPjsLxarcbS0hKZTEakQYVL
      q2k59Pr6Og6Hg9HRUR49ekRnZyexWIzNzU0UReGDDz5obJ4rCJeRSIO2MN5VTIM+WN7h/uqu
      YfGM3hZCZIGECzUx4OWdaeO2zhTl0MKlUlMUiqXyK8ext9supOK4aQeo1WrU63Xa29spl8uN
      E9ir1Wrj4LxarYbdbsdk4J7twveHomrsb+28cpy3pieRgeXlZQYHB+ns7HxWzPa7bTsVRSGb
      zeJ2u9F1nUKhQGdnJ5VKhba2tjOHdU3nATY2NigUCgQCAY6OjpBlmVAoxObmJu+++y6Li4uN
      rRNFBxAu2vHxMb/61a+4desW77//Pv/yL//CxMQEt27dYn9/n+XlZRRFwefzEYlEmJyc5PDw
      kIGBAW7cuPHCmE2fxkKhEG63G1VVmZuba5RDd3d3N4rlTitEBeGiuVwu2tvb0TSNtbU1ZmZm
      GgmFwcFBEokEgUCAmzdv0t3dTTAY5NatW02TDk2HQGtrawwPD1OpVIhGo5TLZRRFoVgsUiqV
      GB4eJp/Pk06naW9vN/ZqBeEbVFVlYmKCWCxGKpUiFoshSRLz8/OkUin+7M/+jM8++4xUKsXM
      zAwWi4VIJEIymURV1ReOUpoOgZxOJ7FYjGAwSK1WY2xsjHw+j9lsJpvNYrVaMZvNohxaaAmb
      zUY2m+XGjRtMTU2hKAq5XI67d++ysLDA48ePuX37Nnt7e2xsbCBJEgcHB6iqiqIoL+wAYh6g
      hfGu4jxANpenZkA5tK+rA0mSqNVqtLW1NTJCuq431q2/DJEGFS6ULIHf22lYvG+mQk83anhZ
      ogMIF6pQqhA5PjEs3jcPyevt9uFxu9B1nUwmQ2fn+Tpb02eAtbW15w7JOz0JZm9vj5mZGaLR
      KNFolLm5ObEwXnghTdfJFYoXFt/b2YGu63z88cc8ePCAn/3sZ/z617/G7XZz584dFEXhF7/4
      BT09PQwODvLpp58yOzuL3W7nyy+/bJ4GHR4eJhAIsL29zcjICIVCAZvNhs1mo16vE4lEGB0d
      FWsBhNdKVVVisRjz8/MoioLH4+FHP/oRsiwTj8fp6Ojg5OQEu93OD3/4Q6LRKA8fPuSDDz5o
      Xg59fHyM3W7H7XY3Dsk7/e/pQ+ze3h6RSKSV1ysIzzGbzfz4xz/m8ePHpNNpOjo6+MUvfkG5
      XKa/vx+fz0cymcRkMnF8fIzFYqFWq7G8vHx2B1BVle3tbba3t3E6nSwuLmIymYjFYmxtbbGz
      s0N3dzelUgm3293K6xWE59TrdT766CMKhQIAu7u7tLe3s7Ozw/HxMRsbG1y7do2Dg4Nnm2HJ
      MlNTU8/mEUQatHXxrmIaNHocJ540cMHUN8qhB/t66OrwoOs6x8fHz81J7e/v09/f//IzwYLw
      qlz2dvoCxh2gclY5tCRJfzAhOzg4+K3xRAcQLlRVUckljLsDqPXflTQYVBndtAMUi0Wq1Sqd
      nZ1ks1lsNhsWi4VisYjD4SCdTqOqKh0dHVgsFmNaJHyvHCSyPDRyRZjBms4DHBwcUCwWSaVS
      ZDIZNE0jFAqxvb3NjRs3KBQKjVSoOCdMuIyapkH7+/ux2+1IksTU1BROp5Ouri66urqQZZnB
      wUFcLhc+n6+VbRYEw5x5B9A0jaWlJYaGhhpnBpdKJcrlMqlUiq6uLur1Ot3d3YZlNQSh1c7s
      AJIk0dfXR7lcpq+vD4ChoaHGihtFURoLFAThshLzAC2MdxXnAfYjRyi6cSOEsxa2vCyRBhUu
      VKfbgcvlMiye2BZFuFT2jjNsfLVhWLxvlkO/qqZp0KWlJfL5PLOzsywtLT1XDj03N8f6+jrZ
      bJa5uTkcDodhjRK+P6p1lUQ6/7qbcaamg7OJiQl6enoa26FXKhVcLhdOpxNN06hUKng8HiqV
      SqvaKwiGajoEOjw8xO12YzKZGred0/HX758fXK8bdwSOILRS03mA/f19rFYrExMTLC8v4/P5
      iMVi7OzsoCgKsiyTy+W+U9GRILyJRBq0hfGuYhp0dSfK8rZxC6Z0HYzcIlRkgYQL1dfl4Hrw
      HcPiiTSocKnoQCqTNSzeiybCPG4XpovYFyibzTYOwo7H4zidTtrb2xvbT+RyOWq1Gj6f70K2
      rhYuv2K5ymHsYg/Jm58ax2S1kE6nuXv3Lnfu3CGbzZJMJhkfH0eWZZLJJGazGYfDwdLSEi6X
      C6/X2/yk+JOTExKJBJubmxwfH7OyskIqlWJnZ4darUY4HOb4+JhMJnOhFygI30bXdT766CPK
      5TL5fJ4PP/wQVVUbmzgvLi6yvr5ONBrl4OAAk8nEb3/72+bl0H6/H4vFgslkYnR0FIfDQVdX
      Fx6PB1mWMZlMxONxslnjbnGC8LImJibY3d0lkUg0tj4pFovIsswPfvAD2tra0DSNaDTK+vo6
      nZ2dZ3eA015jtVppb29nfX2dYrFIPp/n6OiIk5MTAoFAY42AILxulUqFjo4OMpkMwWAQl8vV
      +IJeWlpiZWWFWq3GzMwMiUSCoaGh5uXQExMTaJqG1+vFarVit9tRVZVQKITN9uzImvHxcUOL
      nQThZYVCIVKpFAsLC4yOjlIqlTg5OcHj8dDd3Y3X66W3txeA6elpVFUV8wCtjHcV5wGy2Ry6
      gQmSFy2KdzsdYndo4U2l02HgxmliHkC4VDLFKo83lgyL17KZYF3Xefz4MYVCgdnZWZ4+fUpX
      VxednZ1sb2/T29tLtVptjLmsVqtxrRK+NxRFpViuvu5mnKnpwGl2dpbe3l4ODg6Ym5tDVVW6
      u7uZmZlBURQAxsfHSSaTLWmsIBitaQfY2dnB6/Xidrup1+tomkY2myWdThMMBhsPYWIWWLis
      ms4Ex2IxVldXcblcbG5u4nQ6SSQSRCIRDg4OsFqt7O/v4/V6W9lmQTCMSIO2MN5VTIPuHh5x
      lDSuUqBla4IFwQhej4PhfuOO0RVpUOFS2TyIE0ntGBZPVVVk2WRYKrRpB0gmk+TzeYaGhjg8
      PMTj8dDe3s7e3h69vb1IktTYPVoQXuTr8BF//78/fd3NOFPTeYBCoUC5XGZ9fR2Ao6MjhoaG
      cDgcbG9v09XVRTabFR1AuLSalkOflj1bLBYGBgaw2+14vV6y2SwDAwNcu3bN0G3qBKHVmpZD
      P3z4EE3TsFqtLC0tUSwWWVpaolKpUCqV2N3dZX9/n1wu18o2C4JhmpZDLywsoOs6TqcTj8eD
      xWJBVVUqlQoWiwVN0/B4POKQbOHSEvMALYx3FecB9qIJMiXjaoFaekaYILyqLpeNoT6/YfHE
      PIBwqfyfL9f5Xx89NCxeS8uhFxcXyefzzMzMsLy8TEdHB16vl52dHfx+P7VajXQ6zdzcHB6P
      x7hWCd8bVUUllSu97macqelg9K233qK3t5dYLMb8/DwAPT09XL9+nba2NqanpxvHJwnCZdS0
      A4TDYXp6enC73VSrVVRVJZVKUSgUGBoaYnt7G5/Ph9vAJW+C0EpNh0CJRIJkMsnk5CRbW1v4
      /X7S6TSJRIJqtUo6neb4+JipqSk6Ojpa2W5BMIRIg7Yw3lVMg/7fz59yd3HbsHi6riFJxh26
      JzpAC+NdxQ6Qz+fFIXmXhdFHcFayWXLHx42fT5ePGvXm6breOKnHKEa/BprF8kZvnNa0A5xu
      fDs2Nsb29jZerxe73c7m5iZDQ0NkMhlKpRKjo6OXtijudPeL4eFhfv7zn/PXf/3XAORyOQYG
      BlhZWSGXy/Huu+8iSRIPHz7E5XIRDAa5e/cuN2/eBOCzzz5jfn6eQqHA2NgYAMVUisijR6/t
      2t4EjsFBeoaHX3czztR0TXC9XsdkMrG6uoosy2xtbZHP5+nr62NnZwen04mu65d6V4hCoUA+
      n+fzzz+nr68PWZaJx+NsbW2RzWZZXV1lfHwcgHg8TjKZZHFxkY8//phr167x8ccf8x//8R+8
      /fbbdHV1sb29jaZpr/mqhO+qaTm0zWZD13XsdjuBQID29nY8Hg/Hx8cEg0Gq1SqJRIL29vZW
      ttlQmUwGh8PBwsICGxsb7OzsMDU1RVtbG8lkkv39fX75y19SqVTIZrOMjo7S29tLuVxmdHQU
      SZJIJBL88pe/ZHt7G4vFgoGPVcIFa1oOff/+ffL5PBaLha+//rpRDp3NZhtnB8iyTLFYbGWb
      DXVa4bq/v4+maSSTSe7evcsnn3yCoih0dHQ0dshwOp385je/YWNjg97eXv71X/8Vq9VKMBjE
      ZrNRKpXEiZnf8KZ/GTQth759+za6rmOxWPD7/ZhMpueGRvDsAo3MGrSa1+vlyZMnfPDBB5jN
      ZmZmZqhWqywsLCDLMmNjY+i6ztOnT5mfn+dv//ZvkWWZtrY2rl+/3igFr1Qq6LrOw4cPDX0o
      vez0N3w4aHga9Ls+DOu6jqqqb0QKr1Ao4HA4/iA7c954iqI0FhABqLUatXK58XtNVZFk+c3O
      AtXrmAx8T0rVKt7ubsPiGZ0GNbQDaJr2nW95p0fXGJk9MjqFZ3hK8AqmQS8inmzgl4ih8wDn
      eSNOO4qRL46u6290PHg2tDRyIuxNv+aLivdG3gHO4/TPGrnLl9G7hl1EPDDumsVr+OpeWwcQ
      hDdBS0sh6vU6jx49wmKxEAqFePr0KSMjIwC4XC7y+TyBQOBcMY+Pj9ne3iYUChGPxykWi0xO
      TiLLMul0moGBgXMNOTKZDGtra42zpI6OjhqZoXK53Dg587uqVCpsbGwwPj7OyQ4tUeYAAALO
      SURBVMkJe3t7jI+PN8buVqv1XKUC9XqdlZUVQqEQqqqyvLzMxMQE9Xodu91OtVrF5/N953in
      9vb2ODw8bJwLp+s6LpcLu91+7li6rrO5uUmhUGBycrKxi0ggEHjpjOHm5iYnJydMT09T/l1i
      4WXbt7W1hc1mo7u7u/l6AKOdphXr9To7Ozu8/fbbHB0dkUgk2NjYeKkNtjweDzMzM2SzWarV
      KtPT0wBsb283HpjOw2azMTc3Rz6fJ5fLMTIyQiQS4fDwkGw2e+430GQy4fF4UBSFbDbLxMQE
      nZ2dRKNRIpEIDofjXPEkScLn81GpVIhEIrz99ttEo1GOj48Jh8MvvUlZJpNplLUfHh4Sj8df
      eoJTURRUVcXv9zcmE4vF4itl/AqFAlNTU7hcLvb3919pAtbr9aIoCpFIpHUdYGNjo/ENbTab
      UVUVi8WCJElUKhXK5fK5HpYqlUpjcu7o6IjR0VF8Ph+rq6skk0nS6fS5XnBFUXj06BHlcpm9
      vT3GxsYwmUyNibJMJnOuzqSqKouLi9RqtUan6e7uJhqNNkpKzjs+XllZIZPJNNKsvz8HUyqV
      qNVq5+7wuVyOJ0+eEAgEODw8JBwOv1Tbft/pg+rp+3z6XrzKuD0QCLC9vc3BwUFjH6qXjXfa
      cTRNa+0zQKlUYnFxEVmWGRkZYWVlheHhYWRZprOzk2QyydDQ0Llinn5o+/r6SCaTlMvlxhDo
      5OSEYDB4rm/t1dVVUqkUPp+vsShodna2MQTq7u4+1203k8nw8OHDxnnKx8fHhEKhRhmzxWI5
      1znL5XKZ+/fvYzKZCIVCbG5uMjY2hqqquN1uCoUC165d+87xTq2vr5NIJBgdHaVeryNJUmM/
      qPPSdZ0nT55QKpWYmZmhXC5TKBTo6+t76T2knj59SjabZXp6mkKhgCRJuFyuc7fvdLIynU7z
      1ltviYdg4WoTc/bClfb/AdnC2PTt/iIfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Yr Sources' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFX0lEQVR4nO3aS28bZRiG4Wc847MTO3EOTdqSQosKSFkgxEEs+YP8FCTWRSzbRaBFrWlJ
      Q+OStHVzIGmcOKfxDAugTdDAgkYTynNfK89YGr2Wvlszn+0gTdNUgKnCeQ8AnCcCgLXo5MHB
      0680HHTPaRQgf6cCGA66GvY75zULkDsegWAtyjp583ZPo42SSqVQs5M1PVsfqN2qaHf/WLVy
      pMXuC01PVDU7VVOlnHkJ4I2QuXrDsKArl0b09Tdd1atFTbWrWnm2q+6Tvq6/3VIYBvq+s67e
      Rl2ff3gh75mBM5MZwNxsQ6u9Pb33TktT7ZqajZK2dg41MV5RrRIpCAJVyqEuTtXznhc4U5kB
      tMcqmhyvqlAIXp5r1Iu6PNPIbTAgD5kBfHvrqS7P1LW9c6QPro3p1p3n+nh+SkfHQ3WWtjQ2
      WlaSporjROOtitY2BpqdritJUl19q5n3ZwD+tcxvgSrlUIP9WFPtqtY29zV/va3exkDNkZL2
      D2IlSapHv+wojhPt7h1pc/tQj5/0dXiU5D0/8FoyA4jjREmSqrva1+HRUJ2Hv0qSVnt7qlcj
      jdSLujbXVL1WVFgoaP76uFqjZbVGS7kOD7yu4OSf4faWvtSw39FwmCgoBCoEr/YAx3GiKAwU
      nDgHvOn+9mvQvypG/GaG/x9WNawRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKxFJw+KpU8Vlq+c0yhA/k4FUNiaUbA1
      cl6zALnjEQjWMgNYeHBPg4MDffdT59T57f5OLkMBeQnSNE3/PIh/WFa6tasbCzdVjCIdx7Fu
      P7yvT96fV61SVaVUUm9zQ/VqVf29PX3x0WcqRtE/XR/4T8tcve9emtPj5081055UPIzVbrZ0
      HMeKwkhRFCkKI4VhqCAI8p4XOFOZdwDAReYdoLO8pHq1qhe7u5psjWl6fEJ3Ht7X3PSsVtef
      6+rFy1pZ66lZb2h6vK317S3NtCfznh14bZmb4M7ykobDoX7sLqlRreno+EjlYkmbO9taWXum
      Gws3lSSJFh7cU2d5SXcfLeY9N3AmMgOYaLbUWV7S3PSsbi/e18paT3cfLWqYJNo/PFSz3tDi
      SleXpi7o5ycrGmuM5j03cCYy9wD9wZ7KxZKiMNTu/kBhoaBKufL7pjdNFQSBUqUK9GoTzIYY
      b6LMPcBIrf7y9Wi9cfrNPxb6ycUPvKn4JRjWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWopMHQaMipel5zQLk7jcrySPXlpgbIwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
